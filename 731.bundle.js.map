{"version":3,"file":"731.bundle.js","mappings":"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","sources":["webpack://personal-static/./node_modules/lodash-es/clone.js","webpack://personal-static/./node_modules/lodash-es/findIndex.js","webpack://personal-static/./node_modules/lodash-es/find.js","webpack://personal-static/./node_modules/lodash-es/_createFind.js","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs","webpack://personal-static/./node_modules/lodash-es/_baseExtremum.js","webpack://personal-static/./node_modules/lodash-es/_baseMap.js","webpack://personal-static/./node_modules/vscode-jsonrpc/lib/common/events.js","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs","webpack://personal-static/./node_modules/lodash-es/defaults.js","webpack://personal-static/./node_modules/lodash-es/_trimmedEndIndex.js","webpack://personal-static/./node_modules/lodash-es/_baseTrim.js","webpack://personal-static/./node_modules/lodash-es/toNumber.js","webpack://personal-static/./node_modules/lodash-es/toFinite.js","webpack://personal-static/./node_modules/langium/lib/syntax-tree.js","webpack://personal-static/./node_modules/langium/lib/utils/stream.js","webpack://personal-static/./node_modules/langium/lib/utils/cst-utils.js","webpack://personal-static/./node_modules/langium/lib/utils/errors.js","webpack://personal-static/./node_modules/langium/lib/languages/generated/ast.js","webpack://personal-static/./node_modules/langium/lib/utils/ast-utils.js","webpack://personal-static/./node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js","webpack://personal-static/./node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js","webpack://personal-static/./node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js","webpack://personal-static/./node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js","webpack://personal-static/./node_modules/langium/lib/utils/regexp-utils.js","webpack://personal-static/./node_modules/langium/lib/utils/grammar-utils.js","webpack://personal-static/./node_modules/@chevrotain/utils/lib/src/to-fast-properties.js","webpack://personal-static/./node_modules/lodash-es/_baseSlice.js","webpack://personal-static/./node_modules/lodash-es/drop.js","webpack://personal-static/./node_modules/lodash-es/assign.js","webpack://personal-static/./node_modules/lodash-es/pickBy.js","webpack://personal-static/./node_modules/lodash-es/isRegExp.js","webpack://personal-static/./node_modules/lodash-es/_baseIsRegExp.js","webpack://personal-static/./node_modules/@chevrotain/gast/lib/src/model.js","webpack://personal-static/./node_modules/@chevrotain/gast/lib/src/visitor.js","webpack://personal-static/./node_modules/lodash-es/_baseSome.js","webpack://personal-static/./node_modules/lodash-es/some.js","webpack://personal-static/./node_modules/lodash-es/includes.js","webpack://personal-static/./node_modules/lodash-es/_arrayEvery.js","webpack://personal-static/./node_modules/lodash-es/_baseEvery.js","webpack://personal-static/./node_modules/lodash-es/every.js","webpack://personal-static/./node_modules/@chevrotain/gast/lib/src/helpers.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/rest.js","webpack://personal-static/./node_modules/lodash-es/uniq.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/first.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/constants.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/follow.js","webpack://personal-static/./node_modules/lodash-es/negate.js","webpack://personal-static/./node_modules/lodash-es/reject.js","webpack://personal-static/./node_modules/lodash-es/indexOf.js","webpack://personal-static/./node_modules/lodash-es/difference.js","webpack://personal-static/./node_modules/lodash-es/_baseDifference.js","webpack://personal-static/./node_modules/lodash-es/compact.js","webpack://personal-static/./node_modules/lodash-es/head.js","webpack://personal-static/./node_modules/@chevrotain/utils/lib/src/print.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/reg_exp_parser.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/reg_exp.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/lexer.js","webpack://personal-static/./node_modules/@chevrotain/utils/lib/src/timer.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/tokens.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/lexer_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/lexer_errors_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/scan/tokens_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/errors_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/resolver.js","webpack://personal-static/./node_modules/lodash-es/flatMap.js","webpack://personal-static/./node_modules/lodash-es/_arrayAggregator.js","webpack://personal-static/./node_modules/lodash-es/_baseAggregator.js","webpack://personal-static/./node_modules/lodash-es/groupBy.js","webpack://personal-static/./node_modules/lodash-es/_createAggregator.js","webpack://personal-static/./node_modules/lodash-es/dropRight.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/interpreter.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/lookahead.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/checks.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/exceptions_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/recoverable.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/keys.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/llk_lookahead.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/looksahead.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/cst/cst.js","webpack://personal-static/./node_modules/chevrotain/lib/src/lang/lang_extensions.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/cst/cst_visitor.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/gast_recorder.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/parser.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/utils/apply_mixins.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/grammar/gast/gast_resolver_public.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/tree_builder.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/lexer_adapter.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_engine.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/recognizer_api.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/error_handler.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/context_assist.js","webpack://personal-static/./node_modules/chevrotain/lib/src/parse/parser/traits/perf_tracer.js","webpack://personal-static/./node_modules/chevrotain-allstar/lib/atn.js","webpack://personal-static/./node_modules/chevrotain-allstar/lib/dfa.js","webpack://personal-static/./node_modules/chevrotain-allstar/lib/all-star-lookahead.js","webpack://personal-static/./node_modules/lodash-es/uniqBy.js","webpack://personal-static/./node_modules/vscode-languageserver-types/lib/esm/main.js","webpack://personal-static/./node_modules/langium/lib/parser/cst-node-builder.js","webpack://personal-static/./node_modules/langium/lib/parser/langium-parser.js","webpack://personal-static/./node_modules/langium/lib/parser/parser-builder-base.js","webpack://personal-static/./node_modules/langium/lib/parser/token-builder.js","webpack://personal-static/./node_modules/langium/lib/parser/value-converter.js","webpack://personal-static/./node_modules/langium/lib/utils/promise-utils.js","webpack://personal-static/./node_modules/vscode-languageserver-textdocument/lib/esm/main.js","webpack://personal-static/./node_modules/vscode-uri/lib/esm/index.mjs","webpack://personal-static/./node_modules/langium/lib/utils/uri-utils.js","webpack://personal-static/./node_modules/langium/lib/workspace/documents.js","webpack://personal-static/./node_modules/langium/lib/validation/validation-registry.js","webpack://personal-static/./node_modules/langium/lib/validation/document-validator.js","webpack://personal-static/./node_modules/langium/lib/utils/disposable.js","webpack://personal-static/./node_modules/langium/lib/references/linker.js","webpack://personal-static/./node_modules/langium/lib/references/name-provider.js","webpack://personal-static/./node_modules/langium/lib/references/references.js","webpack://personal-static/./node_modules/langium/lib/utils/collections.js","webpack://personal-static/./node_modules/langium/lib/references/scope-computation.js","webpack://personal-static/./node_modules/langium/lib/references/scope.js","webpack://personal-static/./node_modules/langium/lib/utils/caching.js","webpack://personal-static/./node_modules/langium/lib/references/scope-provider.js","webpack://personal-static/./node_modules/langium/lib/serializer/json-serializer.js","webpack://personal-static/./node_modules/langium/lib/service-registry.js","webpack://personal-static/./node_modules/langium/lib/workspace/ast-descriptions.js","webpack://personal-static/./node_modules/langium/lib/workspace/ast-node-locator.js","webpack://personal-static/./node_modules/langium/lib/workspace/configuration.js","webpack://personal-static/./node_modules/langium/lib/workspace/document-builder.js","webpack://personal-static/./node_modules/langium/lib/workspace/index-manager.js","webpack://personal-static/./node_modules/langium/lib/workspace/workspace-manager.js","webpack://personal-static/./node_modules/langium/lib/parser/lexer.js","webpack://personal-static/./node_modules/langium/lib/documentation/jsdoc.js","webpack://personal-static/./node_modules/langium/lib/documentation/documentation-provider.js","webpack://personal-static/./node_modules/langium/lib/documentation/comment-provider.js","webpack://personal-static/./node_modules/langium/lib/dependency-injection.js","webpack://personal-static/./node_modules/langium/lib/parser/async-parser.js","webpack://personal-static/./node_modules/langium/lib/workspace/workspace-lock.js","webpack://personal-static/./node_modules/langium/lib/serializer/hydrator.js","webpack://personal-static/./node_modules/langium/lib/default-module.js","webpack://personal-static/./node_modules/langium/lib/languages/grammar-config.js","webpack://personal-static/./node_modules/langium/lib/parser/langium-parser-builder.js","webpack://personal-static/./node_modules/langium/lib/parser/completion-parser-builder.js","webpack://personal-static/./node_modules/langium/lib/workspace/file-system-provider.js","webpack://personal-static/./node_modules/langium/lib/utils/grammar-loader.js","webpack://personal-static/./node_modules/lodash-es/flatten.js","webpack://personal-static/./node_modules/lodash-es/map.js","webpack://personal-static/./node_modules/lodash-es/_baseSet.js","webpack://personal-static/./node_modules/lodash-es/_basePickBy.js","webpack://personal-static/./node_modules/lodash-es/_baseLt.js","webpack://personal-static/./node_modules/lodash-es/min.js","webpack://personal-static/./node_modules/lodash-es/last.js","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs","webpack://personal-static/./node_modules/vscode-jsonrpc/lib/common/is.js","webpack://personal-static/./node_modules/lodash-es/toInteger.js","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/mermaid-parser.core.mjs","webpack://personal-static/./node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://personal-static/./node_modules/lodash-es/_baseHas.js","webpack://personal-static/./node_modules/lodash-es/has.js","webpack://personal-static/./node_modules/lodash-es/isString.js","webpack://personal-static/./node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://personal-static/./node_modules/@mermaid-js/parser/dist/chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs"],"sourcesContent":["import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n","import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n","import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  MermaidGeneratedSharedModule,\n  PacketGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/packet/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/packet/tokenBuilder.ts\nvar PacketTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PacketTokenBuilder\");\n  }\n  constructor() {\n    super([\"packet-beta\"]);\n  }\n};\n\n// src/language/packet/module.ts\nvar PacketModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PacketTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPacketServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Packet = inject(\n    createDefaultCoreModule({ shared }),\n    PacketGeneratedModule,\n    PacketModule\n  );\n  shared.ServiceRegistry.register(Packet);\n  return { shared, Packet };\n}\n__name(createPacketServices, \"createPacketServices\");\n\nexport {\n  PacketModule,\n  createPacketServices\n};\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\n\n// src/language/generated/ast.ts\nimport { AbstractAstReflection } from \"langium\";\nvar Statement = \"Statement\";\nvar Architecture = \"Architecture\";\nfunction isArchitecture(item) {\n  return reflection.isInstance(item, Architecture);\n}\n__name(isArchitecture, \"isArchitecture\");\nvar Branch = \"Branch\";\nfunction isBranch(item) {\n  return reflection.isInstance(item, Branch);\n}\n__name(isBranch, \"isBranch\");\nvar Checkout = \"Checkout\";\nvar CherryPicking = \"CherryPicking\";\nvar Commit = \"Commit\";\nfunction isCommit(item) {\n  return reflection.isInstance(item, Commit);\n}\n__name(isCommit, \"isCommit\");\nvar Common = \"Common\";\nfunction isCommon(item) {\n  return reflection.isInstance(item, Common);\n}\n__name(isCommon, \"isCommon\");\nvar GitGraph = \"GitGraph\";\nfunction isGitGraph(item) {\n  return reflection.isInstance(item, GitGraph);\n}\n__name(isGitGraph, \"isGitGraph\");\nvar Info = \"Info\";\nfunction isInfo(item) {\n  return reflection.isInstance(item, Info);\n}\n__name(isInfo, \"isInfo\");\nvar Merge = \"Merge\";\nfunction isMerge(item) {\n  return reflection.isInstance(item, Merge);\n}\n__name(isMerge, \"isMerge\");\nvar Packet = \"Packet\";\nfunction isPacket(item) {\n  return reflection.isInstance(item, Packet);\n}\n__name(isPacket, \"isPacket\");\nvar PacketBlock = \"PacketBlock\";\nfunction isPacketBlock(item) {\n  return reflection.isInstance(item, PacketBlock);\n}\n__name(isPacketBlock, \"isPacketBlock\");\nvar Pie = \"Pie\";\nfunction isPie(item) {\n  return reflection.isInstance(item, Pie);\n}\n__name(isPie, \"isPie\");\nvar PieSection = \"PieSection\";\nfunction isPieSection(item) {\n  return reflection.isInstance(item, PieSection);\n}\n__name(isPieSection, \"isPieSection\");\nvar Direction = \"Direction\";\nvar MermaidAstReflection = class extends AbstractAstReflection {\n  static {\n    __name(this, \"MermaidAstReflection\");\n  }\n  getAllTypes() {\n    return [\"Architecture\", \"Branch\", \"Checkout\", \"CherryPicking\", \"Commit\", \"Common\", \"Direction\", \"Edge\", \"GitGraph\", \"Group\", \"Info\", \"Junction\", \"Merge\", \"Packet\", \"PacketBlock\", \"Pie\", \"PieSection\", \"Service\", \"Statement\"];\n  }\n  computeIsSubtype(subtype, supertype) {\n    switch (subtype) {\n      case Branch:\n      case Checkout:\n      case CherryPicking:\n      case Commit:\n      case Merge: {\n        return this.isSubtype(Statement, supertype);\n      }\n      case Direction: {\n        return this.isSubtype(GitGraph, supertype);\n      }\n      default: {\n        return false;\n      }\n    }\n  }\n  getReferenceType(refInfo) {\n    const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n    switch (referenceId) {\n      default: {\n        throw new Error(`${referenceId} is not a valid reference id.`);\n      }\n    }\n  }\n  getTypeMetaData(type) {\n    switch (type) {\n      case \"Architecture\": {\n        return {\n          name: \"Architecture\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"edges\", defaultValue: [] },\n            { name: \"groups\", defaultValue: [] },\n            { name: \"junctions\", defaultValue: [] },\n            { name: \"services\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Branch\": {\n        return {\n          name: \"Branch\",\n          properties: [\n            { name: \"name\" },\n            { name: \"order\" }\n          ]\n        };\n      }\n      case \"Checkout\": {\n        return {\n          name: \"Checkout\",\n          properties: [\n            { name: \"branch\" }\n          ]\n        };\n      }\n      case \"CherryPicking\": {\n        return {\n          name: \"CherryPicking\",\n          properties: [\n            { name: \"id\" },\n            { name: \"parent\" },\n            { name: \"tags\", defaultValue: [] }\n          ]\n        };\n      }\n      case \"Commit\": {\n        return {\n          name: \"Commit\",\n          properties: [\n            { name: \"id\" },\n            { name: \"message\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Common\": {\n        return {\n          name: \"Common\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Edge\": {\n        return {\n          name: \"Edge\",\n          properties: [\n            { name: \"lhsDir\" },\n            { name: \"lhsGroup\", defaultValue: false },\n            { name: \"lhsId\" },\n            { name: \"lhsInto\", defaultValue: false },\n            { name: \"rhsDir\" },\n            { name: \"rhsGroup\", defaultValue: false },\n            { name: \"rhsId\" },\n            { name: \"rhsInto\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"GitGraph\": {\n        return {\n          name: \"GitGraph\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Group\": {\n        return {\n          name: \"Group\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Info\": {\n        return {\n          name: \"Info\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Junction\": {\n        return {\n          name: \"Junction\",\n          properties: [\n            { name: \"id\" },\n            { name: \"in\" }\n          ]\n        };\n      }\n      case \"Merge\": {\n        return {\n          name: \"Merge\",\n          properties: [\n            { name: \"branch\" },\n            { name: \"id\" },\n            { name: \"tags\", defaultValue: [] },\n            { name: \"type\" }\n          ]\n        };\n      }\n      case \"Packet\": {\n        return {\n          name: \"Packet\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"blocks\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PacketBlock\": {\n        return {\n          name: \"PacketBlock\",\n          properties: [\n            { name: \"end\" },\n            { name: \"label\" },\n            { name: \"start\" }\n          ]\n        };\n      }\n      case \"Pie\": {\n        return {\n          name: \"Pie\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"sections\", defaultValue: [] },\n            { name: \"showData\", defaultValue: false },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"PieSection\": {\n        return {\n          name: \"PieSection\",\n          properties: [\n            { name: \"label\" },\n            { name: \"value\" }\n          ]\n        };\n      }\n      case \"Service\": {\n        return {\n          name: \"Service\",\n          properties: [\n            { name: \"icon\" },\n            { name: \"iconText\" },\n            { name: \"id\" },\n            { name: \"in\" },\n            { name: \"title\" }\n          ]\n        };\n      }\n      case \"Direction\": {\n        return {\n          name: \"Direction\",\n          properties: [\n            { name: \"accDescr\" },\n            { name: \"accTitle\" },\n            { name: \"dir\" },\n            { name: \"statements\", defaultValue: [] },\n            { name: \"title\" }\n          ]\n        };\n      }\n      default: {\n        return {\n          name: type,\n          properties: []\n        };\n      }\n    }\n  }\n};\nvar reflection = new MermaidAstReflection();\n\n// src/language/generated/grammar.ts\nimport { loadGrammarFromJson } from \"langium\";\nvar loadedInfoGrammar;\nvar InfoGrammar = /* @__PURE__ */ __name(() => loadedInfoGrammar ?? (loadedInfoGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Info\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Info\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"info\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"showInfo\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"*\"}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"?\"}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"InfoGrammar\");\nvar loadedPacketGrammar;\nvar PacketGrammar = /* @__PURE__ */ __name(() => loadedPacketGrammar ?? (loadedPacketGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Packet\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Packet\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"packet-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"blocks\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PacketBlock\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"start\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"end\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/0|[1-9][0-9]*/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}`)), \"PacketGrammar\");\nvar loadedPieGrammar;\nvar PieGrammar = /* @__PURE__ */ __name(() => loadedPieGrammar ?? (loadedPieGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Pie\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Pie\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"pie\"},{\"$type\":\"Assignment\",\"feature\":\"showData\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"Keyword\",\"value\":\"showData\"},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"*\"}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"Assignment\",\"feature\":\"sections\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]},\"cardinality\":\"+\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"PieSection\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"label\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"value\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_LABEL\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]+\\\\\"/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"PIE_SECTION_VALUE\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/(0|[1-9][0-9]*)(\\\\\\\\.[0-9]+)?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"PieGrammar\");\nvar loadedArchitectureGrammar;\nvar ArchitectureGrammar = /* @__PURE__ */ __name(() => loadedArchitectureGrammar ?? (loadedArchitectureGrammar = loadGrammarFromJson('{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"Architecture\",\"imports\":[],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"Architecture\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Keyword\",\"value\":\"architecture-beta\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[],\"cardinality\":\"*\"}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"fragment\":true,\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"groups\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"services\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@6\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"junctions\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@7\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"edges\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@8\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"LeftPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\":\"},{\"$type\":\"Assignment\",\"feature\":\"lhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"RightPort\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"rhsDir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@9\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\":\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Arrow\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"lhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"--\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"-\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]}},{\"$type\":\"Keyword\",\"value\":\"-\"}]}]},{\"$type\":\"Assignment\",\"feature\":\"rhsInto\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Group\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"group\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Service\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"service\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"iconText\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"icon\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Junction\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"junction\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"in\"},{\"$type\":\"Assignment\",\"feature\":\"in\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Edge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"lhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"lhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"rhsId\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@10\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"rhsGroup\",\"operator\":\"?=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_DIRECTION\",\"definition\":{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"TerminalAlternatives\",\"elements\":[{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"L\"}},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"R\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"T\"}}]},{\"$type\":\"CharacterRange\",\"left\":{\"$type\":\"Keyword\",\"value\":\"B\"}}]},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ID\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\w]+/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TEXT_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\(\\\\\"[^\\\\\"]+\\\\\"\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_ICON\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\([\\\\\\\\w-:]+\\\\\\\\)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARCH_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\[[\\\\\\\\w ]+\\\\\\\\]/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_GROUP\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\{group\\\\\\\\}/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ARROW_INTO\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/<|>/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@21\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"types\":[],\"usedGrammars\":[]}')), \"ArchitectureGrammar\");\nvar loadedGitGraphGrammar;\nvar GitGraphGrammar = /* @__PURE__ */ __name(() => loadedGitGraphGrammar ?? (loadedGitGraphGrammar = loadGrammarFromJson(`{\"$type\":\"Grammar\",\"isDeclared\":true,\"name\":\"GitGraph\",\"interfaces\":[{\"$type\":\"Interface\",\"name\":\"Common\",\"attributes\":[{\"$type\":\"TypeAttribute\",\"name\":\"accDescr\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"accTitle\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}},{\"$type\":\"TypeAttribute\",\"name\":\"title\",\"isOptional\":true,\"type\":{\"$type\":\"SimpleType\",\"primitiveType\":\"string\"}}],\"superTypes\":[]}],\"rules\":[{\"$type\":\"ParserRule\",\"name\":\"TitleAndAccessibilities\",\"fragment\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Assignment\",\"feature\":\"accDescr\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@3\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"accTitle\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@4\"},\"arguments\":[]}},{\"$type\":\"Assignment\",\"feature\":\"title\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@5\"},\"arguments\":[]}}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}],\"cardinality\":\"+\"},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"EOL\",\"fragment\":true,\"dataType\":\"string\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"+\"},{\"$type\":\"EndOfFile\"}]},\"definesHiddenTokens\":false,\"entry\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"NEWLINE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\r?\\\\\\\\n/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_DESCR\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accDescr(?:[\\\\\\\\t ]*:([^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)|\\\\\\\\s*{([^}]*)})/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ACC_TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*accTitle[\\\\\\\\t ]*:(?:[^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[^\\\\\\\\n\\\\\\\\r]*)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"TITLE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*title(?:[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*?(?=%%)|[\\\\\\\\t ][^\\\\\\\\n\\\\\\\\r]*|)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"WHITESPACE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]+/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"YAML\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/---[\\\\\\\\t ]*\\\\\\\\r?\\\\\\\\n(?:[\\\\\\\\S\\\\\\\\s]*?\\\\\\\\r?\\\\\\\\n)?---(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"DIRECTIVE\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%{[\\\\\\\\S\\\\\\\\s]*?}%%(?:\\\\\\\\r?\\\\\\\\n|(?!\\\\\\\\S))/\"},\"fragment\":false},{\"$type\":\"TerminalRule\",\"hidden\":true,\"name\":\"SINGLE_LINE_COMMENT\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[\\\\\\\\t ]*%%[^\\\\\\\\n\\\\\\\\r]*/\"},\"fragment\":false},{\"$type\":\"ParserRule\",\"name\":\"GitGraph\",\"entry\":true,\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"Keyword\",\"value\":\":\"}]},{\"$type\":\"Keyword\",\"value\":\"gitGraph:\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"gitGraph\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@12\"},\"arguments\":[]},{\"$type\":\"Keyword\",\"value\":\":\"}]}]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[],\"cardinality\":\"*\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@0\"},\"arguments\":[]},{\"$type\":\"Assignment\",\"feature\":\"statements\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@11\"},\"arguments\":[]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@2\"},\"arguments\":[]}],\"cardinality\":\"*\"}]}]},\"definesHiddenTokens\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Statement\",\"definition\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@13\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@14\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@15\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@16\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@17\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Direction\",\"definition\":{\"$type\":\"Assignment\",\"feature\":\"dir\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"LR\"},{\"$type\":\"Keyword\",\"value\":\"TB\"},{\"$type\":\"Keyword\",\"value\":\"BT\"}]}},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Commit\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"commit\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"msg:\",\"cardinality\":\"?\"},{\"$type\":\"Assignment\",\"feature\":\"message\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Branch\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"branch\"},{\"$type\":\"Assignment\",\"feature\":\"name\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"order:\"},{\"$type\":\"Assignment\",\"feature\":\"order\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@18\"},\"arguments\":[]}}],\"cardinality\":\"?\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Merge\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"merge\"},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"type:\"},{\"$type\":\"Assignment\",\"feature\":\"type\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"NORMAL\"},{\"$type\":\"Keyword\",\"value\":\"REVERSE\"},{\"$type\":\"Keyword\",\"value\":\"HIGHLIGHT\"}]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"Checkout\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"checkout\"},{\"$type\":\"Keyword\",\"value\":\"switch\"}]},{\"$type\":\"Assignment\",\"feature\":\"branch\",\"operator\":\"=\",\"terminal\":{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@19\"},\"arguments\":[]},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}]}},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"ParserRule\",\"name\":\"CherryPicking\",\"definition\":{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"cherry-pick\"},{\"$type\":\"Alternatives\",\"elements\":[{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"id:\"},{\"$type\":\"Assignment\",\"feature\":\"id\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"tag:\"},{\"$type\":\"Assignment\",\"feature\":\"tags\",\"operator\":\"+=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]},{\"$type\":\"Group\",\"elements\":[{\"$type\":\"Keyword\",\"value\":\"parent:\"},{\"$type\":\"Assignment\",\"feature\":\"parent\",\"operator\":\"=\",\"terminal\":{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@20\"},\"arguments\":[]}}]}],\"cardinality\":\"*\"},{\"$type\":\"RuleCall\",\"rule\":{\"$ref\":\"#/rules@1\"},\"arguments\":[]}]},\"definesHiddenTokens\":false,\"entry\":false,\"fragment\":false,\"hiddenTokens\":[],\"parameters\":[],\"wildcard\":false},{\"$type\":\"TerminalRule\",\"name\":\"INT\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"number\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/[0-9]+(?=\\\\\\\\s)/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"ID\",\"type\":{\"$type\":\"ReturnType\",\"name\":\"string\"},\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\\\\w([-\\\\\\\\./\\\\\\\\w]*[-\\\\\\\\w])?/\"},\"fragment\":false,\"hidden\":false},{\"$type\":\"TerminalRule\",\"name\":\"STRING\",\"definition\":{\"$type\":\"RegexToken\",\"regex\":\"/\\\\\"[^\\\\\"]*\\\\\"|'[^']*'/\"},\"fragment\":false,\"hidden\":false}],\"definesHiddenTokens\":false,\"hiddenTokens\":[],\"imports\":[],\"types\":[],\"usedGrammars\":[]}`)), \"GitGraphGrammar\");\n\n// src/language/generated/module.ts\nvar InfoLanguageMetaData = {\n  languageId: \"info\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PacketLanguageMetaData = {\n  languageId: \"packet\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar PieLanguageMetaData = {\n  languageId: \"pie\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar ArchitectureLanguageMetaData = {\n  languageId: \"architecture\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar GitGraphLanguageMetaData = {\n  languageId: \"gitGraph\",\n  fileExtensions: [\".mmd\", \".mermaid\"],\n  caseInsensitive: false\n};\nvar MermaidGeneratedSharedModule = {\n  AstReflection: /* @__PURE__ */ __name(() => new MermaidAstReflection(), \"AstReflection\")\n};\nvar InfoGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => InfoGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => InfoLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PacketGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PacketGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PacketLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar PieGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => PieGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => PieLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar ArchitectureGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => ArchitectureGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => ArchitectureLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\nvar GitGraphGeneratedModule = {\n  Grammar: /* @__PURE__ */ __name(() => GitGraphGrammar(), \"Grammar\"),\n  LanguageMetaData: /* @__PURE__ */ __name(() => GitGraphLanguageMetaData, \"LanguageMetaData\"),\n  parser: {}\n};\n\n// src/language/common/valueConverter.ts\nimport { DefaultValueConverter } from \"langium\";\n\n// src/language/common/matcher.ts\nvar accessibilityDescrRegex = /accDescr(?:[\\t ]*:([^\\n\\r]*)|\\s*{([^}]*)})/;\nvar accessibilityTitleRegex = /accTitle[\\t ]*:([^\\n\\r]*)/;\nvar titleRegex = /title([\\t ][^\\n\\r]*|)/;\n\n// src/language/common/valueConverter.ts\nvar rulesRegexes = {\n  ACC_DESCR: accessibilityDescrRegex,\n  ACC_TITLE: accessibilityTitleRegex,\n  TITLE: titleRegex\n};\nvar AbstractMermaidValueConverter = class extends DefaultValueConverter {\n  static {\n    __name(this, \"AbstractMermaidValueConverter\");\n  }\n  runConverter(rule, input, cstNode) {\n    let value = this.runCommonConverter(rule, input, cstNode);\n    if (value === void 0) {\n      value = this.runCustomConverter(rule, input, cstNode);\n    }\n    if (value === void 0) {\n      return super.runConverter(rule, input, cstNode);\n    }\n    return value;\n  }\n  runCommonConverter(rule, input, _cstNode) {\n    const regex = rulesRegexes[rule.name];\n    if (regex === void 0) {\n      return void 0;\n    }\n    const match = regex.exec(input);\n    if (match === null) {\n      return void 0;\n    }\n    if (match[1] !== void 0) {\n      return match[1].trim().replace(/[\\t ]{2,}/gm, \" \");\n    }\n    if (match[2] !== void 0) {\n      return match[2].replace(/^\\s*/gm, \"\").replace(/\\s+$/gm, \"\").replace(/[\\t ]{2,}/gm, \" \").replace(/[\\n\\r]{2,}/gm, \"\\n\");\n    }\n    return void 0;\n  }\n};\nvar CommonValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"CommonValueConverter\");\n  }\n  runCustomConverter(_rule, _input, _cstNode) {\n    return void 0;\n  }\n};\n\n// src/language/common/tokenBuilder.ts\nimport { DefaultTokenBuilder } from \"langium\";\nvar AbstractMermaidTokenBuilder = class extends DefaultTokenBuilder {\n  static {\n    __name(this, \"AbstractMermaidTokenBuilder\");\n  }\n  constructor(keywords) {\n    super();\n    this.keywords = new Set(keywords);\n  }\n  buildKeywordTokens(rules, terminalTokens, options) {\n    const tokenTypes = super.buildKeywordTokens(rules, terminalTokens, options);\n    tokenTypes.forEach((tokenType) => {\n      if (this.keywords.has(tokenType.name) && tokenType.PATTERN !== void 0) {\n        tokenType.PATTERN = new RegExp(tokenType.PATTERN.toString() + \"(?:(?=%%)|(?!\\\\S))\");\n      }\n    });\n    return tokenTypes;\n  }\n};\nvar CommonTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"CommonTokenBuilder\");\n  }\n};\n\nexport {\n  __name,\n  Statement,\n  Architecture,\n  isArchitecture,\n  Branch,\n  isBranch,\n  Commit,\n  isCommit,\n  isCommon,\n  GitGraph,\n  isGitGraph,\n  Info,\n  isInfo,\n  Merge,\n  isMerge,\n  Packet,\n  isPacket,\n  PacketBlock,\n  isPacketBlock,\n  Pie,\n  isPie,\n  PieSection,\n  isPieSection,\n  MermaidGeneratedSharedModule,\n  InfoGeneratedModule,\n  PacketGeneratedModule,\n  PieGeneratedModule,\n  ArchitectureGeneratedModule,\n  GitGraphGeneratedModule,\n  AbstractMermaidValueConverter,\n  CommonValueConverter,\n  AbstractMermaidTokenBuilder,\n  CommonTokenBuilder\n};\n","import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n","import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event || (exports.Event = Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  GitGraphGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/gitGraph/module.ts\nimport {\n  inject,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  EmptyFileSystem\n} from \"langium\";\n\n// src/language/gitGraph/tokenBuilder.ts\nvar GitGraphTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"GitGraphTokenBuilder\");\n  }\n  constructor() {\n    super([\"gitGraph\"]);\n  }\n};\n\n// src/language/gitGraph/module.ts\nvar GitGraphModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new GitGraphTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createGitGraphServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const GitGraph = inject(\n    createDefaultCoreModule({ shared }),\n    GitGraphGeneratedModule,\n    GitGraphModule\n  );\n  shared.ServiceRegistry.register(GitGraph);\n  return { shared, GitGraph };\n}\n__name(createGitGraphServices, \"createGitGraphServices\");\n\nexport {\n  GitGraphModule,\n  createGitGraphServices\n};\n","import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport function isAstNode(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$type === 'string';\n}\nexport function isReference(obj) {\n    return typeof obj === 'object' && obj !== null && typeof obj.$refText === 'string';\n}\nexport function isAstNodeDescription(obj) {\n    return typeof obj === 'object' && obj !== null\n        && typeof obj.name === 'string'\n        && typeof obj.type === 'string'\n        && typeof obj.path === 'string';\n}\nexport function isLinkingError(obj) {\n    return typeof obj === 'object' && obj !== null\n        && isAstNode(obj.container)\n        && isReference(obj.reference)\n        && typeof obj.message === 'string';\n}\n/**\n * An abstract implementation of the {@link AstReflection} interface.\n * Serves to cache subtype computation results to improve performance throughout different parts of Langium.\n */\nexport class AbstractAstReflection {\n    constructor() {\n        this.subtypes = {};\n        this.allSubtypes = {};\n    }\n    isInstance(node, type) {\n        return isAstNode(node) && this.isSubtype(node.$type, type);\n    }\n    isSubtype(subtype, supertype) {\n        if (subtype === supertype) {\n            return true;\n        }\n        let nested = this.subtypes[subtype];\n        if (!nested) {\n            nested = this.subtypes[subtype] = {};\n        }\n        const existing = nested[supertype];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            const result = this.computeIsSubtype(subtype, supertype);\n            nested[supertype] = result;\n            return result;\n        }\n    }\n    getAllSubTypes(type) {\n        const existing = this.allSubtypes[type];\n        if (existing) {\n            return existing;\n        }\n        else {\n            const allTypes = this.getAllTypes();\n            const types = [];\n            for (const possibleSubType of allTypes) {\n                if (this.isSubtype(possibleSubType, type)) {\n                    types.push(possibleSubType);\n                }\n            }\n            this.allSubtypes[type] = types;\n            return types;\n        }\n    }\n}\nexport function isCompositeCstNode(node) {\n    return typeof node === 'object' && node !== null && Array.isArray(node.content);\n}\nexport function isLeafCstNode(node) {\n    return typeof node === 'object' && node !== null && typeof node.tokenType === 'object';\n}\nexport function isRootCstNode(node) {\n    return isCompositeCstNode(node) && typeof node.fullText === 'string';\n}\n//# sourceMappingURL=syntax-tree.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * The default implementation of `Stream` works with two input functions:\n *  - The first function creates the initial state of an iteration.\n *  - The second function gets the current state as argument and returns an `IteratorResult`.\n */\nexport class StreamImpl {\n    constructor(startFn, nextFn) {\n        this.startFn = startFn;\n        this.nextFn = nextFn;\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n    [Symbol.iterator]() {\n        return this.iterator();\n    }\n    isEmpty() {\n        const iterator = this.iterator();\n        return Boolean(iterator.next().done);\n    }\n    count() {\n        const iterator = this.iterator();\n        let count = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            count++;\n            next = iterator.next();\n        }\n        return count;\n    }\n    toArray() {\n        const result = [];\n        const iterator = this.iterator();\n        let next;\n        do {\n            next = iterator.next();\n            if (next.value !== undefined) {\n                result.push(next.value);\n            }\n        } while (!next.done);\n        return result;\n    }\n    toSet() {\n        return new Set(this);\n    }\n    toMap(keyFn, valueFn) {\n        const entryStream = this.map(element => [\n            keyFn ? keyFn(element) : element,\n            valueFn ? valueFn(element) : element\n        ]);\n        return new Map(entryStream);\n    }\n    toString() {\n        return this.join();\n    }\n    concat(other) {\n        const iterator = other[Symbol.iterator]();\n        return new StreamImpl(() => ({ first: this.startFn(), firstDone: false }), state => {\n            let result;\n            if (!state.firstDone) {\n                do {\n                    result = this.nextFn(state.first);\n                    if (!result.done) {\n                        return result;\n                    }\n                } while (!result.done);\n                state.firstDone = true;\n            }\n            do {\n                result = iterator.next();\n                if (!result.done) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    join(separator = ',') {\n        const iterator = this.iterator();\n        let value = '';\n        let result;\n        let addSeparator = false;\n        do {\n            result = iterator.next();\n            if (!result.done) {\n                if (addSeparator) {\n                    value += separator;\n                }\n                value += toString(result.value);\n            }\n            addSeparator = true;\n        } while (!result.done);\n        return value;\n    }\n    indexOf(searchElement, fromIndex = 0) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (index >= fromIndex && next.value === searchElement) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    every(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (!predicate(next.value)) {\n                return false;\n            }\n            next = iterator.next();\n        }\n        return true;\n    }\n    some(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    forEach(callbackfn) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            callbackfn(next.value, index);\n            next = iterator.next();\n            index++;\n        }\n    }\n    map(callbackfn) {\n        return new StreamImpl(this.startFn, (state) => {\n            const { done, value } = this.nextFn(state);\n            if (done) {\n                return DONE_RESULT;\n            }\n            else {\n                return { done: false, value: callbackfn(value) };\n            }\n        });\n    }\n    filter(predicate) {\n        return new StreamImpl(this.startFn, state => {\n            let result;\n            do {\n                result = this.nextFn(state);\n                if (!result.done && predicate(result.value)) {\n                    return result;\n                }\n            } while (!result.done);\n            return DONE_RESULT;\n        });\n    }\n    nonNullable() {\n        return this.filter(e => e !== undefined && e !== null);\n    }\n    reduce(callbackfn, initialValue) {\n        const iterator = this.iterator();\n        let previousValue = initialValue;\n        let next = iterator.next();\n        while (!next.done) {\n            if (previousValue === undefined) {\n                previousValue = next.value;\n            }\n            else {\n                previousValue = callbackfn(previousValue, next.value);\n            }\n            next = iterator.next();\n        }\n        return previousValue;\n    }\n    reduceRight(callbackfn, initialValue) {\n        return this.recursiveReduce(this.iterator(), callbackfn, initialValue);\n    }\n    recursiveReduce(iterator, callbackfn, initialValue) {\n        const next = iterator.next();\n        if (next.done) {\n            return initialValue;\n        }\n        const previousValue = this.recursiveReduce(iterator, callbackfn, initialValue);\n        if (previousValue === undefined) {\n            return next.value;\n        }\n        return callbackfn(previousValue, next.value);\n    }\n    find(predicate) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return next.value;\n            }\n            next = iterator.next();\n        }\n        return undefined;\n    }\n    findIndex(predicate) {\n        const iterator = this.iterator();\n        let index = 0;\n        let next = iterator.next();\n        while (!next.done) {\n            if (predicate(next.value)) {\n                return index;\n            }\n            next = iterator.next();\n            index++;\n        }\n        return -1;\n    }\n    includes(searchElement) {\n        const iterator = this.iterator();\n        let next = iterator.next();\n        while (!next.done) {\n            if (next.value === searchElement) {\n                return true;\n            }\n            next = iterator.next();\n        }\n        return false;\n    }\n    flatMap(callbackfn) {\n        return new StreamImpl(() => ({ this: this.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = this.nextFn(state.this);\n                if (!done) {\n                    const mapped = callbackfn(value);\n                    if (isIterable(mapped)) {\n                        state.iterator = mapped[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: mapped };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    flat(depth) {\n        if (depth === undefined) {\n            depth = 1;\n        }\n        if (depth <= 0) {\n            return this;\n        }\n        const stream = depth > 1 ? this.flat(depth - 1) : this;\n        return new StreamImpl(() => ({ this: stream.startFn() }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (next.done) {\n                        state.iterator = undefined;\n                    }\n                    else {\n                        return next;\n                    }\n                }\n                const { done, value } = stream.nextFn(state.this);\n                if (!done) {\n                    if (isIterable(value)) {\n                        state.iterator = value[Symbol.iterator]();\n                    }\n                    else {\n                        return { done: false, value: value };\n                    }\n                }\n            } while (state.iterator);\n            return DONE_RESULT;\n        });\n    }\n    head() {\n        const iterator = this.iterator();\n        const result = iterator.next();\n        if (result.done) {\n            return undefined;\n        }\n        return result.value;\n    }\n    tail(skipCount = 1) {\n        return new StreamImpl(() => {\n            const state = this.startFn();\n            for (let i = 0; i < skipCount; i++) {\n                const next = this.nextFn(state);\n                if (next.done) {\n                    return state;\n                }\n            }\n            return state;\n        }, this.nextFn);\n    }\n    limit(maxSize) {\n        return new StreamImpl(() => ({ size: 0, state: this.startFn() }), state => {\n            state.size++;\n            if (state.size > maxSize) {\n                return DONE_RESULT;\n            }\n            return this.nextFn(state.state);\n        });\n    }\n    distinct(by) {\n        const set = new Set();\n        return this.filter(e => {\n            const value = by ? by(e) : e;\n            if (set.has(value)) {\n                return false;\n            }\n            else {\n                set.add(value);\n                return true;\n            }\n        });\n    }\n    exclude(other, key) {\n        const otherKeySet = new Set();\n        for (const item of other) {\n            const value = key ? key(item) : item;\n            otherKeySet.add(value);\n        }\n        return this.filter(e => {\n            const ownKey = key ? key(e) : e;\n            return !otherKeySet.has(ownKey);\n        });\n    }\n}\nfunction toString(item) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    if (typeof item === 'undefined') {\n        return 'undefined';\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (typeof item.toString === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return item.toString();\n    }\n    return Object.prototype.toString.call(item);\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * An empty stream of any type.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const EMPTY_STREAM = new StreamImpl(() => undefined, () => DONE_RESULT);\n/**\n * Use this `IteratorResult` when implementing a `StreamImpl` to indicate that there are no more elements in the stream.\n */\nexport const DONE_RESULT = Object.freeze({ done: true, value: undefined });\n/**\n * Create a stream from one or more iterables or array-likes.\n */\nexport function stream(...collections) {\n    if (collections.length === 1) {\n        const collection = collections[0];\n        if (collection instanceof StreamImpl) {\n            return collection;\n        }\n        if (isIterable(collection)) {\n            return new StreamImpl(() => collection[Symbol.iterator](), (iterator) => iterator.next());\n        }\n        if (typeof collection.length === 'number') {\n            return new StreamImpl(() => ({ index: 0 }), (state) => {\n                if (state.index < collection.length) {\n                    return { done: false, value: collection[state.index++] };\n                }\n                else {\n                    return DONE_RESULT;\n                }\n            });\n        }\n    }\n    if (collections.length > 1) {\n        return new StreamImpl(() => ({ collIndex: 0, arrIndex: 0 }), (state) => {\n            do {\n                if (state.iterator) {\n                    const next = state.iterator.next();\n                    if (!next.done) {\n                        return next;\n                    }\n                    state.iterator = undefined;\n                }\n                if (state.array) {\n                    if (state.arrIndex < state.array.length) {\n                        return { done: false, value: state.array[state.arrIndex++] };\n                    }\n                    state.array = undefined;\n                    state.arrIndex = 0;\n                }\n                if (state.collIndex < collections.length) {\n                    const collection = collections[state.collIndex++];\n                    if (isIterable(collection)) {\n                        state.iterator = collection[Symbol.iterator]();\n                    }\n                    else if (collection && typeof collection.length === 'number') {\n                        state.array = collection;\n                    }\n                }\n            } while (state.iterator || state.array || state.collIndex < collections.length);\n            return DONE_RESULT;\n        });\n    }\n    return EMPTY_STREAM;\n}\n/**\n * The default implementation of `TreeStream` takes a root element and a function that computes the\n * children of its argument. Whether the root node included in the stream is controlled with the\n * `includeRoot` option, which defaults to `false`.\n */\nexport class TreeStreamImpl extends StreamImpl {\n    constructor(root, children, options) {\n        super(() => ({\n            iterators: (options === null || options === void 0 ? void 0 : options.includeRoot) ? [[root][Symbol.iterator]()] : [children(root)[Symbol.iterator]()],\n            pruned: false\n        }), state => {\n            if (state.pruned) {\n                state.iterators.pop();\n                state.pruned = false;\n            }\n            while (state.iterators.length > 0) {\n                const iterator = state.iterators[state.iterators.length - 1];\n                const next = iterator.next();\n                if (next.done) {\n                    state.iterators.pop();\n                }\n                else {\n                    state.iterators.push(children(next.value)[Symbol.iterator]());\n                    return next;\n                }\n            }\n            return DONE_RESULT;\n        });\n    }\n    iterator() {\n        const iterator = {\n            state: this.startFn(),\n            next: () => this.nextFn(iterator.state),\n            prune: () => {\n                iterator.state.pruned = true;\n            },\n            [Symbol.iterator]: () => iterator\n        };\n        return iterator;\n    }\n}\n/**\n * A set of utility functions that reduce a stream to a single value.\n */\nexport var Reduction;\n(function (Reduction) {\n    /**\n     * Compute the sum of a number stream.\n     */\n    function sum(stream) {\n        return stream.reduce((a, b) => a + b, 0);\n    }\n    Reduction.sum = sum;\n    /**\n     * Compute the product of a number stream.\n     */\n    function product(stream) {\n        return stream.reduce((a, b) => a * b, 0);\n    }\n    Reduction.product = product;\n    /**\n     * Compute the minimum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function min(stream) {\n        return stream.reduce((a, b) => Math.min(a, b));\n    }\n    Reduction.min = min;\n    /**\n     * Compute the maximum of a number stream. Returns `undefined` if the stream is empty.\n     */\n    function max(stream) {\n        return stream.reduce((a, b) => Math.max(a, b));\n    }\n    Reduction.max = max;\n})(Reduction || (Reduction = {}));\n//# sourceMappingURL=stream.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCompositeCstNode, isLeafCstNode, isRootCstNode } from '../syntax-tree.js';\nimport { TreeStreamImpl } from './stream.js';\n/**\n * Create a stream of all CST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamCst(node) {\n    return new TreeStreamImpl(node, element => {\n        if (isCompositeCstNode(element)) {\n            return element.content;\n        }\n        else {\n            return [];\n        }\n    }, { includeRoot: true });\n}\n/**\n * Create a stream of all leaf nodes that are directly and indirectly contained in the given root node.\n */\nexport function flattenCst(node) {\n    return streamCst(node).filter(isLeafCstNode);\n}\n/**\n * Determines whether the specified cst node is a child of the specified parent node.\n */\nexport function isChildNode(child, parent) {\n    while (child.container) {\n        child = child.container;\n        if (child === parent) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function tokenToRange(token) {\n    // Chevrotain uses 1-based indices everywhere\n    // So we subtract 1 from every value to align with the LSP\n    return {\n        start: {\n            character: token.startColumn - 1,\n            line: token.startLine - 1\n        },\n        end: {\n            character: token.endColumn,\n            line: token.endLine - 1\n        }\n    };\n}\nexport function toDocumentSegment(node) {\n    if (!node) {\n        return undefined;\n    }\n    const { offset, end, range } = node;\n    return {\n        range,\n        offset,\n        end,\n        length: end - offset\n    };\n}\nexport var RangeComparison;\n(function (RangeComparison) {\n    RangeComparison[RangeComparison[\"Before\"] = 0] = \"Before\";\n    RangeComparison[RangeComparison[\"After\"] = 1] = \"After\";\n    RangeComparison[RangeComparison[\"OverlapFront\"] = 2] = \"OverlapFront\";\n    RangeComparison[RangeComparison[\"OverlapBack\"] = 3] = \"OverlapBack\";\n    RangeComparison[RangeComparison[\"Inside\"] = 4] = \"Inside\";\n})(RangeComparison || (RangeComparison = {}));\nexport function compareRange(range, to) {\n    if (range.end.line < to.start.line || (range.end.line === to.start.line && range.end.character < range.start.character)) {\n        return RangeComparison.Before;\n    }\n    else if (range.start.line > to.end.line || (range.start.line === to.end.line && range.start.character > to.end.character)) {\n        return RangeComparison.After;\n    }\n    const startInside = range.start.line > to.start.line || (range.start.line === to.start.line && range.start.character >= to.start.character);\n    const endInside = range.end.line < to.end.line || (range.end.line === to.end.line && range.end.character <= to.end.character);\n    if (startInside && endInside) {\n        return RangeComparison.Inside;\n    }\n    else if (startInside) {\n        return RangeComparison.OverlapBack;\n    }\n    else {\n        return RangeComparison.OverlapFront;\n    }\n}\nexport function inRange(range, to) {\n    const comparison = compareRange(range, to);\n    return comparison > RangeComparison.After;\n}\n// The \\p{L} regex matches any unicode letter character, i.e. characters from non-english alphabets\n// Together with \\w it matches any kind of character which can commonly appear in IDs\nexport const DefaultNameRegexp = /^[\\w\\p{L}]$/u;\n/**\n * Performs `findLeafNodeAtOffset` with a minor difference: When encountering a character that matches the `nameRegexp` argument,\n * it will instead return the leaf node at the `offset - 1` position.\n *\n * For LSP services, users expect that the declaration of an element is available if the cursor is directly after the element.\n */\nexport function findDeclarationNodeAtOffset(cstNode, offset, nameRegexp = DefaultNameRegexp) {\n    if (cstNode) {\n        if (offset > 0) {\n            const localOffset = offset - cstNode.offset;\n            const textAtOffset = cstNode.text.charAt(localOffset);\n            if (!nameRegexp.test(textAtOffset)) {\n                offset--;\n            }\n        }\n        return findLeafNodeAtOffset(cstNode, offset);\n    }\n    return undefined;\n}\nexport function findCommentNode(cstNode, commentNames) {\n    if (cstNode) {\n        const previous = getPreviousNode(cstNode, true);\n        if (previous && isCommentNode(previous, commentNames)) {\n            return previous;\n        }\n        if (isRootCstNode(cstNode)) {\n            // Go from the first non-hidden node through all nodes in reverse order\n            // We do this to find the comment node which directly precedes the root node\n            const endIndex = cstNode.content.findIndex(e => !e.hidden);\n            for (let i = endIndex - 1; i >= 0; i--) {\n                const child = cstNode.content[i];\n                if (isCommentNode(child, commentNames)) {\n                    return child;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nexport function isCommentNode(cstNode, commentNames) {\n    return isLeafCstNode(cstNode) && commentNames.includes(cstNode.tokenType.name);\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * Note that the given offset will be within the range of the returned leaf node.\n *\n * If the offset does not point to a CST node (but just white space), this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node at the specified offset.\n */\nexport function findLeafNodeAtOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, false);\n        if (searchResult) {\n            return findLeafNodeAtOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\n/**\n * Finds the leaf CST node at the specified 0-based string offset.\n * If no CST node exists at the specified position, it will return the leaf node before it.\n *\n * If there is no leaf node before the specified offset, this method will return `undefined`.\n *\n * @param node The CST node to search through.\n * @param offset The specified offset.\n * @returns The CST node closest to the specified offset.\n */\nexport function findLeafNodeBeforeOffset(node, offset) {\n    if (isLeafCstNode(node)) {\n        return node;\n    }\n    else if (isCompositeCstNode(node)) {\n        const searchResult = binarySearch(node, offset, true);\n        if (searchResult) {\n            return findLeafNodeBeforeOffset(searchResult, offset);\n        }\n    }\n    return undefined;\n}\nfunction binarySearch(node, offset, closest) {\n    let left = 0;\n    let right = node.content.length - 1;\n    let closestNode = undefined;\n    while (left <= right) {\n        const middle = Math.floor((left + right) / 2);\n        const middleNode = node.content[middle];\n        if (middleNode.offset <= offset && middleNode.end > offset) {\n            // Found an exact match\n            return middleNode;\n        }\n        if (middleNode.end <= offset) {\n            // Update the closest node (less than offset) and move to the right half\n            closestNode = closest ? middleNode : undefined;\n            left = middle + 1;\n        }\n        else {\n            // Move to the left half\n            right = middle - 1;\n        }\n    }\n    return closestNode;\n}\nexport function getPreviousNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        while (index > 0) {\n            index--;\n            const previous = parent.content[index];\n            if (hidden || !previous.hidden) {\n                return previous;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getNextNode(node, hidden = true) {\n    while (node.container) {\n        const parent = node.container;\n        let index = parent.content.indexOf(node);\n        const last = parent.content.length - 1;\n        while (index < last) {\n            index++;\n            const next = parent.content[index];\n            if (hidden || !next.hidden) {\n                return next;\n            }\n        }\n        node = parent;\n    }\n    return undefined;\n}\nexport function getStartlineNode(node) {\n    if (node.range.start.character === 0) {\n        return node;\n    }\n    const line = node.range.start.line;\n    let last = node;\n    let index;\n    while (node.container) {\n        const parent = node.container;\n        const selfIndex = index !== null && index !== void 0 ? index : parent.content.indexOf(node);\n        if (selfIndex === 0) {\n            node = parent;\n            index = undefined;\n        }\n        else {\n            index = selfIndex - 1;\n            node = parent.content[index];\n        }\n        if (node.range.start.line !== line) {\n            break;\n        }\n        last = node;\n    }\n    return last;\n}\nexport function getInteriorNodes(start, end) {\n    const commonParent = getCommonParent(start, end);\n    if (!commonParent) {\n        return [];\n    }\n    return commonParent.parent.content.slice(commonParent.a + 1, commonParent.b);\n}\nfunction getCommonParent(a, b) {\n    const aParents = getParentChain(a);\n    const bParents = getParentChain(b);\n    let current;\n    for (let i = 0; i < aParents.length && i < bParents.length; i++) {\n        const aParent = aParents[i];\n        const bParent = bParents[i];\n        if (aParent.parent === bParent.parent) {\n            current = {\n                parent: aParent.parent,\n                a: aParent.index,\n                b: bParent.index\n            };\n        }\n        else {\n            break;\n        }\n    }\n    return current;\n}\nfunction getParentChain(node) {\n    const chain = [];\n    while (node.container) {\n        const parent = node.container;\n        const index = parent.content.indexOf(node);\n        chain.push({\n            parent,\n            index\n        });\n        node = parent;\n    }\n    return chain.reverse();\n}\n//# sourceMappingURL=cst-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class ErrorWithLocation extends Error {\n    constructor(node, message) {\n        super(node ? `${message} at ${node.range.start.line}:${node.range.start.character}` : message);\n    }\n}\nexport function assertUnreachable(_) {\n    throw new Error('Error! The input value was not handled.');\n}\n//# sourceMappingURL=errors.js.map","/******************************************************************************\n * This file was generated by langium-cli 3.0.0.\n * DO NOT EDIT MANUALLY!\n ******************************************************************************/\nimport { AbstractAstReflection } from '../../syntax-tree.js';\nexport const LangiumGrammarTerminals = {\n    ID: /\\^?[_a-zA-Z][\\w_]*/,\n    STRING: /\"(\\\\.|[^\"\\\\])*\"|'(\\\\.|[^'\\\\])*'/,\n    NUMBER: /NaN|-?((\\d*\\.\\d+|\\d+)([Ee][+-]?\\d+)?|Infinity)/,\n    RegexLiteral: /\\/(?![*+?])(?:[^\\r\\n\\[/\\\\]|\\\\.|\\[(?:[^\\r\\n\\]\\\\]|\\\\.)*\\])+\\/[a-z]*/,\n    WS: /\\s+/,\n    ML_COMMENT: /\\/\\*[\\s\\S]*?\\*\\//,\n    SL_COMMENT: /\\/\\/[^\\n\\r]*/,\n};\nexport const AbstractRule = 'AbstractRule';\nexport function isAbstractRule(item) {\n    return reflection.isInstance(item, AbstractRule);\n}\nexport const AbstractType = 'AbstractType';\nexport function isAbstractType(item) {\n    return reflection.isInstance(item, AbstractType);\n}\nexport const Condition = 'Condition';\nexport function isCondition(item) {\n    return reflection.isInstance(item, Condition);\n}\nexport function isFeatureName(item) {\n    return isPrimitiveType(item) || item === 'current' || item === 'entry' || item === 'extends' || item === 'false' || item === 'fragment' || item === 'grammar' || item === 'hidden' || item === 'import' || item === 'interface' || item === 'returns' || item === 'terminal' || item === 'true' || item === 'type' || item === 'infer' || item === 'infers' || item === 'with' || (typeof item === 'string' && (/\\^?[_a-zA-Z][\\w_]*/.test(item)));\n}\nexport function isPrimitiveType(item) {\n    return item === 'string' || item === 'number' || item === 'boolean' || item === 'Date' || item === 'bigint';\n}\nexport const TypeDefinition = 'TypeDefinition';\nexport function isTypeDefinition(item) {\n    return reflection.isInstance(item, TypeDefinition);\n}\nexport const ValueLiteral = 'ValueLiteral';\nexport function isValueLiteral(item) {\n    return reflection.isInstance(item, ValueLiteral);\n}\nexport const AbstractElement = 'AbstractElement';\nexport function isAbstractElement(item) {\n    return reflection.isInstance(item, AbstractElement);\n}\nexport const ArrayLiteral = 'ArrayLiteral';\nexport function isArrayLiteral(item) {\n    return reflection.isInstance(item, ArrayLiteral);\n}\nexport const ArrayType = 'ArrayType';\nexport function isArrayType(item) {\n    return reflection.isInstance(item, ArrayType);\n}\nexport const BooleanLiteral = 'BooleanLiteral';\nexport function isBooleanLiteral(item) {\n    return reflection.isInstance(item, BooleanLiteral);\n}\nexport const Conjunction = 'Conjunction';\nexport function isConjunction(item) {\n    return reflection.isInstance(item, Conjunction);\n}\nexport const Disjunction = 'Disjunction';\nexport function isDisjunction(item) {\n    return reflection.isInstance(item, Disjunction);\n}\nexport const Grammar = 'Grammar';\nexport function isGrammar(item) {\n    return reflection.isInstance(item, Grammar);\n}\nexport const GrammarImport = 'GrammarImport';\nexport function isGrammarImport(item) {\n    return reflection.isInstance(item, GrammarImport);\n}\nexport const InferredType = 'InferredType';\nexport function isInferredType(item) {\n    return reflection.isInstance(item, InferredType);\n}\nexport const Interface = 'Interface';\nexport function isInterface(item) {\n    return reflection.isInstance(item, Interface);\n}\nexport const NamedArgument = 'NamedArgument';\nexport function isNamedArgument(item) {\n    return reflection.isInstance(item, NamedArgument);\n}\nexport const Negation = 'Negation';\nexport function isNegation(item) {\n    return reflection.isInstance(item, Negation);\n}\nexport const NumberLiteral = 'NumberLiteral';\nexport function isNumberLiteral(item) {\n    return reflection.isInstance(item, NumberLiteral);\n}\nexport const Parameter = 'Parameter';\nexport function isParameter(item) {\n    return reflection.isInstance(item, Parameter);\n}\nexport const ParameterReference = 'ParameterReference';\nexport function isParameterReference(item) {\n    return reflection.isInstance(item, ParameterReference);\n}\nexport const ParserRule = 'ParserRule';\nexport function isParserRule(item) {\n    return reflection.isInstance(item, ParserRule);\n}\nexport const ReferenceType = 'ReferenceType';\nexport function isReferenceType(item) {\n    return reflection.isInstance(item, ReferenceType);\n}\nexport const ReturnType = 'ReturnType';\nexport function isReturnType(item) {\n    return reflection.isInstance(item, ReturnType);\n}\nexport const SimpleType = 'SimpleType';\nexport function isSimpleType(item) {\n    return reflection.isInstance(item, SimpleType);\n}\nexport const StringLiteral = 'StringLiteral';\nexport function isStringLiteral(item) {\n    return reflection.isInstance(item, StringLiteral);\n}\nexport const TerminalRule = 'TerminalRule';\nexport function isTerminalRule(item) {\n    return reflection.isInstance(item, TerminalRule);\n}\nexport const Type = 'Type';\nexport function isType(item) {\n    return reflection.isInstance(item, Type);\n}\nexport const TypeAttribute = 'TypeAttribute';\nexport function isTypeAttribute(item) {\n    return reflection.isInstance(item, TypeAttribute);\n}\nexport const UnionType = 'UnionType';\nexport function isUnionType(item) {\n    return reflection.isInstance(item, UnionType);\n}\nexport const Action = 'Action';\nexport function isAction(item) {\n    return reflection.isInstance(item, Action);\n}\nexport const Alternatives = 'Alternatives';\nexport function isAlternatives(item) {\n    return reflection.isInstance(item, Alternatives);\n}\nexport const Assignment = 'Assignment';\nexport function isAssignment(item) {\n    return reflection.isInstance(item, Assignment);\n}\nexport const CharacterRange = 'CharacterRange';\nexport function isCharacterRange(item) {\n    return reflection.isInstance(item, CharacterRange);\n}\nexport const CrossReference = 'CrossReference';\nexport function isCrossReference(item) {\n    return reflection.isInstance(item, CrossReference);\n}\nexport const EndOfFile = 'EndOfFile';\nexport function isEndOfFile(item) {\n    return reflection.isInstance(item, EndOfFile);\n}\nexport const Group = 'Group';\nexport function isGroup(item) {\n    return reflection.isInstance(item, Group);\n}\nexport const Keyword = 'Keyword';\nexport function isKeyword(item) {\n    return reflection.isInstance(item, Keyword);\n}\nexport const NegatedToken = 'NegatedToken';\nexport function isNegatedToken(item) {\n    return reflection.isInstance(item, NegatedToken);\n}\nexport const RegexToken = 'RegexToken';\nexport function isRegexToken(item) {\n    return reflection.isInstance(item, RegexToken);\n}\nexport const RuleCall = 'RuleCall';\nexport function isRuleCall(item) {\n    return reflection.isInstance(item, RuleCall);\n}\nexport const TerminalAlternatives = 'TerminalAlternatives';\nexport function isTerminalAlternatives(item) {\n    return reflection.isInstance(item, TerminalAlternatives);\n}\nexport const TerminalGroup = 'TerminalGroup';\nexport function isTerminalGroup(item) {\n    return reflection.isInstance(item, TerminalGroup);\n}\nexport const TerminalRuleCall = 'TerminalRuleCall';\nexport function isTerminalRuleCall(item) {\n    return reflection.isInstance(item, TerminalRuleCall);\n}\nexport const UnorderedGroup = 'UnorderedGroup';\nexport function isUnorderedGroup(item) {\n    return reflection.isInstance(item, UnorderedGroup);\n}\nexport const UntilToken = 'UntilToken';\nexport function isUntilToken(item) {\n    return reflection.isInstance(item, UntilToken);\n}\nexport const Wildcard = 'Wildcard';\nexport function isWildcard(item) {\n    return reflection.isInstance(item, Wildcard);\n}\nexport class LangiumGrammarAstReflection extends AbstractAstReflection {\n    getAllTypes() {\n        return ['AbstractElement', 'AbstractRule', 'AbstractType', 'Action', 'Alternatives', 'ArrayLiteral', 'ArrayType', 'Assignment', 'BooleanLiteral', 'CharacterRange', 'Condition', 'Conjunction', 'CrossReference', 'Disjunction', 'EndOfFile', 'Grammar', 'GrammarImport', 'Group', 'InferredType', 'Interface', 'Keyword', 'NamedArgument', 'NegatedToken', 'Negation', 'NumberLiteral', 'Parameter', 'ParameterReference', 'ParserRule', 'ReferenceType', 'RegexToken', 'ReturnType', 'RuleCall', 'SimpleType', 'StringLiteral', 'TerminalAlternatives', 'TerminalGroup', 'TerminalRule', 'TerminalRuleCall', 'Type', 'TypeAttribute', 'TypeDefinition', 'UnionType', 'UnorderedGroup', 'UntilToken', 'ValueLiteral', 'Wildcard'];\n    }\n    computeIsSubtype(subtype, supertype) {\n        switch (subtype) {\n            case Action:\n            case Alternatives:\n            case Assignment:\n            case CharacterRange:\n            case CrossReference:\n            case EndOfFile:\n            case Group:\n            case Keyword:\n            case NegatedToken:\n            case RegexToken:\n            case RuleCall:\n            case TerminalAlternatives:\n            case TerminalGroup:\n            case TerminalRuleCall:\n            case UnorderedGroup:\n            case UntilToken:\n            case Wildcard: {\n                return this.isSubtype(AbstractElement, supertype);\n            }\n            case ArrayLiteral:\n            case NumberLiteral:\n            case StringLiteral: {\n                return this.isSubtype(ValueLiteral, supertype);\n            }\n            case ArrayType:\n            case ReferenceType:\n            case SimpleType:\n            case UnionType: {\n                return this.isSubtype(TypeDefinition, supertype);\n            }\n            case BooleanLiteral: {\n                return this.isSubtype(Condition, supertype) || this.isSubtype(ValueLiteral, supertype);\n            }\n            case Conjunction:\n            case Disjunction:\n            case Negation:\n            case ParameterReference: {\n                return this.isSubtype(Condition, supertype);\n            }\n            case InferredType:\n            case Interface:\n            case Type: {\n                return this.isSubtype(AbstractType, supertype);\n            }\n            case ParserRule: {\n                return this.isSubtype(AbstractRule, supertype) || this.isSubtype(AbstractType, supertype);\n            }\n            case TerminalRule: {\n                return this.isSubtype(AbstractRule, supertype);\n            }\n            default: {\n                return false;\n            }\n        }\n    }\n    getReferenceType(refInfo) {\n        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;\n        switch (referenceId) {\n            case 'Action:type':\n            case 'CrossReference:type':\n            case 'Interface:superTypes':\n            case 'ParserRule:returnType':\n            case 'SimpleType:typeRef': {\n                return AbstractType;\n            }\n            case 'Grammar:hiddenTokens':\n            case 'ParserRule:hiddenTokens':\n            case 'RuleCall:rule': {\n                return AbstractRule;\n            }\n            case 'Grammar:usedGrammars': {\n                return Grammar;\n            }\n            case 'NamedArgument:parameter':\n            case 'ParameterReference:parameter': {\n                return Parameter;\n            }\n            case 'TerminalRuleCall:rule': {\n                return TerminalRule;\n            }\n            default: {\n                throw new Error(`${referenceId} is not a valid reference id.`);\n            }\n        }\n    }\n    getTypeMetaData(type) {\n        switch (type) {\n            case 'AbstractElement': {\n                return {\n                    name: 'AbstractElement',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'ArrayLiteral': {\n                return {\n                    name: 'ArrayLiteral',\n                    properties: [\n                        { name: 'elements', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'ArrayType': {\n                return {\n                    name: 'ArrayType',\n                    properties: [\n                        { name: 'elementType' }\n                    ]\n                };\n            }\n            case 'BooleanLiteral': {\n                return {\n                    name: 'BooleanLiteral',\n                    properties: [\n                        { name: 'true', defaultValue: false }\n                    ]\n                };\n            }\n            case 'Conjunction': {\n                return {\n                    name: 'Conjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Disjunction': {\n                return {\n                    name: 'Disjunction',\n                    properties: [\n                        { name: 'left' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'Grammar': {\n                return {\n                    name: 'Grammar',\n                    properties: [\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'imports', defaultValue: [] },\n                        { name: 'interfaces', defaultValue: [] },\n                        { name: 'isDeclared', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'rules', defaultValue: [] },\n                        { name: 'types', defaultValue: [] },\n                        { name: 'usedGrammars', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'GrammarImport': {\n                return {\n                    name: 'GrammarImport',\n                    properties: [\n                        { name: 'path' }\n                    ]\n                };\n            }\n            case 'InferredType': {\n                return {\n                    name: 'InferredType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'Interface': {\n                return {\n                    name: 'Interface',\n                    properties: [\n                        { name: 'attributes', defaultValue: [] },\n                        { name: 'name' },\n                        { name: 'superTypes', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'NamedArgument': {\n                return {\n                    name: 'NamedArgument',\n                    properties: [\n                        { name: 'calledByName', defaultValue: false },\n                        { name: 'parameter' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Negation': {\n                return {\n                    name: 'Negation',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NumberLiteral': {\n                return {\n                    name: 'NumberLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'Parameter': {\n                return {\n                    name: 'Parameter',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'ParameterReference': {\n                return {\n                    name: 'ParameterReference',\n                    properties: [\n                        { name: 'parameter' }\n                    ]\n                };\n            }\n            case 'ParserRule': {\n                return {\n                    name: 'ParserRule',\n                    properties: [\n                        { name: 'dataType' },\n                        { name: 'definesHiddenTokens', defaultValue: false },\n                        { name: 'definition' },\n                        { name: 'entry', defaultValue: false },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hiddenTokens', defaultValue: [] },\n                        { name: 'inferredType' },\n                        { name: 'name' },\n                        { name: 'parameters', defaultValue: [] },\n                        { name: 'returnType' },\n                        { name: 'wildcard', defaultValue: false }\n                    ]\n                };\n            }\n            case 'ReferenceType': {\n                return {\n                    name: 'ReferenceType',\n                    properties: [\n                        { name: 'referenceType' }\n                    ]\n                };\n            }\n            case 'ReturnType': {\n                return {\n                    name: 'ReturnType',\n                    properties: [\n                        { name: 'name' }\n                    ]\n                };\n            }\n            case 'SimpleType': {\n                return {\n                    name: 'SimpleType',\n                    properties: [\n                        { name: 'primitiveType' },\n                        { name: 'stringType' },\n                        { name: 'typeRef' }\n                    ]\n                };\n            }\n            case 'StringLiteral': {\n                return {\n                    name: 'StringLiteral',\n                    properties: [\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'TerminalRule': {\n                return {\n                    name: 'TerminalRule',\n                    properties: [\n                        { name: 'definition' },\n                        { name: 'fragment', defaultValue: false },\n                        { name: 'hidden', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Type': {\n                return {\n                    name: 'Type',\n                    properties: [\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'TypeAttribute': {\n                return {\n                    name: 'TypeAttribute',\n                    properties: [\n                        { name: 'defaultValue' },\n                        { name: 'isOptional', defaultValue: false },\n                        { name: 'name' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'UnionType': {\n                return {\n                    name: 'UnionType',\n                    properties: [\n                        { name: 'types', defaultValue: [] }\n                    ]\n                };\n            }\n            case 'Action': {\n                return {\n                    name: 'Action',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'inferredType' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'Alternatives': {\n                return {\n                    name: 'Alternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Assignment': {\n                return {\n                    name: 'Assignment',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'feature' },\n                        { name: 'lookahead' },\n                        { name: 'operator' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'CharacterRange': {\n                return {\n                    name: 'CharacterRange',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'left' },\n                        { name: 'lookahead' },\n                        { name: 'right' }\n                    ]\n                };\n            }\n            case 'CrossReference': {\n                return {\n                    name: 'CrossReference',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'deprecatedSyntax', defaultValue: false },\n                        { name: 'lookahead' },\n                        { name: 'terminal' },\n                        { name: 'type' }\n                    ]\n                };\n            }\n            case 'EndOfFile': {\n                return {\n                    name: 'EndOfFile',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Group': {\n                return {\n                    name: 'Group',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'guardCondition' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'Keyword': {\n                return {\n                    name: 'Keyword',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'value' }\n                    ]\n                };\n            }\n            case 'NegatedToken': {\n                return {\n                    name: 'NegatedToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'RegexToken': {\n                return {\n                    name: 'RegexToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'regex' }\n                    ]\n                };\n            }\n            case 'RuleCall': {\n                return {\n                    name: 'RuleCall',\n                    properties: [\n                        { name: 'arguments', defaultValue: [] },\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'TerminalAlternatives': {\n                return {\n                    name: 'TerminalAlternatives',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalGroup': {\n                return {\n                    name: 'TerminalGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'TerminalRuleCall': {\n                return {\n                    name: 'TerminalRuleCall',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'rule' }\n                    ]\n                };\n            }\n            case 'UnorderedGroup': {\n                return {\n                    name: 'UnorderedGroup',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'elements', defaultValue: [] },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            case 'UntilToken': {\n                return {\n                    name: 'UntilToken',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' },\n                        { name: 'terminal' }\n                    ]\n                };\n            }\n            case 'Wildcard': {\n                return {\n                    name: 'Wildcard',\n                    properties: [\n                        { name: 'cardinality' },\n                        { name: 'lookahead' }\n                    ]\n                };\n            }\n            default: {\n                return {\n                    name: type,\n                    properties: []\n                };\n            }\n        }\n    }\n}\nexport const reflection = new LangiumGrammarAstReflection();\n//# sourceMappingURL=ast.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { DONE_RESULT, stream, StreamImpl, TreeStreamImpl } from './stream.js';\nimport { inRange } from './cst-utils.js';\n/**\n * Link the `$container` and other related properties of every AST node that is directly contained\n * in the given `node`.\n */\nexport function linkContentToContainer(node) {\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (Array.isArray(value)) {\n                value.forEach((item, index) => {\n                    if (isAstNode(item)) {\n                        item.$container = node;\n                        item.$containerProperty = name;\n                        item.$containerIndex = index;\n                    }\n                });\n            }\n            else if (isAstNode(value)) {\n                value.$container = node;\n                value.$containerProperty = name;\n            }\n        }\n    }\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and return the first\n * node that matches the type predicate. If the start node itself matches, it is returned.\n * If no container matches, `undefined` is returned.\n */\nexport function getContainerOfType(node, typePredicate) {\n    let item = node;\n    while (item) {\n        if (typePredicate(item)) {\n            return item;\n        }\n        item = item.$container;\n    }\n    return undefined;\n}\n/**\n * Walk along the hierarchy of containers from the given AST node to the root and check for existence\n * of a container that matches the given predicate. The start node is included in the checks.\n */\nexport function hasContainerOfType(node, predicate) {\n    let item = node;\n    while (item) {\n        if (predicate(item)) {\n            return true;\n        }\n        item = item.$container;\n    }\n    return false;\n}\n/**\n * Retrieve the document in which the given AST node is contained. A reference to the document is\n * usually held by the root node of the AST.\n *\n * @throws an error if the node is not contained in a document.\n */\nexport function getDocument(node) {\n    const rootNode = findRootNode(node);\n    const result = rootNode.$document;\n    if (!result) {\n        throw new Error('AST node has no document.');\n    }\n    return result;\n}\n/**\n * Returns the root node of the given AST node by following the `$container` references.\n */\nexport function findRootNode(node) {\n    while (node.$container) {\n        node = node.$container;\n    }\n    return node;\n}\n/**\n * Create a stream of all AST nodes that are directly contained in the given node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamContents(node, options) {\n    if (!node) {\n        throw new Error('Node must be an AstNode.');\n    }\n    const range = options === null || options === void 0 ? void 0 : options.range;\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isAstNode(value)) {\n                    state.keyIndex++;\n                    if (isAstNodeInRange(value, range)) {\n                        return { done: false, value };\n                    }\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isAstNode(element) && isAstNodeInRange(element, range)) {\n                            return { done: false, value: element };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node.\n * This does not include the root node itself.\n */\nexport function streamAllContents(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options));\n}\n/**\n * Create a stream of all AST nodes that are directly and indirectly contained in the given root node,\n * including the root node itself.\n */\nexport function streamAst(root, options) {\n    if (!root) {\n        throw new Error('Root node must be an AstNode.');\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.range) && !isAstNodeInRange(root, options.range)) {\n        // Return an empty stream if the root node isn't in range\n        return new TreeStreamImpl(root, () => []);\n    }\n    return new TreeStreamImpl(root, node => streamContents(node, options), { includeRoot: true });\n}\nfunction isAstNodeInRange(astNode, range) {\n    var _a;\n    if (!range) {\n        return true;\n    }\n    const nodeRange = (_a = astNode.$cstNode) === null || _a === void 0 ? void 0 : _a.range;\n    if (!nodeRange) {\n        return false;\n    }\n    return inRange(nodeRange, range);\n}\n/**\n * Create a stream of all cross-references that are held by the given AST node. This includes\n * single-valued as well as multi-valued (array) properties.\n */\nexport function streamReferences(node) {\n    return new StreamImpl(() => ({\n        keys: Object.keys(node),\n        keyIndex: 0,\n        arrayIndex: 0\n    }), state => {\n        while (state.keyIndex < state.keys.length) {\n            const property = state.keys[state.keyIndex];\n            if (!property.startsWith('$')) {\n                const value = node[property];\n                if (isReference(value)) {\n                    state.keyIndex++;\n                    return { done: false, value: { reference: value, container: node, property } };\n                }\n                else if (Array.isArray(value)) {\n                    while (state.arrayIndex < value.length) {\n                        const index = state.arrayIndex++;\n                        const element = value[index];\n                        if (isReference(element)) {\n                            return { done: false, value: { reference: element, container: node, property, index } };\n                        }\n                    }\n                    state.arrayIndex = 0;\n                }\n            }\n            state.keyIndex++;\n        }\n        return DONE_RESULT;\n    });\n}\n/**\n * Returns a Stream of references to the target node from the AstNode tree\n *\n * @param targetNode AstNode we are looking for\n * @param lookup AstNode where we search for references. If not provided, the root node of the document is used as the default value\n */\nexport function findLocalReferences(targetNode, lookup = getDocument(targetNode).parseResult.value) {\n    const refs = [];\n    streamAst(lookup).forEach(node => {\n        streamReferences(node).forEach(refInfo => {\n            if (refInfo.reference.ref === targetNode) {\n                refs.push(refInfo.reference);\n            }\n        });\n    });\n    return stream(refs);\n}\n/**\n * Assigns all mandatory AST properties to the specified node.\n *\n * @param reflection Reflection object used to gather mandatory properties for the node.\n * @param node Specified node is modified in place and properties are directly assigned.\n */\nexport function assignMandatoryProperties(reflection, node) {\n    const typeMetaData = reflection.getTypeMetaData(node.$type);\n    const genericNode = node;\n    for (const property of typeMetaData.properties) {\n        // Only set the value if the property is not already set and if it has a default value\n        if (property.defaultValue !== undefined && genericNode[property.name] === undefined) {\n            genericNode[property.name] = copyDefaultValue(property.defaultValue);\n        }\n    }\n}\nfunction copyDefaultValue(propertyType) {\n    if (Array.isArray(propertyType)) {\n        return [...propertyType.map(copyDefaultValue)];\n    }\n    else {\n        return propertyType;\n    }\n}\n/**\n * Creates a deep copy of the specified AST node.\n * The resulting copy will only contain semantically relevant information, such as the `$type` property and AST properties.\n *\n * References are copied without resolved cross reference. The specified function is used to rebuild them.\n */\nexport function copyAstNode(node, buildReference) {\n    const copy = { $type: node.$type };\n    for (const [name, value] of Object.entries(node)) {\n        if (!name.startsWith('$')) {\n            if (isAstNode(value)) {\n                copy[name] = copyAstNode(value, buildReference);\n            }\n            else if (isReference(value)) {\n                copy[name] = buildReference(copy, name, value.$refNode, value.$refText);\n            }\n            else if (Array.isArray(value)) {\n                const copiedArray = [];\n                for (const element of value) {\n                    if (isAstNode(element)) {\n                        copiedArray.push(copyAstNode(element, buildReference));\n                    }\n                    else if (isReference(element)) {\n                        copiedArray.push(buildReference(copy, name, element.$refNode, element.$refText));\n                    }\n                    else {\n                        copiedArray.push(element);\n                    }\n                }\n                copy[name] = copiedArray;\n            }\n            else {\n                copy[name] = value;\n            }\n        }\n    }\n    linkContentToContainer(copy);\n    return copy;\n}\n//# sourceMappingURL=ast-utils.js.map","export function cc(char) {\n    return char.charCodeAt(0);\n}\nexport function insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nexport function addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nexport function ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nexport function ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nexport function isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map","import { cc } from \"./utils.js\";\nexport const digitsCharCodes = [];\nfor (let i = cc(\"0\"); i <= cc(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nexport const wordCharCodes = [cc(\"_\")].concat(digitsCharCodes);\nfor (let i = cc(\"a\"); i <= cc(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = cc(\"A\"); i <= cc(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nexport const whitespaceCodes = [\n    cc(\" \"),\n    cc(\"\\f\"),\n    cc(\"\\n\"),\n    cc(\"\\r\"),\n    cc(\"\\t\"),\n    cc(\"\\v\"),\n    cc(\"\\t\"),\n    cc(\"\\u00a0\"),\n    cc(\"\\u1680\"),\n    cc(\"\\u2000\"),\n    cc(\"\\u2001\"),\n    cc(\"\\u2002\"),\n    cc(\"\\u2003\"),\n    cc(\"\\u2004\"),\n    cc(\"\\u2005\"),\n    cc(\"\\u2006\"),\n    cc(\"\\u2007\"),\n    cc(\"\\u2008\"),\n    cc(\"\\u2009\"),\n    cc(\"\\u200a\"),\n    cc(\"\\u2028\"),\n    cc(\"\\u2029\"),\n    cc(\"\\u202f\"),\n    cc(\"\\u205f\"),\n    cc(\"\\u3000\"),\n    cc(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map","import { addFlag, ASSERT_EXISTS, ASSERT_NEVER_REACH_HERE, cc, insertToSet, isCharacter, } from \"./utils.js\";\nimport { digitsCharCodes, whitespaceCodes, wordCharCodes, } from \"./character-classes.js\";\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nexport class RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    addFlag(flags, \"global\");\n                    break;\n                case \"i\":\n                    addFlag(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    addFlag(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    addFlag(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    addFlag(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                ASSERT_EXISTS(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                ASSERT_EXISTS(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [cc(\"\\n\"), cc(\"\\r\"), cc(\"\\u2028\"), cc(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = digitsCharCodes;\n                break;\n            case \"D\":\n                set = digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = whitespaceCodes;\n                break;\n            case \"S\":\n                set = whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = wordCharCodes;\n                break;\n            case \"W\":\n                set = wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = cc(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = cc(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = cc(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = cc(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = cc(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if (ASSERT_EXISTS(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return ASSERT_NEVER_REACH_HERE();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: cc(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: cc(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if (isCharacter(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if (isCharacter(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    insertToSet(from.value, set);\n                    set.push(cc(\"-\"));\n                    insertToSet(to.value, set);\n                }\n            }\n            else {\n                insertToSet(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: cc(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: cc(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map","export class BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { RegExpParser, BaseRegExpVisitor } from '@chevrotain/regexp-to-ast';\nexport const NEWLINE_REGEXP = /\\r?\\n/gm;\nconst regexpParser = new RegExpParser();\n/**\n * This class is in charge of heuristically identifying start/end tokens of terminals.\n *\n * The way this works is by doing the following:\n * 1. Traverse the regular expression in the \"start state\"\n * 2. Add any encountered sets/single characters to the \"start regexp\"\n * 3. Once we encounter any variable-length content (i.e. with quantifiers such as +/?/*), we enter the \"end state\"\n * 4. In the end state, any sets/single characters are added to an \"end stack\".\n * 5. If we re-encounter any variable-length content we reset the end stack\n * 6. We continue visiting the regex until the end, reseting the end stack and rebuilding it as necessary\n *\n * After traversing a regular expression the `startRegexp/endRegexp` properties allow access to the stored start/end of the terminal\n */\nclass TerminalRegExpVisitor extends BaseRegExpVisitor {\n    constructor() {\n        super(...arguments);\n        this.isStarting = true;\n        this.endRegexpStack = [];\n        this.multiline = false;\n    }\n    get endRegex() {\n        return this.endRegexpStack.join('');\n    }\n    reset(regex) {\n        this.multiline = false;\n        this.regex = regex;\n        this.startRegexp = '';\n        this.isStarting = true;\n        this.endRegexpStack = [];\n    }\n    visitGroup(node) {\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n    }\n    visitCharacter(node) {\n        const char = String.fromCharCode(node.value);\n        if (!this.multiline && char === '\\n') {\n            this.multiline = true;\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const escapedChar = escapeRegExp(char);\n            this.endRegexpStack.push(escapedChar);\n            if (this.isStarting) {\n                this.startRegexp += escapedChar;\n            }\n        }\n    }\n    visitSet(node) {\n        if (!this.multiline) {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            const regex = new RegExp(set);\n            this.multiline = Boolean('\\n'.match(regex));\n        }\n        if (node.quantifier) {\n            this.isStarting = false;\n            this.endRegexpStack = [];\n        }\n        else {\n            const set = this.regex.substring(node.loc.begin, node.loc.end);\n            this.endRegexpStack.push(set);\n            if (this.isStarting) {\n                this.startRegexp += set;\n            }\n        }\n    }\n    visitChildren(node) {\n        if (node.type === 'Group') {\n            // Ignore children of groups with quantifier (+/*/?)\n            // These groups are unrelated to start/end tokens of terminals\n            const group = node;\n            if (group.quantifier) {\n                return;\n            }\n        }\n        super.visitChildren(node);\n    }\n}\nconst visitor = new TerminalRegExpVisitor();\nexport function getTerminalParts(regexp) {\n    try {\n        if (typeof regexp !== 'string') {\n            regexp = regexp.source;\n        }\n        regexp = `/${regexp}/`;\n        const pattern = regexpParser.pattern(regexp);\n        const parts = [];\n        for (const alternative of pattern.value.value) {\n            visitor.reset(regexp);\n            visitor.visit(alternative);\n            parts.push({\n                start: visitor.startRegexp,\n                end: visitor.endRegex\n            });\n        }\n        return parts;\n    }\n    catch (_a) {\n        return [];\n    }\n}\nexport function isMultilineComment(regexp) {\n    try {\n        if (typeof regexp === 'string') {\n            regexp = new RegExp(regexp);\n        }\n        regexp = regexp.toString();\n        visitor.reset(regexp);\n        // Parsing the pattern might fail (since it's user code)\n        visitor.visit(regexpParser.pattern(regexp));\n        return visitor.multiline;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nexport function isWhitespace(value) {\n    const regexp = typeof value === 'string' ? new RegExp(value) : value;\n    return regexp.test(' ');\n}\nexport function escapeRegExp(value) {\n    return value.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nexport function getCaseInsensitivePattern(keyword) {\n    return Array.prototype.map.call(keyword, letter => /\\w/.test(letter) ? `[${letter.toLowerCase()}${letter.toUpperCase()}]` : escapeRegExp(letter)).join('');\n}\n/**\n * Determines whether the given input has a partial match with the specified regex.\n * @param regex The regex to partially match against\n * @param input The input string\n * @returns Whether any match exists.\n */\nexport function partialMatches(regex, input) {\n    const partial = partialRegExp(regex);\n    const match = input.match(partial);\n    return !!match && match[0].length > 0;\n}\n/**\n * Builds a partial regex from the input regex. A partial regex is able to match incomplete input strings. E.g.\n * a partial regex constructed from `/ab/` is able to match the string `a` without needing a following `b` character. However it won't match `b` alone.\n * @param regex The input regex to be converted.\n * @returns A partial regex constructed from the input regex.\n */\nexport function partialRegExp(regex) {\n    if (typeof regex === 'string') {\n        regex = new RegExp(regex);\n    }\n    const re = regex, source = regex.source;\n    let i = 0;\n    function process() {\n        let result = '', tmp;\n        function appendRaw(nbChars) {\n            result += source.substr(i, nbChars);\n            i += nbChars;\n        }\n        function appendOptional(nbChars) {\n            result += '(?:' + source.substr(i, nbChars) + '|$)';\n            i += nbChars;\n        }\n        while (i < source.length) {\n            switch (source[i]) {\n                case '\\\\':\n                    switch (source[i + 1]) {\n                        case 'c':\n                            appendOptional(3);\n                            break;\n                        case 'x':\n                            appendOptional(4);\n                            break;\n                        case 'u':\n                            if (re.unicode) {\n                                if (source[i + 2] === '{') {\n                                    appendOptional(source.indexOf('}', i) - i + 1);\n                                }\n                                else {\n                                    appendOptional(6);\n                                }\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'p':\n                        case 'P':\n                            if (re.unicode) {\n                                appendOptional(source.indexOf('}', i) - i + 1);\n                            }\n                            else {\n                                appendOptional(2);\n                            }\n                            break;\n                        case 'k':\n                            appendOptional(source.indexOf('>', i) - i + 1);\n                            break;\n                        default:\n                            appendOptional(2);\n                            break;\n                    }\n                    break;\n                case '[':\n                    tmp = /\\[(?:\\\\.|.)*?\\]/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source) || [];\n                    appendOptional(tmp[0].length);\n                    break;\n                case '|':\n                case '^':\n                case '$':\n                case '*':\n                case '+':\n                case '?':\n                    appendRaw(1);\n                    break;\n                case '{':\n                    tmp = /\\{\\d+,?\\d*\\}/g;\n                    tmp.lastIndex = i;\n                    tmp = tmp.exec(source);\n                    if (tmp) {\n                        appendRaw(tmp[0].length);\n                    }\n                    else {\n                        appendOptional(1);\n                    }\n                    break;\n                case '(':\n                    if (source[i + 1] === '?') {\n                        switch (source[i + 2]) {\n                            case ':':\n                                result += '(?:';\n                                i += 3;\n                                result += process() + '|$)';\n                                break;\n                            case '=':\n                                result += '(?=';\n                                i += 3;\n                                result += process() + ')';\n                                break;\n                            case '!':\n                                tmp = i;\n                                i += 3;\n                                process();\n                                result += source.substr(tmp, i - tmp);\n                                break;\n                            case '<':\n                                switch (source[i + 3]) {\n                                    case '=':\n                                    case '!':\n                                        tmp = i;\n                                        i += 4;\n                                        process();\n                                        result += source.substr(tmp, i - tmp);\n                                        break;\n                                    default:\n                                        appendRaw(source.indexOf('>', i) - i + 1);\n                                        result += process() + '|$)';\n                                        break;\n                                }\n                                break;\n                        }\n                    }\n                    else {\n                        appendRaw(1);\n                        result += process() + '|$)';\n                    }\n                    break;\n                case ')':\n                    ++i;\n                    return result;\n                default:\n                    appendOptional(1);\n                    break;\n            }\n        }\n        return result;\n    }\n    return new RegExp(process(), regex.flags);\n}\n//# sourceMappingURL=regexp-utils.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { assertUnreachable } from '../utils/errors.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { getContainerOfType, streamAllContents } from './ast-utils.js';\nimport { streamCst } from './cst-utils.js';\nimport { escapeRegExp } from './regexp-utils.js';\n/**\n * Returns the entry rule of the given grammar, if any. If the grammar file does not contain an entry rule,\n * the result is `undefined`.\n */\nexport function getEntryRule(grammar) {\n    return grammar.rules.find(e => ast.isParserRule(e) && e.entry);\n}\n/**\n * Returns all hidden terminal rules of the given grammar, if any.\n */\nexport function getHiddenRules(grammar) {\n    return grammar.rules.filter((e) => ast.isTerminalRule(e) && e.hidden);\n}\n/**\n * Returns all rules that can be reached from the topmost rules of the specified grammar (entry and hidden terminal rules).\n *\n * @param grammar The grammar that contains all rules\n * @param allTerminals Whether or not to include terminals that are referenced only by other terminals\n * @returns A list of referenced parser and terminal rules. If the grammar contains no entry rule,\n *      this function returns all rules of the specified grammar.\n */\nexport function getAllReachableRules(grammar, allTerminals) {\n    const ruleNames = new Set();\n    const entryRule = getEntryRule(grammar);\n    if (!entryRule) {\n        return new Set(grammar.rules);\n    }\n    const topMostRules = [entryRule].concat(getHiddenRules(grammar));\n    for (const rule of topMostRules) {\n        ruleDfs(rule, ruleNames, allTerminals);\n    }\n    const rules = new Set();\n    for (const rule of grammar.rules) {\n        if (ruleNames.has(rule.name) || (ast.isTerminalRule(rule) && rule.hidden)) {\n            rules.add(rule);\n        }\n    }\n    return rules;\n}\nfunction ruleDfs(rule, visitedSet, allTerminals) {\n    visitedSet.add(rule.name);\n    streamAllContents(rule).forEach(node => {\n        if (ast.isRuleCall(node) || (allTerminals && ast.isTerminalRuleCall(node))) {\n            const refRule = node.rule.ref;\n            if (refRule && !visitedSet.has(refRule.name)) {\n                ruleDfs(refRule, visitedSet, allTerminals);\n            }\n        }\n    });\n}\n/**\n * Determines the grammar expression used to parse a cross-reference (usually a reference to a terminal rule).\n * A cross-reference can declare this expression explicitly in the form `[Type : Terminal]`, but if `Terminal`\n * is omitted, this function attempts to infer it from the name of the referenced `Type` (using `findNameAssignment`).\n *\n * Returns the grammar expression used to parse the given cross-reference, or `undefined` if it is not declared\n * and cannot be inferred.\n */\nexport function getCrossReferenceTerminal(crossRef) {\n    if (crossRef.terminal) {\n        return crossRef.terminal;\n    }\n    else if (crossRef.type.ref) {\n        const nameAssigment = findNameAssignment(crossRef.type.ref);\n        return nameAssigment === null || nameAssigment === void 0 ? void 0 : nameAssigment.terminal;\n    }\n    return undefined;\n}\n/**\n * Determines whether the given terminal rule represents a comment. This is true if the rule is marked\n * as `hidden` and it does not match white space. This means every hidden token (i.e. excluded from the AST)\n * that contains visible characters is considered a comment.\n */\nexport function isCommentTerminal(terminalRule) {\n    return terminalRule.hidden && !terminalRegex(terminalRule).test(' ');\n}\n/**\n * Find all CST nodes within the given node that contribute to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is an empty array.\n * @param property A property name of the constructed AST node. If this is undefined, the result is an empty array.\n */\nexport function findNodesForProperty(node, property) {\n    if (!node || !property) {\n        return [];\n    }\n    return findNodesForPropertyInternal(node, property, node.astNode, true);\n}\n/**\n * Find a single CST node within the given node that contributes to the specified property.\n *\n * @param node A CST node in which to look for property assignments. If this is undefined, the result is `undefined`.\n * @param property A property name of the constructed AST node. If this is undefined, the result is `undefined`.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of assignments to the property, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForProperty(node, property, index) {\n    if (!node || !property) {\n        return undefined;\n    }\n    const nodes = findNodesForPropertyInternal(node, property, node.astNode, true);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nfunction findNodesForPropertyInternal(node, property, element, first) {\n    if (!first) {\n        const nodeFeature = getContainerOfType(node.grammarSource, ast.isAssignment);\n        if (nodeFeature && nodeFeature.feature === property) {\n            return [node];\n        }\n    }\n    if (isCompositeCstNode(node) && node.astNode === element) {\n        return node.content.flatMap(e => findNodesForPropertyInternal(e, property, element, false));\n    }\n    return [];\n}\n/**\n * Find all CST nodes within the given node that correspond to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is an empty array.\n * @param keyword A keyword as specified in the grammar.\n */\nexport function findNodesForKeyword(node, keyword) {\n    if (!node) {\n        return [];\n    }\n    return findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n}\n/**\n * Find a single CST node within the given node that corresponds to the specified keyword.\n *\n * @param node A CST node in which to look for keywords. If this is undefined, the result is `undefined`.\n * @param keyword A keyword as specified in the grammar.\n * @param index If no index is specified or the index is less than zero, the first found node is returned. If the\n *        specified index exceeds the number of keyword occurrences, the last found node is returned. Otherwise,\n *        the node with the specified index is returned.\n */\nexport function findNodeForKeyword(node, keyword, index) {\n    if (!node) {\n        return undefined;\n    }\n    const nodes = findNodesForKeywordInternal(node, keyword, node === null || node === void 0 ? void 0 : node.astNode);\n    if (nodes.length === 0) {\n        return undefined;\n    }\n    if (index !== undefined) {\n        index = Math.max(0, Math.min(index, nodes.length - 1));\n    }\n    else {\n        index = 0;\n    }\n    return nodes[index];\n}\nexport function findNodesForKeywordInternal(node, keyword, element) {\n    if (node.astNode !== element) {\n        return [];\n    }\n    if (ast.isKeyword(node.grammarSource) && node.grammarSource.value === keyword) {\n        return [node];\n    }\n    const treeIterator = streamCst(node).iterator();\n    let result;\n    const keywordNodes = [];\n    do {\n        result = treeIterator.next();\n        if (!result.done) {\n            const childNode = result.value;\n            if (childNode.astNode === element) {\n                if (ast.isKeyword(childNode.grammarSource) && childNode.grammarSource.value === keyword) {\n                    keywordNodes.push(childNode);\n                }\n            }\n            else {\n                treeIterator.prune();\n            }\n        }\n    } while (!result.done);\n    return keywordNodes;\n}\n/**\n * If the given CST node was parsed in the context of a property assignment, the respective `Assignment` grammar\n * node is returned. If no assignment is found, the result is `undefined`.\n *\n * @param cstNode A CST node for which to find a property assignment.\n */\nexport function findAssignment(cstNode) {\n    var _a;\n    const astNode = cstNode.astNode;\n    // Only search until the ast node of the parent cst node is no longer the original ast node\n    // This would make us jump to a preceding rule call, which contains only unrelated assignments\n    while (astNode === ((_a = cstNode.container) === null || _a === void 0 ? void 0 : _a.astNode)) {\n        const assignment = getContainerOfType(cstNode.grammarSource, ast.isAssignment);\n        if (assignment) {\n            return assignment;\n        }\n        cstNode = cstNode.container;\n    }\n    return undefined;\n}\n/**\n * Find an assignment to the `name` property for the given grammar type. This requires the `type` to be inferred\n * from a parser rule, and that rule must contain an assignment to the `name` property. In all other cases,\n * this function returns `undefined`.\n */\nexport function findNameAssignment(type) {\n    let startNode = type;\n    if (ast.isInferredType(startNode)) {\n        // for inferred types, the location to start searching for the name-assignment is different\n        if (ast.isAction(startNode.$container)) {\n            // a type which is explicitly inferred by an action: investigate the sibbling of the Action node, i.e. start searching at the Action's parent\n            startNode = startNode.$container.$container;\n        }\n        else if (ast.isParserRule(startNode.$container)) {\n            // investigate the parser rule with the explicitly inferred type\n            startNode = startNode.$container;\n        }\n        else {\n            assertUnreachable(startNode.$container);\n        }\n    }\n    return findNameAssignmentInternal(type, startNode, new Map());\n}\nfunction findNameAssignmentInternal(type, startNode, cache) {\n    var _a;\n    // the cache is only required to prevent infinite loops\n    function go(node, refType) {\n        let childAssignment = undefined;\n        const parentAssignment = getContainerOfType(node, ast.isAssignment);\n        // No parent assignment implies unassigned rule call\n        if (!parentAssignment) {\n            childAssignment = findNameAssignmentInternal(refType, refType, cache);\n        }\n        cache.set(type, childAssignment);\n        return childAssignment;\n    }\n    if (cache.has(type)) {\n        return cache.get(type);\n    }\n    cache.set(type, undefined);\n    for (const node of streamAllContents(startNode)) {\n        if (ast.isAssignment(node) && node.feature.toLowerCase() === 'name') {\n            cache.set(type, node);\n            return node;\n        }\n        else if (ast.isRuleCall(node) && ast.isParserRule(node.rule.ref)) {\n            return go(node, node.rule.ref);\n        }\n        else if (ast.isSimpleType(node) && ((_a = node.typeRef) === null || _a === void 0 ? void 0 : _a.ref)) {\n            return go(node, node.typeRef.ref);\n        }\n    }\n    return undefined;\n}\nexport function getActionAtElement(element) {\n    const parent = element.$container;\n    if (ast.isGroup(parent)) {\n        const elements = parent.elements;\n        const index = elements.indexOf(element);\n        for (let i = index - 1; i >= 0; i--) {\n            const item = elements[i];\n            if (ast.isAction(item)) {\n                return item;\n            }\n            else {\n                const action = streamAllContents(elements[i]).find(ast.isAction);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (ast.isAbstractElement(parent)) {\n        return getActionAtElement(parent);\n    }\n    else {\n        return undefined;\n    }\n}\nexport function isOptionalCardinality(cardinality, element) {\n    return cardinality === '?' || cardinality === '*' || (ast.isGroup(element) && Boolean(element.guardCondition));\n}\nexport function isArrayCardinality(cardinality) {\n    return cardinality === '*' || cardinality === '+';\n}\nexport function isArrayOperator(operator) {\n    return operator === '+=';\n}\n/**\n * Determines whether the given parser rule is a _data type rule_, meaning that it has a\n * primitive return type like `number`, `boolean`, etc.\n */\nexport function isDataTypeRule(rule) {\n    return isDataTypeRuleInternal(rule, new Set());\n}\nfunction isDataTypeRuleInternal(rule, visited) {\n    if (visited.has(rule)) {\n        return true;\n    }\n    else {\n        visited.add(rule);\n    }\n    for (const node of streamAllContents(rule)) {\n        if (ast.isRuleCall(node)) {\n            if (!node.rule.ref) {\n                // RuleCall to unresolved rule. Don't assume `rule` is a DataType rule.\n                return false;\n            }\n            if (ast.isParserRule(node.rule.ref) && !isDataTypeRuleInternal(node.rule.ref, visited)) {\n                return false;\n            }\n        }\n        else if (ast.isAssignment(node)) {\n            return false;\n        }\n        else if (ast.isAction(node)) {\n            return false;\n        }\n    }\n    return Boolean(rule.definition);\n}\nexport function isDataType(type) {\n    return isDataTypeInternal(type.type, new Set());\n}\nfunction isDataTypeInternal(type, visited) {\n    if (visited.has(type)) {\n        return true;\n    }\n    else {\n        visited.add(type);\n    }\n    if (ast.isArrayType(type)) {\n        return false;\n    }\n    else if (ast.isReferenceType(type)) {\n        return false;\n    }\n    else if (ast.isUnionType(type)) {\n        return type.types.every(e => isDataTypeInternal(e, visited));\n    }\n    else if (ast.isSimpleType(type)) {\n        if (type.primitiveType !== undefined) {\n            return true;\n        }\n        else if (type.stringType !== undefined) {\n            return true;\n        }\n        else if (type.typeRef !== undefined) {\n            const ref = type.typeRef.ref;\n            if (ast.isType(ref)) {\n                return isDataTypeInternal(ref.type, visited);\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    else {\n        return false;\n    }\n}\nexport function getExplicitRuleType(rule) {\n    if (rule.inferredType) {\n        return rule.inferredType.name;\n    }\n    else if (rule.dataType) {\n        return rule.dataType;\n    }\n    else if (rule.returnType) {\n        const refType = rule.returnType.ref;\n        if (refType) {\n            // check if we need to check Action as return type\n            if (ast.isParserRule(refType)) {\n                return refType.name;\n            }\n            else if (ast.isInterface(refType) || ast.isType(refType)) {\n                return refType.name;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getTypeName(type) {\n    var _a;\n    if (ast.isParserRule(type)) {\n        return isDataTypeRule(type) ? type.name : (_a = getExplicitRuleType(type)) !== null && _a !== void 0 ? _a : type.name;\n    }\n    else if (ast.isInterface(type) || ast.isType(type) || ast.isReturnType(type)) {\n        return type.name;\n    }\n    else if (ast.isAction(type)) {\n        const actionType = getActionType(type);\n        if (actionType) {\n            return actionType;\n        }\n    }\n    else if (ast.isInferredType(type)) {\n        return type.name;\n    }\n    throw new Error('Cannot get name of Unknown Type');\n}\nexport function getActionType(action) {\n    var _a;\n    if (action.inferredType) {\n        return action.inferredType.name;\n    }\n    else if ((_a = action.type) === null || _a === void 0 ? void 0 : _a.ref) {\n        return getTypeName(action.type.ref);\n    }\n    return undefined; // not inferring and not referencing a valid type\n}\nexport function getRuleType(rule) {\n    var _a, _b, _c;\n    if (ast.isTerminalRule(rule)) {\n        return (_b = (_a = rule.type) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : 'string';\n    }\n    else {\n        return isDataTypeRule(rule) ? rule.name : (_c = getExplicitRuleType(rule)) !== null && _c !== void 0 ? _c : rule.name;\n    }\n}\nexport function terminalRegex(terminalRule) {\n    const flags = {\n        s: false,\n        i: false,\n        u: false\n    };\n    const source = abstractElementToRegex(terminalRule.definition, flags);\n    const flagText = Object.entries(flags).filter(([, value]) => value).map(([name]) => name).join('');\n    return new RegExp(source, flagText);\n}\n// Using [\\s\\S]* allows to match everything, compared to . which doesn't match line terminators\nconst WILDCARD = /[\\s\\S]/.source;\nfunction abstractElementToRegex(element, flags) {\n    if (ast.isTerminalAlternatives(element)) {\n        return terminalAlternativesToRegex(element);\n    }\n    else if (ast.isTerminalGroup(element)) {\n        return terminalGroupToRegex(element);\n    }\n    else if (ast.isCharacterRange(element)) {\n        return characterRangeToRegex(element);\n    }\n    else if (ast.isTerminalRuleCall(element)) {\n        const rule = element.rule.ref;\n        if (!rule) {\n            throw new Error('Missing rule reference.');\n        }\n        return withCardinality(abstractElementToRegex(rule.definition), {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else if (ast.isNegatedToken(element)) {\n        return negateTokenToRegex(element);\n    }\n    else if (ast.isUntilToken(element)) {\n        return untilTokenToRegex(element);\n    }\n    else if (ast.isRegexToken(element)) {\n        const lastSlash = element.regex.lastIndexOf('/');\n        const source = element.regex.substring(1, lastSlash);\n        const regexFlags = element.regex.substring(lastSlash + 1);\n        if (flags) {\n            flags.i = regexFlags.includes('i');\n            flags.s = regexFlags.includes('s');\n            flags.u = regexFlags.includes('u');\n        }\n        return withCardinality(source, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead,\n            wrap: false\n        });\n    }\n    else if (ast.isWildcard(element)) {\n        return withCardinality(WILDCARD, {\n            cardinality: element.cardinality,\n            lookahead: element.lookahead\n        });\n    }\n    else {\n        throw new Error(`Invalid terminal element: ${element === null || element === void 0 ? void 0 : element.$type}`);\n    }\n}\nfunction terminalAlternativesToRegex(alternatives) {\n    return withCardinality(alternatives.elements.map(e => abstractElementToRegex(e)).join('|'), {\n        cardinality: alternatives.cardinality,\n        lookahead: alternatives.lookahead\n    });\n}\nfunction terminalGroupToRegex(group) {\n    return withCardinality(group.elements.map(e => abstractElementToRegex(e)).join(''), {\n        cardinality: group.cardinality,\n        lookahead: group.lookahead\n    });\n}\nfunction untilTokenToRegex(until) {\n    return withCardinality(`${WILDCARD}*?${abstractElementToRegex(until.terminal)}`, {\n        cardinality: until.cardinality,\n        lookahead: until.lookahead\n    });\n}\nfunction negateTokenToRegex(negate) {\n    return withCardinality(`(?!${abstractElementToRegex(negate.terminal)})${WILDCARD}*?`, {\n        cardinality: negate.cardinality,\n        lookahead: negate.lookahead\n    });\n}\nfunction characterRangeToRegex(range) {\n    if (range.right) {\n        return withCardinality(`[${keywordToRegex(range.left)}-${keywordToRegex(range.right)}]`, {\n            cardinality: range.cardinality,\n            lookahead: range.lookahead,\n            wrap: false\n        });\n    }\n    return withCardinality(keywordToRegex(range.left), {\n        cardinality: range.cardinality,\n        lookahead: range.lookahead,\n        wrap: false\n    });\n}\nfunction keywordToRegex(keyword) {\n    return escapeRegExp(keyword.value);\n}\nfunction withCardinality(regex, options) {\n    var _a;\n    if (options.wrap !== false || options.lookahead) {\n        regex = `(${(_a = options.lookahead) !== null && _a !== void 0 ? _a : ''}${regex})`;\n    }\n    if (options.cardinality) {\n        return `${regex}${options.cardinality}`;\n    }\n    return regex;\n}\n//# sourceMappingURL=grammar-utils.js.map","// based on: https://github.com/petkaantonov/bluebird/blob/b97c0d2d487e8c5076e8bd897e0dcd4622d31846/src/util.js#L201-L216\nexport function toFastProperties(toBecomeFast) {\n    function FakeConstructor() { }\n    // If our object is used as a constructor, it would receive\n    FakeConstructor.prototype = toBecomeFast;\n    const fakeInstance = new FakeConstructor();\n    function fakeAccess() {\n        return typeof fakeInstance.bar;\n    }\n    // help V8 understand this is a \"real\" prototype by actually using\n    // the fake instance.\n    fakeAccess();\n    fakeAccess();\n    // Always true condition to suppress the Firefox warning of unreachable\n    // code after a return statement.\n    if (1)\n        return toBecomeFast;\n    // Eval prevents optimization of this method (even though this is dead code)\n    // - https://esbuild.github.io/content-types/#direct-eval\n    /* istanbul ignore next */\n    // tslint:disable-next-line\n    (0, eval)(toBecomeFast);\n}\n//# sourceMappingURL=to-fast-properties.js.map","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n","import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n","import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n","import { assign, forEach, isRegExp, isString, map, pickBy } from \"lodash-es\";\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\n// TODO: duplicated code to avoid extracting another sub-package -- how to avoid?\nfunction hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nexport class AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(_definition) {\n        this._definition = _definition;\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        forEach(this.definition, (prod) => {\n            prod.accept(visitor);\n        });\n    }\n}\nexport class NonTerminal extends AbstractProduction {\n    constructor(options) {\n        super([]);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    set definition(definition) {\n        // immutable\n    }\n    get definition() {\n        if (this.referencedRule !== undefined) {\n            return this.referencedRule.definition;\n        }\n        return [];\n    }\n    accept(visitor) {\n        visitor.visit(this);\n        // don't visit children of a reference, we will get cyclic infinite loops if we do so\n    }\n}\nexport class Rule extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.orgText = \"\";\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternative extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.ignoreAmbiguities = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Option extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatory extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionMandatoryWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Repetition extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class RepetitionWithSeparator extends AbstractProduction {\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Alternation extends AbstractProduction {\n    get definition() {\n        return this._definition;\n    }\n    set definition(value) {\n        this._definition = value;\n    }\n    constructor(options) {\n        super(options.definition);\n        this.idx = 1;\n        this.ignoreAmbiguities = false;\n        this.hasPredicates = false;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n}\nexport class Terminal {\n    constructor(options) {\n        this.idx = 1;\n        assign(this, pickBy(options, (v) => v !== undefined));\n    }\n    accept(visitor) {\n        visitor.visit(this);\n    }\n}\nexport function serializeGrammar(topRules) {\n    return map(topRules, serializeProduction);\n}\nexport function serializeProduction(node) {\n    function convertDefinition(definition) {\n        return map(definition, serializeProduction);\n    }\n    /* istanbul ignore else */\n    if (node instanceof NonTerminal) {\n        const serializedNonTerminal = {\n            type: \"NonTerminal\",\n            name: node.nonTerminalName,\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedNonTerminal.label = node.label;\n        }\n        return serializedNonTerminal;\n    }\n    else if (node instanceof Alternative) {\n        return {\n            type: \"Alternative\",\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Option) {\n        return {\n            type: \"Option\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatory) {\n        return {\n            type: \"RepetitionMandatory\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionMandatoryWithSeparator) {\n        return {\n            type: \"RepetitionMandatoryWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof RepetitionWithSeparator) {\n        return {\n            type: \"RepetitionWithSeparator\",\n            idx: node.idx,\n            separator: (serializeProduction(new Terminal({ terminalType: node.separator }))),\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Repetition) {\n        return {\n            type: \"Repetition\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Alternation) {\n        return {\n            type: \"Alternation\",\n            idx: node.idx,\n            definition: convertDefinition(node.definition),\n        };\n    }\n    else if (node instanceof Terminal) {\n        const serializedTerminal = {\n            type: \"Terminal\",\n            name: node.terminalType.name,\n            label: tokenLabel(node.terminalType),\n            idx: node.idx,\n        };\n        if (isString(node.label)) {\n            serializedTerminal.terminalLabel = node.label;\n        }\n        const pattern = node.terminalType.PATTERN;\n        if (node.terminalType.PATTERN) {\n            serializedTerminal.pattern = isRegExp(pattern)\n                ? pattern.source\n                : pattern;\n        }\n        return serializedTerminal;\n    }\n    else if (node instanceof Rule) {\n        return {\n            type: \"Rule\",\n            name: node.name,\n            orgText: node.orgText,\n            definition: convertDefinition(node.definition),\n        };\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=model.js.map","import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport class GAstVisitor {\n    visit(node) {\n        const nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* c8 ignore next 2 */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    }\n    /* c8 ignore next */\n    visitNonTerminal(node) { }\n    /* c8 ignore next */\n    visitAlternative(node) { }\n    /* c8 ignore next */\n    visitOption(node) { }\n    /* c8 ignore next */\n    visitRepetition(node) { }\n    /* c8 ignore next */\n    visitRepetitionMandatory(node) { }\n    /* c8 ignore next 3 */\n    visitRepetitionMandatoryWithSeparator(node) { }\n    /* c8 ignore next */\n    visitRepetitionWithSeparator(node) { }\n    /* c8 ignore next */\n    visitAlternation(node) { }\n    /* c8 ignore next */\n    visitTerminal(node) { }\n    /* c8 ignore next */\n    visitRule(node) { }\n}\n//# sourceMappingURL=visitor.js.map","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n","import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n","import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n","/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n","import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n","import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n","import { every, includes, some } from \"lodash-es\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"./model.js\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited = []) {\n    const isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && includes(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, (subProd) => {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n        /* c8 ignore next 3 */\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\n//# sourceMappingURL=helpers.js.map","import { drop, forEach } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\n/**\n *  A Grammar Walker that computes the \"remaining\" grammar \"after\" a productions in the grammar.\n */\nexport class RestWalker {\n    walk(prod, prevRest = []) {\n        forEach(prod.definition, (subProd, index) => {\n            const currRest = drop(prod.definition, index + 1);\n            /* istanbul ignore else */\n            if (subProd instanceof NonTerminal) {\n                this.walkProdRef(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Terminal) {\n                this.walkTerminal(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternative) {\n                this.walkFlat(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Option) {\n                this.walkOption(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatory) {\n                this.walkAtLeastOne(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionMandatoryWithSeparator) {\n                this.walkAtLeastOneSep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof RepetitionWithSeparator) {\n                this.walkManySep(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Repetition) {\n                this.walkMany(subProd, currRest, prevRest);\n            }\n            else if (subProd instanceof Alternation) {\n                this.walkOr(subProd, currRest, prevRest);\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    }\n    walkTerminal(terminal, currRest, prevRest) { }\n    walkProdRef(refProd, currRest, prevRest) { }\n    walkFlat(flatProd, currRest, prevRest) {\n        // ABCDEF => after the D the rest is EF\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(flatProd, fullOrRest);\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        // ABC(DE)?F => after the (DE)? the rest is F\n        const fullOrRest = currRest.concat(prevRest);\n        this.walk(optionProd, fullOrRest);\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        // ABC(DE)+F => after the (DE)+ the rest is (DE)?F\n        const fullAtLeastOneRest = [\n            new Option({ definition: atLeastOneProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(atLeastOneProd, fullAtLeastOneRest);\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        // ABC DE(,DE)* F => after the (,DE)+ the rest is (,DE)?F\n        const fullAtLeastOneSepRest = restForRepetitionWithSeparator(atLeastOneSepProd, currRest, prevRest);\n        this.walk(atLeastOneSepProd, fullAtLeastOneSepRest);\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        // ABC(DE)*F => after the (DE)* the rest is (DE)?F\n        const fullManyRest = [\n            new Option({ definition: manyProd.definition }),\n        ].concat(currRest, prevRest);\n        this.walk(manyProd, fullManyRest);\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        // ABC (DE(,DE)*)? F => after the (,DE)* the rest is (,DE)?F\n        const fullManySepRest = restForRepetitionWithSeparator(manySepProd, currRest, prevRest);\n        this.walk(manySepProd, fullManySepRest);\n    }\n    walkOr(orProd, currRest, prevRest) {\n        // ABC(D|E|F)G => when finding the (D|E|F) the rest is G\n        const fullOrRest = currRest.concat(prevRest);\n        // walk all different alternatives\n        forEach(orProd.definition, (alt) => {\n            // wrapping each alternative in a single definition wrapper\n            // to avoid errors in computing the rest of that alternative in the invocation to computeInProdFollows\n            // (otherwise for OR([alt1,alt2]) alt2 will be considered in 'rest' of alt1\n            const prodWrapper = new Alternative({ definition: [alt] });\n            this.walk(prodWrapper, fullOrRest);\n        });\n    }\n}\nfunction restForRepetitionWithSeparator(repSepProd, currRest, prevRest) {\n    const repSepRest = [\n        new Option({\n            definition: [\n                new Terminal({ terminalType: repSepProd.separator }),\n            ].concat(repSepProd.definition),\n        }),\n    ];\n    const fullRepSepRest = repSepRest.concat(currRest, prevRest);\n    return fullRepSepRest;\n}\n//# sourceMappingURL=rest.js.map","import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n","import { flatten, map, uniq } from \"lodash-es\";\nimport { isBranchingProd, isOptionalProd, isSequenceProd, NonTerminal, Terminal, } from \"@chevrotain/gast\";\nexport function first(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        // this could in theory cause infinite loops if\n        // (1) prod A refs prod B.\n        // (2) prod B refs prod A\n        // (3) AB can match the empty set\n        // in other words a cycle where everything is optional so the first will keep\n        // looking ahead for the next optional part and will never exit\n        // currently there is no safeguard for this unique edge case because\n        // (1) not sure a grammar in which this can happen is useful for anything (productive)\n        return first(prod.referencedRule);\n    }\n    else if (prod instanceof Terminal) {\n        return firstForTerminal(prod);\n    }\n    else if (isSequenceProd(prod)) {\n        return firstForSequence(prod);\n    }\n    else if (isBranchingProd(prod)) {\n        return firstForBranching(prod);\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function firstForSequence(prod) {\n    let firstSet = [];\n    const seq = prod.definition;\n    let nextSubProdIdx = 0;\n    let hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    let currSubProd;\n    // so we enter the loop at least once (if the definition is not empty\n    let isLastInnerProdOptional = true;\n    // scan a sequence until it's end or until we have found a NONE optional production in it\n    while (hasInnerProdsRemaining && isLastInnerProdOptional) {\n        currSubProd = seq[nextSubProdIdx];\n        isLastInnerProdOptional = isOptionalProd(currSubProd);\n        firstSet = firstSet.concat(first(currSubProd));\n        nextSubProdIdx = nextSubProdIdx + 1;\n        hasInnerProdsRemaining = seq.length > nextSubProdIdx;\n    }\n    return uniq(firstSet);\n}\nexport function firstForBranching(prod) {\n    const allAlternativesFirsts = map(prod.definition, (innerProd) => {\n        return first(innerProd);\n    });\n    return uniq(flatten(allAlternativesFirsts));\n}\nexport function firstForTerminal(terminal) {\n    return [terminal.terminalType];\n}\n//# sourceMappingURL=first.js.map","// TODO: can this be removed? where is it used?\nexport const IN = \"_~IN~_\";\n//# sourceMappingURL=constants.js.map","import { RestWalker } from \"./rest.js\";\nimport { first } from \"./first.js\";\nimport { assign, forEach } from \"lodash-es\";\nimport { IN } from \"../constants.js\";\nimport { Alternative } from \"@chevrotain/gast\";\n// This ResyncFollowsWalker computes all of the follows required for RESYNC\n// (skipping reference production).\nexport class ResyncFollowsWalker extends RestWalker {\n    constructor(topProd) {\n        super();\n        this.topProd = topProd;\n        this.follows = {};\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.follows;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        // do nothing! just like in the public sector after 13:00\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        const followName = buildBetweenProdsFollowPrefix(refProd.referencedRule, refProd.idx) +\n            this.topProd.name;\n        const fullRest = currRest.concat(prevRest);\n        const restProd = new Alternative({ definition: fullRest });\n        const t_in_topProd_follows = first(restProd);\n        this.follows[followName] = t_in_topProd_follows;\n    }\n}\nexport function computeAllProdsFollows(topProductions) {\n    const reSyncFollows = {};\n    forEach(topProductions, (topProd) => {\n        const currRefsFollow = new ResyncFollowsWalker(topProd).startWalking();\n        assign(reSyncFollows, currRefsFollow);\n    });\n    return reSyncFollows;\n}\nexport function buildBetweenProdsFollowPrefix(inner, occurenceInParent) {\n    return inner.name + occurenceInParent + IN;\n}\nexport function buildInProdFollowPrefix(terminal) {\n    const terminalName = terminal.terminalType.name;\n    return terminalName + terminal.idx + IN;\n}\n//# sourceMappingURL=follow.js.map","/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n","import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n","import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n","import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n","/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n","/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n","export function PRINT_ERROR(msg) {\n    /* istanbul ignore else - can't override global.console in node.js */\n    if (console && console.error) {\n        console.error(`Error: ${msg}`);\n    }\n}\nexport function PRINT_WARNING(msg) {\n    /* istanbul ignore else - can't override global.console in node.js*/\n    if (console && console.warn) {\n        // TODO: modify docs accordingly\n        console.warn(`Warning: ${msg}`);\n    }\n}\n//# sourceMappingURL=print.js.map","import { RegExpParser, } from \"@chevrotain/regexp-to-ast\";\nlet regExpAstCache = {};\nconst regExpParser = new RegExpParser();\nexport function getRegExpAst(regExp) {\n    const regExpStr = regExp.toString();\n    if (regExpAstCache.hasOwnProperty(regExpStr)) {\n        return regExpAstCache[regExpStr];\n    }\n    else {\n        const regExpAst = regExpParser.pattern(regExpStr);\n        regExpAstCache[regExpStr] = regExpAst;\n        return regExpAst;\n    }\n}\nexport function clearRegExpParserCache() {\n    regExpAstCache = {};\n}\n//# sourceMappingURL=reg_exp_parser.js.map","import { BaseRegExpVisitor, } from \"@chevrotain/regexp-to-ast\";\nimport { every, find, forEach, includes, isArray, values } from \"lodash-es\";\nimport { PRINT_ERROR, PRINT_WARNING } from \"@chevrotain/utils\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nimport { charCodeToOptimizedIndex, minOptimizationVal } from \"./lexer.js\";\nconst complementErrorMessage = \"Complement Sets are not supported for first char optimization\";\nexport const failedOptimizationPrefixMsg = 'Unable to use \"first char\" lexer optimizations:\\n';\nexport function getOptimizedStartCodesIndices(regExp, ensureOptimizations = false) {\n    try {\n        const ast = getRegExpAst(regExp);\n        const firstChars = firstCharOptimizedIndices(ast.value, {}, ast.flags.ignoreCase);\n        return firstChars;\n    }\n    catch (e) {\n        /* istanbul ignore next */\n        // Testing this relies on the regexp-to-ast library having a bug... */\n        // TODO: only the else branch needs to be ignored, try to fix with newer prettier / tsc\n        if (e.message === complementErrorMessage) {\n            if (ensureOptimizations) {\n                PRINT_WARNING(`${failedOptimizationPrefixMsg}` +\n                    `\\tUnable to optimize: < ${regExp.toString()} >\\n` +\n                    \"\\tComplement Sets cannot be automatically optimized.\\n\" +\n                    \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#COMPLEMENT for details.\");\n            }\n        }\n        else {\n            let msgSuffix = \"\";\n            if (ensureOptimizations) {\n                msgSuffix =\n                    \"\\n\\tThis will disable the lexer's first char optimizations.\\n\" +\n                        \"\\tSee: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#REGEXP_PARSING for details.\";\n            }\n            PRINT_ERROR(`${failedOptimizationPrefixMsg}\\n` +\n                `\\tFailed parsing: < ${regExp.toString()} >\\n` +\n                `\\tUsing the @chevrotain/regexp-to-ast library\\n` +\n                \"\\tPlease open an issue at: https://github.com/chevrotain/chevrotain/issues\" +\n                msgSuffix);\n        }\n    }\n    return [];\n}\nexport function firstCharOptimizedIndices(ast, result, ignoreCase) {\n    switch (ast.type) {\n        case \"Disjunction\":\n            for (let i = 0; i < ast.value.length; i++) {\n                firstCharOptimizedIndices(ast.value[i], result, ignoreCase);\n            }\n            break;\n        case \"Alternative\":\n            const terms = ast.value;\n            for (let i = 0; i < terms.length; i++) {\n                const term = terms[i];\n                // skip terms that cannot effect the first char results\n                switch (term.type) {\n                    case \"EndAnchor\":\n                    // A group back reference cannot affect potential starting char.\n                    // because if a back reference is the first production than automatically\n                    // the group being referenced has had to come BEFORE so its codes have already been added\n                    case \"GroupBackReference\":\n                    // assertions do not affect potential starting codes\n                    case \"Lookahead\":\n                    case \"NegativeLookahead\":\n                    case \"StartAnchor\":\n                    case \"WordBoundary\":\n                    case \"NonWordBoundary\":\n                        continue;\n                }\n                const atom = term;\n                switch (atom.type) {\n                    case \"Character\":\n                        addOptimizedIdxToResult(atom.value, result, ignoreCase);\n                        break;\n                    case \"Set\":\n                        if (atom.complement === true) {\n                            throw Error(complementErrorMessage);\n                        }\n                        forEach(atom.value, (code) => {\n                            if (typeof code === \"number\") {\n                                addOptimizedIdxToResult(code, result, ignoreCase);\n                            }\n                            else {\n                                // range\n                                const range = code;\n                                // cannot optimize when ignoreCase is\n                                if (ignoreCase === true) {\n                                    for (let rangeCode = range.from; rangeCode <= range.to; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                }\n                                // Optimization (2 orders of magnitude less work for very large ranges)\n                                else {\n                                    // handle unoptimized values\n                                    for (let rangeCode = range.from; rangeCode <= range.to && rangeCode < minOptimizationVal; rangeCode++) {\n                                        addOptimizedIdxToResult(rangeCode, result, ignoreCase);\n                                    }\n                                    // Less common charCode where we optimize for faster init time, by using larger \"buckets\"\n                                    if (range.to >= minOptimizationVal) {\n                                        const minUnOptVal = range.from >= minOptimizationVal\n                                            ? range.from\n                                            : minOptimizationVal;\n                                        const maxUnOptVal = range.to;\n                                        const minOptIdx = charCodeToOptimizedIndex(minUnOptVal);\n                                        const maxOptIdx = charCodeToOptimizedIndex(maxUnOptVal);\n                                        for (let currOptIdx = minOptIdx; currOptIdx <= maxOptIdx; currOptIdx++) {\n                                            result[currOptIdx] = currOptIdx;\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                        break;\n                    case \"Group\":\n                        firstCharOptimizedIndices(atom.value, result, ignoreCase);\n                        break;\n                    /* istanbul ignore next */\n                    default:\n                        throw Error(\"Non Exhaustive Match\");\n                }\n                // reached a mandatory production, no more **start** codes can be found on this alternative\n                const isOptionalQuantifier = atom.quantifier !== undefined && atom.quantifier.atLeast === 0;\n                if (\n                // A group may be optional due to empty contents /(?:)/\n                // or if everything inside it is optional /((a)?)/\n                (atom.type === \"Group\" && isWholeOptional(atom) === false) ||\n                    // If this term is not a group it may only be optional if it has an optional quantifier\n                    (atom.type !== \"Group\" && isOptionalQuantifier === false)) {\n                    break;\n                }\n            }\n            break;\n        /* istanbul ignore next */\n        default:\n            throw Error(\"non exhaustive match!\");\n    }\n    // console.log(Object.keys(result).length)\n    return values(result);\n}\nfunction addOptimizedIdxToResult(code, result, ignoreCase) {\n    const optimizedCharIdx = charCodeToOptimizedIndex(code);\n    result[optimizedCharIdx] = optimizedCharIdx;\n    if (ignoreCase === true) {\n        handleIgnoreCase(code, result);\n    }\n}\nfunction handleIgnoreCase(code, result) {\n    const char = String.fromCharCode(code);\n    const upperChar = char.toUpperCase();\n    /* istanbul ignore else */\n    if (upperChar !== char) {\n        const optimizedCharIdx = charCodeToOptimizedIndex(upperChar.charCodeAt(0));\n        result[optimizedCharIdx] = optimizedCharIdx;\n    }\n    else {\n        const lowerChar = char.toLowerCase();\n        if (lowerChar !== char) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(lowerChar.charCodeAt(0));\n            result[optimizedCharIdx] = optimizedCharIdx;\n        }\n    }\n}\nfunction findCode(setNode, targetCharCodes) {\n    return find(setNode.value, (codeOrRange) => {\n        if (typeof codeOrRange === \"number\") {\n            return includes(targetCharCodes, codeOrRange);\n        }\n        else {\n            // range\n            const range = codeOrRange;\n            return (find(targetCharCodes, (targetCode) => range.from <= targetCode && targetCode <= range.to) !== undefined);\n        }\n    });\n}\nfunction isWholeOptional(ast) {\n    const quantifier = ast.quantifier;\n    if (quantifier && quantifier.atLeast === 0) {\n        return true;\n    }\n    if (!ast.value) {\n        return false;\n    }\n    return isArray(ast.value)\n        ? every(ast.value, isWholeOptional)\n        : isWholeOptional(ast.value);\n}\nclass CharCodeFinder extends BaseRegExpVisitor {\n    constructor(targetCharCodes) {\n        super();\n        this.targetCharCodes = targetCharCodes;\n        this.found = false;\n    }\n    visitChildren(node) {\n        // No need to keep looking...\n        if (this.found === true) {\n            return;\n        }\n        // switch lookaheads as they do not actually consume any characters thus\n        // finding a charCode at lookahead context does not mean that regexp can actually contain it in a match.\n        switch (node.type) {\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                return;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                return;\n        }\n        super.visitChildren(node);\n    }\n    visitCharacter(node) {\n        if (includes(this.targetCharCodes, node.value)) {\n            this.found = true;\n        }\n    }\n    visitSet(node) {\n        if (node.complement) {\n            if (findCode(node, this.targetCharCodes) === undefined) {\n                this.found = true;\n            }\n        }\n        else {\n            if (findCode(node, this.targetCharCodes) !== undefined) {\n                this.found = true;\n            }\n        }\n    }\n}\nexport function canMatchCharCode(charCodes, pattern) {\n    if (pattern instanceof RegExp) {\n        const ast = getRegExpAst(pattern);\n        const charCodeFinder = new CharCodeFinder(charCodes);\n        charCodeFinder.visit(ast);\n        return charCodeFinder.found;\n    }\n    else {\n        return (find(pattern, (char) => {\n            return includes(charCodes, char.charCodeAt(0));\n        }) !== undefined);\n    }\n}\n//# sourceMappingURL=reg_exp.js.map","import { BaseRegExpVisitor } from \"@chevrotain/regexp-to-ast\";\nimport { Lexer, LexerDefinitionErrorType, } from \"./lexer_public.js\";\nimport { compact, defaults, difference, filter, find, first, flatten, forEach, has, includes, indexOf, isArray, isEmpty, isFunction, isRegExp, isString, isUndefined, keys, map, reduce, reject, values, } from \"lodash-es\";\nimport { PRINT_ERROR } from \"@chevrotain/utils\";\nimport { canMatchCharCode, failedOptimizationPrefixMsg, getOptimizedStartCodesIndices, } from \"./reg_exp.js\";\nimport { getRegExpAst } from \"./reg_exp_parser.js\";\nconst PATTERN = \"PATTERN\";\nexport const DEFAULT_MODE = \"defaultMode\";\nexport const MODES = \"modes\";\nexport let SUPPORT_STICKY = typeof new RegExp(\"(?:)\").sticky === \"boolean\";\nexport function disableSticky() {\n    SUPPORT_STICKY = false;\n}\nexport function enableSticky() {\n    SUPPORT_STICKY = true;\n}\nexport function analyzeTokenTypes(tokenTypes, options) {\n    options = defaults(options, {\n        useSticky: SUPPORT_STICKY,\n        debug: false,\n        safeMode: false,\n        positionTracking: \"full\",\n        lineTerminatorCharacters: [\"\\r\", \"\\n\"],\n        tracer: (msg, action) => action(),\n    });\n    const tracer = options.tracer;\n    tracer(\"initCharCodeToOptimizedIndexMap\", () => {\n        initCharCodeToOptimizedIndexMap();\n    });\n    let onlyRelevantTypes;\n    tracer(\"Reject Lexer.NA\", () => {\n        onlyRelevantTypes = reject(tokenTypes, (currType) => {\n            return currType[PATTERN] === Lexer.NA;\n        });\n    });\n    let hasCustom = false;\n    let allTransformedPatterns;\n    tracer(\"Transform Patterns\", () => {\n        hasCustom = false;\n        allTransformedPatterns = map(onlyRelevantTypes, (currType) => {\n            const currPattern = currType[PATTERN];\n            /* istanbul ignore else */\n            if (isRegExp(currPattern)) {\n                const regExpSource = currPattern.source;\n                if (regExpSource.length === 1 &&\n                    // only these regExp meta characters which can appear in a length one regExp\n                    regExpSource !== \"^\" &&\n                    regExpSource !== \"$\" &&\n                    regExpSource !== \".\" &&\n                    !currPattern.ignoreCase) {\n                    return regExpSource;\n                }\n                else if (regExpSource.length === 2 &&\n                    regExpSource[0] === \"\\\\\" &&\n                    // not a meta character\n                    !includes([\n                        \"d\",\n                        \"D\",\n                        \"s\",\n                        \"S\",\n                        \"t\",\n                        \"r\",\n                        \"n\",\n                        \"t\",\n                        \"0\",\n                        \"c\",\n                        \"b\",\n                        \"B\",\n                        \"f\",\n                        \"v\",\n                        \"w\",\n                        \"W\",\n                    ], regExpSource[1])) {\n                    // escaped meta Characters: /\\+/ /\\[/\n                    // or redundant escaping: /\\a/\n                    // without the escaping \"\\\"\n                    return regExpSource[1];\n                }\n                else {\n                    return options.useSticky\n                        ? addStickyFlag(currPattern)\n                        : addStartOfInput(currPattern);\n                }\n            }\n            else if (isFunction(currPattern)) {\n                hasCustom = true;\n                // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n                return { exec: currPattern };\n            }\n            else if (typeof currPattern === \"object\") {\n                hasCustom = true;\n                // ICustomPattern\n                return currPattern;\n            }\n            else if (typeof currPattern === \"string\") {\n                if (currPattern.length === 1) {\n                    return currPattern;\n                }\n                else {\n                    const escapedRegExpString = currPattern.replace(/[\\\\^$.*+?()[\\]{}|]/g, \"\\\\$&\");\n                    const wrappedRegExp = new RegExp(escapedRegExpString);\n                    return options.useSticky\n                        ? addStickyFlag(wrappedRegExp)\n                        : addStartOfInput(wrappedRegExp);\n                }\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n    });\n    let patternIdxToType;\n    let patternIdxToGroup;\n    let patternIdxToLongerAltIdxArr;\n    let patternIdxToPushMode;\n    let patternIdxToPopMode;\n    tracer(\"misc mapping\", () => {\n        patternIdxToType = map(onlyRelevantTypes, (currType) => currType.tokenTypeIdx);\n        patternIdxToGroup = map(onlyRelevantTypes, (clazz) => {\n            const groupName = clazz.GROUP;\n            /* istanbul ignore next */\n            if (groupName === Lexer.SKIPPED) {\n                return undefined;\n            }\n            else if (isString(groupName)) {\n                return groupName;\n            }\n            else if (isUndefined(groupName)) {\n                return false;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        });\n        patternIdxToLongerAltIdxArr = map(onlyRelevantTypes, (clazz) => {\n            const longerAltType = clazz.LONGER_ALT;\n            if (longerAltType) {\n                const longerAltIdxArr = isArray(longerAltType)\n                    ? map(longerAltType, (type) => indexOf(onlyRelevantTypes, type))\n                    : [indexOf(onlyRelevantTypes, longerAltType)];\n                return longerAltIdxArr;\n            }\n        });\n        patternIdxToPushMode = map(onlyRelevantTypes, (clazz) => clazz.PUSH_MODE);\n        patternIdxToPopMode = map(onlyRelevantTypes, (clazz) => has(clazz, \"POP_MODE\"));\n    });\n    let patternIdxToCanLineTerminator;\n    tracer(\"Line Terminator Handling\", () => {\n        const lineTerminatorCharCodes = getCharCodes(options.lineTerminatorCharacters);\n        patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => false);\n        if (options.positionTracking !== \"onlyOffset\") {\n            patternIdxToCanLineTerminator = map(onlyRelevantTypes, (tokType) => {\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    return !!tokType.LINE_BREAKS;\n                }\n                else {\n                    return (checkLineBreaksIssues(tokType, lineTerminatorCharCodes) === false &&\n                        canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN));\n                }\n            });\n        }\n    });\n    let patternIdxToIsCustom;\n    let patternIdxToShort;\n    let emptyGroups;\n    let patternIdxToConfig;\n    tracer(\"Misc Mapping #2\", () => {\n        patternIdxToIsCustom = map(onlyRelevantTypes, isCustomPattern);\n        patternIdxToShort = map(allTransformedPatterns, isShortPattern);\n        emptyGroups = reduce(onlyRelevantTypes, (acc, clazz) => {\n            const groupName = clazz.GROUP;\n            if (isString(groupName) && !(groupName === Lexer.SKIPPED)) {\n                acc[groupName] = [];\n            }\n            return acc;\n        }, {});\n        patternIdxToConfig = map(allTransformedPatterns, (x, idx) => {\n            return {\n                pattern: allTransformedPatterns[idx],\n                longerAlt: patternIdxToLongerAltIdxArr[idx],\n                canLineTerminator: patternIdxToCanLineTerminator[idx],\n                isCustom: patternIdxToIsCustom[idx],\n                short: patternIdxToShort[idx],\n                group: patternIdxToGroup[idx],\n                push: patternIdxToPushMode[idx],\n                pop: patternIdxToPopMode[idx],\n                tokenTypeIdx: patternIdxToType[idx],\n                tokenType: onlyRelevantTypes[idx],\n            };\n        });\n    });\n    let canBeOptimized = true;\n    let charCodeToPatternIdxToConfig = [];\n    if (!options.safeMode) {\n        tracer(\"First Char Optimization\", () => {\n            charCodeToPatternIdxToConfig = reduce(onlyRelevantTypes, (result, currTokType, idx) => {\n                if (typeof currTokType.PATTERN === \"string\") {\n                    const charCode = currTokType.PATTERN.charCodeAt(0);\n                    const optimizedIdx = charCodeToOptimizedIndex(charCode);\n                    addToMapOfArrays(result, optimizedIdx, patternIdxToConfig[idx]);\n                }\n                else if (isArray(currTokType.START_CHARS_HINT)) {\n                    let lastOptimizedIdx;\n                    forEach(currTokType.START_CHARS_HINT, (charOrInt) => {\n                        const charCode = typeof charOrInt === \"string\"\n                            ? charOrInt.charCodeAt(0)\n                            : charOrInt;\n                        const currOptimizedIdx = charCodeToOptimizedIndex(charCode);\n                        // Avoid adding the config multiple times\n                        /* istanbul ignore else */\n                        // - Difficult to check this scenario effects as it is only a performance\n                        //   optimization that does not change correctness\n                        if (lastOptimizedIdx !== currOptimizedIdx) {\n                            lastOptimizedIdx = currOptimizedIdx;\n                            addToMapOfArrays(result, currOptimizedIdx, patternIdxToConfig[idx]);\n                        }\n                    });\n                }\n                else if (isRegExp(currTokType.PATTERN)) {\n                    if (currTokType.PATTERN.unicode) {\n                        canBeOptimized = false;\n                        if (options.ensureOptimizations) {\n                            PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                                `\\tUnable to analyze < ${currTokType.PATTERN.toString()} > pattern.\\n` +\n                                \"\\tThe regexp unicode flag is not currently supported by the regexp-to-ast library.\\n\" +\n                                \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                                \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNICODE_OPTIMIZE\");\n                        }\n                    }\n                    else {\n                        const optimizedCodes = getOptimizedStartCodesIndices(currTokType.PATTERN, options.ensureOptimizations);\n                        /* istanbul ignore if */\n                        // start code will only be empty given an empty regExp or failure of regexp-to-ast library\n                        // the first should be a different validation and the second cannot be tested.\n                        if (isEmpty(optimizedCodes)) {\n                            // we cannot understand what codes may start possible matches\n                            // The optimization correctness requires knowing start codes for ALL patterns.\n                            // Not actually sure this is an error, no debug message\n                            canBeOptimized = false;\n                        }\n                        forEach(optimizedCodes, (code) => {\n                            addToMapOfArrays(result, code, patternIdxToConfig[idx]);\n                        });\n                    }\n                }\n                else {\n                    if (options.ensureOptimizations) {\n                        PRINT_ERROR(`${failedOptimizationPrefixMsg}` +\n                            `\\tTokenType: <${currTokType.name}> is using a custom token pattern without providing <start_chars_hint> parameter.\\n` +\n                            \"\\tThis will disable the lexer's first char optimizations.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_OPTIMIZE\");\n                    }\n                    canBeOptimized = false;\n                }\n                return result;\n            }, []);\n        });\n    }\n    return {\n        emptyGroups: emptyGroups,\n        patternIdxToConfig: patternIdxToConfig,\n        charCodeToPatternIdxToConfig: charCodeToPatternIdxToConfig,\n        hasCustom: hasCustom,\n        canBeOptimized: canBeOptimized,\n    };\n}\nexport function validatePatterns(tokenTypes, validModesNames) {\n    let errors = [];\n    const missingResult = findMissingPatterns(tokenTypes);\n    errors = errors.concat(missingResult.errors);\n    const invalidResult = findInvalidPatterns(missingResult.valid);\n    const validTokenTypes = invalidResult.valid;\n    errors = errors.concat(invalidResult.errors);\n    errors = errors.concat(validateRegExpPattern(validTokenTypes));\n    errors = errors.concat(findInvalidGroupType(validTokenTypes));\n    errors = errors.concat(findModesThatDoNotExist(validTokenTypes, validModesNames));\n    errors = errors.concat(findUnreachablePatterns(validTokenTypes));\n    return errors;\n}\nfunction validateRegExpPattern(tokenTypes) {\n    let errors = [];\n    const withRegExpPatterns = filter(tokenTypes, (currTokType) => isRegExp(currTokType[PATTERN]));\n    errors = errors.concat(findEndOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findStartOfInputAnchor(withRegExpPatterns));\n    errors = errors.concat(findUnsupportedFlags(withRegExpPatterns));\n    errors = errors.concat(findDuplicatePatterns(withRegExpPatterns));\n    errors = errors.concat(findEmptyMatchRegExps(withRegExpPatterns));\n    return errors;\n}\nexport function findMissingPatterns(tokenTypes) {\n    const tokenTypesWithMissingPattern = filter(tokenTypes, (currType) => {\n        return !has(currType, PATTERN);\n    });\n    const errors = map(tokenTypesWithMissingPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- missing static 'PATTERN' property\",\n            type: LexerDefinitionErrorType.MISSING_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithMissingPattern);\n    return { errors, valid };\n}\nexport function findInvalidPatterns(tokenTypes) {\n    const tokenTypesWithInvalidPattern = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return (!isRegExp(pattern) &&\n            !isFunction(pattern) &&\n            !has(pattern, \"exec\") &&\n            !isString(pattern));\n    });\n    const errors = map(tokenTypesWithInvalidPattern, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' can only be a RegExp, a\" +\n                \" Function matching the {CustomPatternMatcherFunc} type or an Object matching the {ICustomPattern} interface.\",\n            type: LexerDefinitionErrorType.INVALID_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    const valid = difference(tokenTypes, tokenTypesWithInvalidPattern);\n    return { errors, valid };\n}\nconst end_of_input = /[^\\\\][$]/;\nexport function findEndOfInputAnchor(tokenTypes) {\n    class EndAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitEndAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const endAnchorVisitor = new EndAnchorFinder();\n            endAnchorVisitor.visit(regexpAst);\n            return endAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return end_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain end of input anchor '$'\\n\" +\n                \"\\tSee chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.EOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findEmptyMatchRegExps(tokenTypes) {\n    const matchesEmptyString = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        return pattern.test(\"\");\n    });\n    const errors = map(matchesEmptyString, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' must not match an empty string\",\n            type: LexerDefinitionErrorType.EMPTY_MATCH_PATTERN,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nconst start_of_input = /[^\\\\[][\\^]|^\\^/;\nexport function findStartOfInputAnchor(tokenTypes) {\n    class StartAnchorFinder extends BaseRegExpVisitor {\n        constructor() {\n            super(...arguments);\n            this.found = false;\n        }\n        visitStartAnchor(node) {\n            this.found = true;\n        }\n    }\n    const invalidRegex = filter(tokenTypes, (currType) => {\n        const pattern = currType.PATTERN;\n        try {\n            const regexpAst = getRegExpAst(pattern);\n            const startAnchorVisitor = new StartAnchorFinder();\n            startAnchorVisitor.visit(regexpAst);\n            return startAnchorVisitor.found;\n        }\n        catch (e) {\n            // old behavior in case of runtime exceptions with regexp-to-ast.\n            /* istanbul ignore next - cannot ensure an error in regexp-to-ast*/\n            return start_of_input.test(pattern.source);\n        }\n    });\n    const errors = map(invalidRegex, (currType) => {\n        return {\n            message: \"Unexpected RegExp Anchor Error:\\n\" +\n                \"\\tToken Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' cannot contain start of input anchor '^'\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#ANCHORS\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.SOI_ANCHOR_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findUnsupportedFlags(tokenTypes) {\n    const invalidFlags = filter(tokenTypes, (currType) => {\n        const pattern = currType[PATTERN];\n        return pattern instanceof RegExp && (pattern.multiline || pattern.global);\n    });\n    const errors = map(invalidFlags, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'PATTERN' may NOT contain global('g') or multiline('m')\",\n            type: LexerDefinitionErrorType.UNSUPPORTED_FLAGS_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\n// This can only test for identical duplicate RegExps, not semantically equivalent ones.\nexport function findDuplicatePatterns(tokenTypes) {\n    const found = [];\n    let identicalPatterns = map(tokenTypes, (outerType) => {\n        return reduce(tokenTypes, (result, innerType) => {\n            if (outerType.PATTERN.source === innerType.PATTERN.source &&\n                !includes(found, innerType) &&\n                innerType.PATTERN !== Lexer.NA) {\n                // this avoids duplicates in the result, each Token Type may only appear in one \"set\"\n                // in essence we are creating Equivalence classes on equality relation.\n                found.push(innerType);\n                result.push(innerType);\n                return result;\n            }\n            return result;\n        }, []);\n    });\n    identicalPatterns = compact(identicalPatterns);\n    const duplicatePatterns = filter(identicalPatterns, (currIdenticalSet) => {\n        return currIdenticalSet.length > 1;\n    });\n    const errors = map(duplicatePatterns, (setOfIdentical) => {\n        const tokenTypeNames = map(setOfIdentical, (currType) => {\n            return currType.name;\n        });\n        const dupPatternSrc = first(setOfIdentical).PATTERN;\n        return {\n            message: `The same RegExp pattern ->${dupPatternSrc}<-` +\n                `has been used in all of the following Token Types: ${tokenTypeNames.join(\", \")} <-`,\n            type: LexerDefinitionErrorType.DUPLICATE_PATTERNS_FOUND,\n            tokenTypes: setOfIdentical,\n        };\n    });\n    return errors;\n}\nexport function findInvalidGroupType(tokenTypes) {\n    const invalidTypes = filter(tokenTypes, (clazz) => {\n        if (!has(clazz, \"GROUP\")) {\n            return false;\n        }\n        const group = clazz.GROUP;\n        return group !== Lexer.SKIPPED && group !== Lexer.NA && !isString(group);\n    });\n    const errors = map(invalidTypes, (currType) => {\n        return {\n            message: \"Token Type: ->\" +\n                currType.name +\n                \"<- static 'GROUP' can only be Lexer.SKIPPED/Lexer.NA/A String\",\n            type: LexerDefinitionErrorType.INVALID_GROUP_TYPE_FOUND,\n            tokenTypes: [currType],\n        };\n    });\n    return errors;\n}\nexport function findModesThatDoNotExist(tokenTypes, validModes) {\n    const invalidModes = filter(tokenTypes, (clazz) => {\n        return (clazz.PUSH_MODE !== undefined && !includes(validModes, clazz.PUSH_MODE));\n    });\n    const errors = map(invalidModes, (tokType) => {\n        const msg = `Token Type: ->${tokType.name}<- static 'PUSH_MODE' value cannot refer to a Lexer Mode ->${tokType.PUSH_MODE}<-` +\n            `which does not exist`;\n        return {\n            message: msg,\n            type: LexerDefinitionErrorType.PUSH_MODE_DOES_NOT_EXIST,\n            tokenTypes: [tokType],\n        };\n    });\n    return errors;\n}\nexport function findUnreachablePatterns(tokenTypes) {\n    const errors = [];\n    const canBeTested = reduce(tokenTypes, (result, tokType, idx) => {\n        const pattern = tokType.PATTERN;\n        if (pattern === Lexer.NA) {\n            return result;\n        }\n        // a more comprehensive validation for all forms of regExps would require\n        // deeper regExp analysis capabilities\n        if (isString(pattern)) {\n            result.push({ str: pattern, idx, tokenType: tokType });\n        }\n        else if (isRegExp(pattern) && noMetaChar(pattern)) {\n            result.push({ str: pattern.source, idx, tokenType: tokType });\n        }\n        return result;\n    }, []);\n    forEach(tokenTypes, (tokType, testIdx) => {\n        forEach(canBeTested, ({ str, idx, tokenType }) => {\n            if (testIdx < idx && testTokenType(str, tokType.PATTERN)) {\n                const msg = `Token: ->${tokenType.name}<- can never be matched.\\n` +\n                    `Because it appears AFTER the Token Type ->${tokType.name}<-` +\n                    `in the lexer's definition.\\n` +\n                    `See https://chevrotain.io/docs/guide/resolving_lexer_errors.html#UNREACHABLE`;\n                errors.push({\n                    message: msg,\n                    type: LexerDefinitionErrorType.UNREACHABLE_PATTERN,\n                    tokenTypes: [tokType, tokenType],\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction testTokenType(str, pattern) {\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        const regExpArray = pattern.exec(str);\n        return regExpArray !== null && regExpArray.index === 0;\n    }\n    else if (isFunction(pattern)) {\n        // maintain the API of custom patterns\n        return pattern(str, 0, [], {});\n    }\n    else if (has(pattern, \"exec\")) {\n        // maintain the API of custom patterns\n        return pattern.exec(str, 0, [], {});\n    }\n    else if (typeof pattern === \"string\") {\n        return pattern === str;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction noMetaChar(regExp) {\n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\n    const metaChars = [\n        \".\",\n        \"\\\\\",\n        \"[\",\n        \"]\",\n        \"|\",\n        \"^\",\n        \"$\",\n        \"(\",\n        \")\",\n        \"?\",\n        \"*\",\n        \"+\",\n        \"{\",\n    ];\n    return (find(metaChars, (char) => regExp.source.indexOf(char) !== -1) === undefined);\n}\nexport function addStartOfInput(pattern) {\n    const flags = pattern.ignoreCase ? \"i\" : \"\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`^(?:${pattern.source})`, flags);\n}\nexport function addStickyFlag(pattern) {\n    const flags = pattern.ignoreCase ? \"iy\" : \"y\";\n    // always wrapping in a none capturing group preceded by '^' to make sure matching can only work on start of input.\n    // duplicate/redundant start of input markers have no meaning (/^^^^A/ === /^A/)\n    return new RegExp(`${pattern.source}`, flags);\n}\nexport function performRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const errors = [];\n    // some run time checks to help the end users.\n    if (!has(lexerDefinition, DEFAULT_MODE)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                DEFAULT_MODE +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE,\n        });\n    }\n    if (!has(lexerDefinition, MODES)) {\n        errors.push({\n            message: \"A MultiMode Lexer cannot be initialized without a <\" +\n                MODES +\n                \"> property in its definition\\n\",\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY,\n        });\n    }\n    if (has(lexerDefinition, MODES) &&\n        has(lexerDefinition, DEFAULT_MODE) &&\n        !has(lexerDefinition.modes, lexerDefinition.defaultMode)) {\n        errors.push({\n            message: `A MultiMode Lexer cannot be initialized with a ${DEFAULT_MODE}: <${lexerDefinition.defaultMode}>` +\n                `which does not exist\\n`,\n            type: LexerDefinitionErrorType.MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST,\n        });\n    }\n    if (has(lexerDefinition, MODES)) {\n        forEach(lexerDefinition.modes, (currModeValue, currModeName) => {\n            forEach(currModeValue, (currTokType, currIdx) => {\n                if (isUndefined(currTokType)) {\n                    errors.push({\n                        message: `A Lexer cannot be initialized using an undefined Token Type. Mode:` +\n                            `<${currModeName}> at index: <${currIdx}>\\n`,\n                        type: LexerDefinitionErrorType.LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED,\n                    });\n                }\n                else if (has(currTokType, \"LONGER_ALT\")) {\n                    const longerAlt = isArray(currTokType.LONGER_ALT)\n                        ? currTokType.LONGER_ALT\n                        : [currTokType.LONGER_ALT];\n                    forEach(longerAlt, (currLongerAlt) => {\n                        if (!isUndefined(currLongerAlt) &&\n                            !includes(currModeValue, currLongerAlt)) {\n                            errors.push({\n                                message: `A MultiMode Lexer cannot be initialized with a longer_alt <${currLongerAlt.name}> on token <${currTokType.name}> outside of mode <${currModeName}>\\n`,\n                                type: LexerDefinitionErrorType.MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE,\n                            });\n                        }\n                    });\n                }\n            });\n        });\n    }\n    return errors;\n}\nexport function performWarningRuntimeChecks(lexerDefinition, trackLines, lineTerminatorCharacters) {\n    const warnings = [];\n    let hasAnyLineBreak = false;\n    const allTokenTypes = compact(flatten(values(lexerDefinition.modes)));\n    const concreteTokenTypes = reject(allTokenTypes, (currType) => currType[PATTERN] === Lexer.NA);\n    const terminatorCharCodes = getCharCodes(lineTerminatorCharacters);\n    if (trackLines) {\n        forEach(concreteTokenTypes, (tokType) => {\n            const currIssue = checkLineBreaksIssues(tokType, terminatorCharCodes);\n            if (currIssue !== false) {\n                const message = buildLineBreakIssueMessage(tokType, currIssue);\n                const warningDescriptor = {\n                    message,\n                    type: currIssue.issue,\n                    tokenType: tokType,\n                };\n                warnings.push(warningDescriptor);\n            }\n            else {\n                // we don't want to attempt to scan if the user explicitly specified the line_breaks option.\n                if (has(tokType, \"LINE_BREAKS\")) {\n                    if (tokType.LINE_BREAKS === true) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n                else {\n                    if (canMatchCharCode(terminatorCharCodes, tokType.PATTERN)) {\n                        hasAnyLineBreak = true;\n                    }\n                }\n            }\n        });\n    }\n    if (trackLines && !hasAnyLineBreak) {\n        warnings.push({\n            message: \"Warning: No LINE_BREAKS Found.\\n\" +\n                \"\\tThis Lexer has been defined to track line and column information,\\n\" +\n                \"\\tBut none of the Token Types can be identified as matching a line terminator.\\n\" +\n                \"\\tSee https://chevrotain.io/docs/guide/resolving_lexer_errors.html#LINE_BREAKS \\n\" +\n                \"\\tfor details.\",\n            type: LexerDefinitionErrorType.NO_LINE_BREAKS_FLAGS,\n        });\n    }\n    return warnings;\n}\nexport function cloneEmptyGroups(emptyGroups) {\n    const clonedResult = {};\n    const groupKeys = keys(emptyGroups);\n    forEach(groupKeys, (currKey) => {\n        const currGroupValue = emptyGroups[currKey];\n        /* istanbul ignore else */\n        if (isArray(currGroupValue)) {\n            clonedResult[currKey] = [];\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    });\n    return clonedResult;\n}\n// TODO: refactor to avoid duplication\nexport function isCustomPattern(tokenType) {\n    const pattern = tokenType.PATTERN;\n    /* istanbul ignore else */\n    if (isRegExp(pattern)) {\n        return false;\n    }\n    else if (isFunction(pattern)) {\n        // CustomPatternMatcherFunc - custom patterns do not require any transformations, only wrapping in a RegExp Like object\n        return true;\n    }\n    else if (has(pattern, \"exec\")) {\n        // ICustomPattern\n        return true;\n    }\n    else if (isString(pattern)) {\n        return false;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function isShortPattern(pattern) {\n    if (isString(pattern) && pattern.length === 1) {\n        return pattern.charCodeAt(0);\n    }\n    else {\n        return false;\n    }\n}\n/**\n * Faster than using a RegExp for default newline detection during lexing.\n */\nexport const LineTerminatorOptimizedTester = {\n    // implements /\\n|\\r\\n?/g.test\n    test: function (text) {\n        const len = text.length;\n        for (let i = this.lastIndex; i < len; i++) {\n            const c = text.charCodeAt(i);\n            if (c === 10) {\n                this.lastIndex = i + 1;\n                return true;\n            }\n            else if (c === 13) {\n                if (text.charCodeAt(i + 1) === 10) {\n                    this.lastIndex = i + 2;\n                }\n                else {\n                    this.lastIndex = i + 1;\n                }\n                return true;\n            }\n        }\n        return false;\n    },\n    lastIndex: 0,\n};\nfunction checkLineBreaksIssues(tokType, lineTerminatorCharCodes) {\n    if (has(tokType, \"LINE_BREAKS\")) {\n        // if the user explicitly declared the line_breaks option we will respect their choice\n        // and assume it is correct.\n        return false;\n    }\n    else {\n        /* istanbul ignore else */\n        if (isRegExp(tokType.PATTERN)) {\n            try {\n                // TODO: why is the casting suddenly needed?\n                canMatchCharCode(lineTerminatorCharCodes, tokType.PATTERN);\n            }\n            catch (e) {\n                /* istanbul ignore next - to test this we would have to mock <canMatchCharCode> to throw an error */\n                return {\n                    issue: LexerDefinitionErrorType.IDENTIFY_TERMINATOR,\n                    errMsg: e.message,\n                };\n            }\n            return false;\n        }\n        else if (isString(tokType.PATTERN)) {\n            // string literal patterns can always be analyzed to detect line terminator usage\n            return false;\n        }\n        else if (isCustomPattern(tokType)) {\n            // custom token types\n            return { issue: LexerDefinitionErrorType.CUSTOM_LINE_BREAK };\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n}\nexport function buildLineBreakIssueMessage(tokType, details) {\n    /* istanbul ignore else */\n    if (details.issue === LexerDefinitionErrorType.IDENTIFY_TERMINATOR) {\n        return (\"Warning: unable to identify line terminator usage in pattern.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            `\\t Root cause: ${details.errMsg}.\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#IDENTIFY_TERMINATOR\");\n    }\n    else if (details.issue === LexerDefinitionErrorType.CUSTOM_LINE_BREAK) {\n        return (\"Warning: A Custom Token Pattern should specify the <line_breaks> option.\\n\" +\n            `\\tThe problem is in the <${tokType.name}> Token Type\\n` +\n            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#CUSTOM_LINE_BREAK\");\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction getCharCodes(charsOrCodes) {\n    const charCodes = map(charsOrCodes, (numOrString) => {\n        if (isString(numOrString)) {\n            return numOrString.charCodeAt(0);\n        }\n        else {\n            return numOrString;\n        }\n    });\n    return charCodes;\n}\nfunction addToMapOfArrays(map, key, value) {\n    if (map[key] === undefined) {\n        map[key] = [value];\n    }\n    else {\n        map[key].push(value);\n    }\n}\nexport const minOptimizationVal = 256;\n/**\n * We are mapping charCode above ASCI (256) into buckets each in the size of 256.\n * This is because ASCI are the most common start chars so each one of those will get its own\n * possible token configs vector.\n *\n * Tokens starting with charCodes \"above\" ASCI are uncommon, so we can \"afford\"\n * to place these into buckets of possible token configs, What we gain from\n * this is avoiding the case of creating an optimization 'charCodeToPatternIdxToConfig'\n * which would contain 10,000+ arrays of small size (e.g unicode Identifiers scenario).\n * Our 'charCodeToPatternIdxToConfig' max size will now be:\n * 256 + (2^16 / 2^8) - 1 === 511\n *\n * note the hack for fast division integer part extraction\n * See: https://stackoverflow.com/a/4228528\n */\nlet charCodeToOptimizedIdxMap = [];\nexport function charCodeToOptimizedIndex(charCode) {\n    return charCode < minOptimizationVal\n        ? charCode\n        : charCodeToOptimizedIdxMap[charCode];\n}\n/**\n * This is a compromise between cold start / hot running performance\n * Creating this array takes ~3ms on a modern machine,\n * But if we perform the computation at runtime as needed the CSS Lexer benchmark\n * performance degrades by ~10%\n *\n * TODO: Perhaps it should be lazy initialized only if a charCode > 255 is used.\n */\nfunction initCharCodeToOptimizedIndexMap() {\n    if (isEmpty(charCodeToOptimizedIdxMap)) {\n        charCodeToOptimizedIdxMap = new Array(65536);\n        for (let i = 0; i < 65536; i++) {\n            charCodeToOptimizedIdxMap[i] = i > 255 ? 255 + ~~(i / 255) : i;\n        }\n    }\n}\n//# sourceMappingURL=lexer.js.map","export function timer(func) {\n    const start = new Date().getTime();\n    const val = func();\n    const end = new Date().getTime();\n    const total = end - start;\n    return { time: total, value: val };\n}\n//# sourceMappingURL=timer.js.map","import { clone, compact, difference, flatten, forEach, has, includes, isArray, isEmpty, map, } from \"lodash-es\";\nexport function tokenStructuredMatcher(tokInstance, tokConstructor) {\n    const instanceType = tokInstance.tokenTypeIdx;\n    if (instanceType === tokConstructor.tokenTypeIdx) {\n        return true;\n    }\n    else {\n        return (tokConstructor.isParent === true &&\n            tokConstructor.categoryMatchesMap[instanceType] === true);\n    }\n}\n// Optimized tokenMatcher in case our grammar does not use token categories\n// Being so tiny it is much more likely to be in-lined and this avoid the function call overhead\nexport function tokenStructuredMatcherNoCategories(token, tokType) {\n    return token.tokenTypeIdx === tokType.tokenTypeIdx;\n}\nexport let tokenShortNameIdx = 1;\nexport const tokenIdxToClass = {};\nexport function augmentTokenTypes(tokenTypes) {\n    // collect the parent Token Types as well.\n    const tokenTypesAndParents = expandCategories(tokenTypes);\n    // add required tokenType and categoryMatches properties\n    assignTokenDefaultProps(tokenTypesAndParents);\n    // fill up the categoryMatches\n    assignCategoriesMapProp(tokenTypesAndParents);\n    assignCategoriesTokensProp(tokenTypesAndParents);\n    forEach(tokenTypesAndParents, (tokType) => {\n        tokType.isParent = tokType.categoryMatches.length > 0;\n    });\n}\nexport function expandCategories(tokenTypes) {\n    let result = clone(tokenTypes);\n    let categories = tokenTypes;\n    let searching = true;\n    while (searching) {\n        categories = compact(flatten(map(categories, (currTokType) => currTokType.CATEGORIES)));\n        const newCategories = difference(categories, result);\n        result = result.concat(newCategories);\n        if (isEmpty(newCategories)) {\n            searching = false;\n        }\n        else {\n            categories = newCategories;\n        }\n    }\n    return result;\n}\nexport function assignTokenDefaultProps(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        if (!hasShortKeyProperty(currTokType)) {\n            tokenIdxToClass[tokenShortNameIdx] = currTokType;\n            currTokType.tokenTypeIdx = tokenShortNameIdx++;\n        }\n        // CATEGORIES? : TokenType | TokenType[]\n        if (hasCategoriesProperty(currTokType) &&\n            !isArray(currTokType.CATEGORIES)\n        // &&\n        // !isUndefined(currTokType.CATEGORIES.PATTERN)\n        ) {\n            currTokType.CATEGORIES = [currTokType.CATEGORIES];\n        }\n        if (!hasCategoriesProperty(currTokType)) {\n            currTokType.CATEGORIES = [];\n        }\n        if (!hasExtendingTokensTypesProperty(currTokType)) {\n            currTokType.categoryMatches = [];\n        }\n        if (!hasExtendingTokensTypesMapProperty(currTokType)) {\n            currTokType.categoryMatchesMap = {};\n        }\n    });\n}\nexport function assignCategoriesTokensProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        // avoid duplications\n        currTokType.categoryMatches = [];\n        forEach(currTokType.categoryMatchesMap, (val, key) => {\n            currTokType.categoryMatches.push(tokenIdxToClass[key].tokenTypeIdx);\n        });\n    });\n}\nexport function assignCategoriesMapProp(tokenTypes) {\n    forEach(tokenTypes, (currTokType) => {\n        singleAssignCategoriesToksMap([], currTokType);\n    });\n}\nexport function singleAssignCategoriesToksMap(path, nextNode) {\n    forEach(path, (pathNode) => {\n        nextNode.categoryMatchesMap[pathNode.tokenTypeIdx] = true;\n    });\n    forEach(nextNode.CATEGORIES, (nextCategory) => {\n        const newPath = path.concat(nextNode);\n        // avoids infinite loops due to cyclic categories.\n        if (!includes(newPath, nextCategory)) {\n            singleAssignCategoriesToksMap(newPath, nextCategory);\n        }\n    });\n}\nexport function hasShortKeyProperty(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\nexport function hasCategoriesProperty(tokType) {\n    return has(tokType, \"CATEGORIES\");\n}\nexport function hasExtendingTokensTypesProperty(tokType) {\n    return has(tokType, \"categoryMatches\");\n}\nexport function hasExtendingTokensTypesMapProperty(tokType) {\n    return has(tokType, \"categoryMatchesMap\");\n}\nexport function isTokenType(tokType) {\n    return has(tokType, \"tokenTypeIdx\");\n}\n//# sourceMappingURL=tokens.js.map","import { analyzeTokenTypes, charCodeToOptimizedIndex, cloneEmptyGroups, DEFAULT_MODE, LineTerminatorOptimizedTester, performRuntimeChecks, performWarningRuntimeChecks, SUPPORT_STICKY, validatePatterns, } from \"./lexer.js\";\nimport { assign, clone, forEach, identity, isArray, isEmpty, isUndefined, keys, last, map, noop, reduce, reject, } from \"lodash-es\";\nimport { PRINT_WARNING, timer, toFastProperties } from \"@chevrotain/utils\";\nimport { augmentTokenTypes } from \"./tokens.js\";\nimport { defaultLexerErrorProvider } from \"./lexer_errors_public.js\";\nimport { clearRegExpParserCache } from \"./reg_exp_parser.js\";\nexport var LexerDefinitionErrorType;\n(function (LexerDefinitionErrorType) {\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MISSING_PATTERN\"] = 0] = \"MISSING_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_PATTERN\"] = 1] = \"INVALID_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EOI_ANCHOR_FOUND\"] = 2] = \"EOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNSUPPORTED_FLAGS_FOUND\"] = 3] = \"UNSUPPORTED_FLAGS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"DUPLICATE_PATTERNS_FOUND\"] = 4] = \"DUPLICATE_PATTERNS_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"INVALID_GROUP_TYPE_FOUND\"] = 5] = \"INVALID_GROUP_TYPE_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"PUSH_MODE_DOES_NOT_EXIST\"] = 6] = \"PUSH_MODE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\"] = 7] = \"MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\"] = 8] = \"MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\"] = 9] = \"MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\"] = 10] = \"LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"SOI_ANCHOR_FOUND\"] = 11] = \"SOI_ANCHOR_FOUND\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"EMPTY_MATCH_PATTERN\"] = 12] = \"EMPTY_MATCH_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"NO_LINE_BREAKS_FLAGS\"] = 13] = \"NO_LINE_BREAKS_FLAGS\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"UNREACHABLE_PATTERN\"] = 14] = \"UNREACHABLE_PATTERN\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"IDENTIFY_TERMINATOR\"] = 15] = \"IDENTIFY_TERMINATOR\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"CUSTOM_LINE_BREAK\"] = 16] = \"CUSTOM_LINE_BREAK\";\n    LexerDefinitionErrorType[LexerDefinitionErrorType[\"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\"] = 17] = \"MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE\";\n})(LexerDefinitionErrorType || (LexerDefinitionErrorType = {}));\nconst DEFAULT_LEXER_CONFIG = {\n    deferDefinitionErrorsHandling: false,\n    positionTracking: \"full\",\n    lineTerminatorsPattern: /\\n|\\r\\n?/g,\n    lineTerminatorCharacters: [\"\\n\", \"\\r\"],\n    ensureOptimizations: false,\n    safeMode: false,\n    errorMessageProvider: defaultLexerErrorProvider,\n    traceInitPerf: false,\n    skipValidations: false,\n    recoveryEnabled: true,\n};\nObject.freeze(DEFAULT_LEXER_CONFIG);\nexport class Lexer {\n    constructor(lexerDefinition, config = DEFAULT_LEXER_CONFIG) {\n        this.lexerDefinition = lexerDefinition;\n        this.lexerDefinitionErrors = [];\n        this.lexerDefinitionWarning = [];\n        this.patternIdxToConfig = {};\n        this.charCodeToPatternIdxToConfig = {};\n        this.modes = [];\n        this.emptyGroups = {};\n        this.trackStartLines = true;\n        this.trackEndLines = true;\n        this.hasCustom = false;\n        this.canModeBeOptimized = {};\n        // Duplicated from the parser's perf trace trait to allow future extraction\n        // of the lexer to a separate package.\n        this.TRACE_INIT = (phaseDesc, phaseImpl) => {\n            // No need to optimize this using NOOP pattern because\n            // It is not called in a hot spot...\n            if (this.traceInitPerf === true) {\n                this.traceInitIndent++;\n                const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    console.log(`${indent}--> <${phaseDesc}>`);\n                }\n                const { time, value } = timer(phaseImpl);\n                /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n                const traceMethod = time > 10 ? console.warn : console.log;\n                if (this.traceInitIndent < this.traceInitMaxIdent) {\n                    traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n                }\n                this.traceInitIndent--;\n                return value;\n            }\n            else {\n                return phaseImpl();\n            }\n        };\n        if (typeof config === \"boolean\") {\n            throw Error(\"The second argument to the Lexer constructor is now an ILexerConfig Object.\\n\" +\n                \"a boolean 2nd argument is no longer supported\");\n        }\n        // todo: defaults func?\n        this.config = assign({}, DEFAULT_LEXER_CONFIG, config);\n        const traceInitVal = this.config.traceInitPerf;\n        if (traceInitVal === true) {\n            this.traceInitMaxIdent = Infinity;\n            this.traceInitPerf = true;\n        }\n        else if (typeof traceInitVal === \"number\") {\n            this.traceInitMaxIdent = traceInitVal;\n            this.traceInitPerf = true;\n        }\n        this.traceInitIndent = -1;\n        this.TRACE_INIT(\"Lexer Constructor\", () => {\n            let actualDefinition;\n            let hasOnlySingleMode = true;\n            this.TRACE_INIT(\"Lexer Config handling\", () => {\n                if (this.config.lineTerminatorsPattern ===\n                    DEFAULT_LEXER_CONFIG.lineTerminatorsPattern) {\n                    // optimized built-in implementation for the defaults definition of lineTerminators\n                    this.config.lineTerminatorsPattern = LineTerminatorOptimizedTester;\n                }\n                else {\n                    if (this.config.lineTerminatorCharacters ===\n                        DEFAULT_LEXER_CONFIG.lineTerminatorCharacters) {\n                        throw Error(\"Error: Missing <lineTerminatorCharacters> property on the Lexer config.\\n\" +\n                            \"\\tFor details See: https://chevrotain.io/docs/guide/resolving_lexer_errors.html#MISSING_LINE_TERM_CHARS\");\n                    }\n                }\n                if (config.safeMode && config.ensureOptimizations) {\n                    throw Error('\"safeMode\" and \"ensureOptimizations\" flags are mutually exclusive.');\n                }\n                this.trackStartLines = /full|onlyStart/i.test(this.config.positionTracking);\n                this.trackEndLines = /full/i.test(this.config.positionTracking);\n                // Convert SingleModeLexerDefinition into a IMultiModeLexerDefinition.\n                if (isArray(lexerDefinition)) {\n                    actualDefinition = {\n                        modes: { defaultMode: clone(lexerDefinition) },\n                        defaultMode: DEFAULT_MODE,\n                    };\n                }\n                else {\n                    // no conversion needed, input should already be a IMultiModeLexerDefinition\n                    hasOnlySingleMode = false;\n                    actualDefinition = clone(lexerDefinition);\n                }\n            });\n            if (this.config.skipValidations === false) {\n                this.TRACE_INIT(\"performRuntimeChecks\", () => {\n                    this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(performRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n                this.TRACE_INIT(\"performWarningRuntimeChecks\", () => {\n                    this.lexerDefinitionWarning = this.lexerDefinitionWarning.concat(performWarningRuntimeChecks(actualDefinition, this.trackStartLines, this.config.lineTerminatorCharacters));\n                });\n            }\n            // for extra robustness to avoid throwing an none informative error message\n            actualDefinition.modes = actualDefinition.modes\n                ? actualDefinition.modes\n                : {};\n            // an error of undefined TokenTypes will be detected in \"performRuntimeChecks\" above.\n            // this transformation is to increase robustness in the case of partially invalid lexer definition.\n            forEach(actualDefinition.modes, (currModeValue, currModeName) => {\n                actualDefinition.modes[currModeName] = reject(currModeValue, (currTokType) => isUndefined(currTokType));\n            });\n            const allModeNames = keys(actualDefinition.modes);\n            forEach(actualDefinition.modes, (currModDef, currModName) => {\n                this.TRACE_INIT(`Mode: <${currModName}> processing`, () => {\n                    this.modes.push(currModName);\n                    if (this.config.skipValidations === false) {\n                        this.TRACE_INIT(`validatePatterns`, () => {\n                            this.lexerDefinitionErrors = this.lexerDefinitionErrors.concat(validatePatterns(currModDef, allModeNames));\n                        });\n                    }\n                    // If definition errors were encountered, the analysis phase may fail unexpectedly/\n                    // Considering a lexer with definition errors may never be used, there is no point\n                    // to performing the analysis anyhow...\n                    if (isEmpty(this.lexerDefinitionErrors)) {\n                        augmentTokenTypes(currModDef);\n                        let currAnalyzeResult;\n                        this.TRACE_INIT(`analyzeTokenTypes`, () => {\n                            currAnalyzeResult = analyzeTokenTypes(currModDef, {\n                                lineTerminatorCharacters: this.config.lineTerminatorCharacters,\n                                positionTracking: config.positionTracking,\n                                ensureOptimizations: config.ensureOptimizations,\n                                safeMode: config.safeMode,\n                                tracer: this.TRACE_INIT,\n                            });\n                        });\n                        this.patternIdxToConfig[currModName] =\n                            currAnalyzeResult.patternIdxToConfig;\n                        this.charCodeToPatternIdxToConfig[currModName] =\n                            currAnalyzeResult.charCodeToPatternIdxToConfig;\n                        this.emptyGroups = assign({}, this.emptyGroups, currAnalyzeResult.emptyGroups);\n                        this.hasCustom = currAnalyzeResult.hasCustom || this.hasCustom;\n                        this.canModeBeOptimized[currModName] =\n                            currAnalyzeResult.canBeOptimized;\n                    }\n                });\n            });\n            this.defaultMode = actualDefinition.defaultMode;\n            if (!isEmpty(this.lexerDefinitionErrors) &&\n                !this.config.deferDefinitionErrorsHandling) {\n                const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                    return error.message;\n                });\n                const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n                throw new Error(\"Errors detected in definition of Lexer:\\n\" + allErrMessagesString);\n            }\n            // Only print warning if there are no errors, This will avoid pl\n            forEach(this.lexerDefinitionWarning, (warningDescriptor) => {\n                PRINT_WARNING(warningDescriptor.message);\n            });\n            this.TRACE_INIT(\"Choosing sub-methods implementations\", () => {\n                // Choose the relevant internal implementations for this specific parser.\n                // These implementations should be in-lined by the JavaScript engine\n                // to provide optimal performance in each scenario.\n                if (SUPPORT_STICKY) {\n                    this.chopInput = identity;\n                    this.match = this.matchWithTest;\n                }\n                else {\n                    this.updateLastIndex = noop;\n                    this.match = this.matchWithExec;\n                }\n                if (hasOnlySingleMode) {\n                    this.handleModes = noop;\n                }\n                if (this.trackStartLines === false) {\n                    this.computeNewColumn = identity;\n                }\n                if (this.trackEndLines === false) {\n                    this.updateTokenEndLineColumnLocation = noop;\n                }\n                if (/full/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createFullToken;\n                }\n                else if (/onlyStart/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createStartOnlyToken;\n                }\n                else if (/onlyOffset/i.test(this.config.positionTracking)) {\n                    this.createTokenInstance = this.createOffsetOnlyToken;\n                }\n                else {\n                    throw Error(`Invalid <positionTracking> config option: \"${this.config.positionTracking}\"`);\n                }\n                if (this.hasCustom) {\n                    this.addToken = this.addTokenUsingPush;\n                    this.handlePayload = this.handlePayloadWithCustom;\n                }\n                else {\n                    this.addToken = this.addTokenUsingMemberAccess;\n                    this.handlePayload = this.handlePayloadNoCustom;\n                }\n            });\n            this.TRACE_INIT(\"Failed Optimization Warnings\", () => {\n                const unOptimizedModes = reduce(this.canModeBeOptimized, (cannotBeOptimized, canBeOptimized, modeName) => {\n                    if (canBeOptimized === false) {\n                        cannotBeOptimized.push(modeName);\n                    }\n                    return cannotBeOptimized;\n                }, []);\n                if (config.ensureOptimizations && !isEmpty(unOptimizedModes)) {\n                    throw Error(`Lexer Modes: < ${unOptimizedModes.join(\", \")} > cannot be optimized.\\n` +\n                        '\\t Disable the \"ensureOptimizations\" lexer config flag to silently ignore this and run the lexer in an un-optimized mode.\\n' +\n                        \"\\t Or inspect the console log for details on how to resolve these issues.\");\n                }\n            });\n            this.TRACE_INIT(\"clearRegExpParserCache\", () => {\n                clearRegExpParserCache();\n            });\n            this.TRACE_INIT(\"toFastProperties\", () => {\n                toFastProperties(this);\n            });\n        });\n    }\n    tokenize(text, initialMode = this.defaultMode) {\n        if (!isEmpty(this.lexerDefinitionErrors)) {\n            const allErrMessages = map(this.lexerDefinitionErrors, (error) => {\n                return error.message;\n            });\n            const allErrMessagesString = allErrMessages.join(\"-----------------------\\n\");\n            throw new Error(\"Unable to Tokenize because Errors detected in definition of Lexer:\\n\" +\n                allErrMessagesString);\n        }\n        return this.tokenizeInternal(text, initialMode);\n    }\n    // There is quite a bit of duplication between this and \"tokenizeInternalLazy\"\n    // This is intentional due to performance considerations.\n    // this method also used quite a bit of `!` none null assertions because it is too optimized\n    // for `tsc` to always understand it is \"safe\"\n    tokenizeInternal(text, initialMode) {\n        let i, j, k, matchAltImage, longerAlt, matchedImage, payload, altPayload, imageLength, group, tokType, newToken, errLength, droppedChar, msg, match;\n        const orgText = text;\n        const orgLength = orgText.length;\n        let offset = 0;\n        let matchedTokensIndex = 0;\n        // initializing the tokensArray to the \"guessed\" size.\n        // guessing too little will still reduce the number of array re-sizes on pushes.\n        // guessing too large (Tested by guessing x4 too large) may cost a bit more of memory\n        // but would still have a faster runtime by avoiding (All but one) array resizing.\n        const guessedNumberOfTokens = this.hasCustom\n            ? 0 // will break custom token pattern APIs the matchedTokens array will contain undefined elements.\n            : Math.floor(text.length / 10);\n        const matchedTokens = new Array(guessedNumberOfTokens);\n        const errors = [];\n        let line = this.trackStartLines ? 1 : undefined;\n        let column = this.trackStartLines ? 1 : undefined;\n        const groups = cloneEmptyGroups(this.emptyGroups);\n        const trackLines = this.trackStartLines;\n        const lineTerminatorPattern = this.config.lineTerminatorsPattern;\n        let currModePatternsLength = 0;\n        let patternIdxToConfig = [];\n        let currCharCodeToPatternIdxToConfig = [];\n        const modeStack = [];\n        const emptyArray = [];\n        Object.freeze(emptyArray);\n        let getPossiblePatterns;\n        function getPossiblePatternsSlow() {\n            return patternIdxToConfig;\n        }\n        function getPossiblePatternsOptimized(charCode) {\n            const optimizedCharIdx = charCodeToOptimizedIndex(charCode);\n            const possiblePatterns = currCharCodeToPatternIdxToConfig[optimizedCharIdx];\n            if (possiblePatterns === undefined) {\n                return emptyArray;\n            }\n            else {\n                return possiblePatterns;\n            }\n        }\n        const pop_mode = (popToken) => {\n            // TODO: perhaps avoid this error in the edge case there is no more input?\n            if (modeStack.length === 1 &&\n                // if we have both a POP_MODE and a PUSH_MODE this is in-fact a \"transition\"\n                // So no error should occur.\n                popToken.tokenType.PUSH_MODE === undefined) {\n                // if we try to pop the last mode there lexer will no longer have ANY mode.\n                // thus the pop is ignored, an error will be created and the lexer will continue parsing in the previous mode.\n                const msg = this.config.errorMessageProvider.buildUnableToPopLexerModeMessage(popToken);\n                errors.push({\n                    offset: popToken.startOffset,\n                    line: popToken.startLine,\n                    column: popToken.startColumn,\n                    length: popToken.image.length,\n                    message: msg,\n                });\n            }\n            else {\n                modeStack.pop();\n                const newMode = last(modeStack);\n                patternIdxToConfig = this.patternIdxToConfig[newMode];\n                currCharCodeToPatternIdxToConfig =\n                    this.charCodeToPatternIdxToConfig[newMode];\n                currModePatternsLength = patternIdxToConfig.length;\n                const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n                if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                    getPossiblePatterns = getPossiblePatternsOptimized;\n                }\n                else {\n                    getPossiblePatterns = getPossiblePatternsSlow;\n                }\n            }\n        };\n        function push_mode(newMode) {\n            modeStack.push(newMode);\n            currCharCodeToPatternIdxToConfig =\n                this.charCodeToPatternIdxToConfig[newMode];\n            patternIdxToConfig = this.patternIdxToConfig[newMode];\n            currModePatternsLength = patternIdxToConfig.length;\n            currModePatternsLength = patternIdxToConfig.length;\n            const modeCanBeOptimized = this.canModeBeOptimized[newMode] && this.config.safeMode === false;\n            if (currCharCodeToPatternIdxToConfig && modeCanBeOptimized) {\n                getPossiblePatterns = getPossiblePatternsOptimized;\n            }\n            else {\n                getPossiblePatterns = getPossiblePatternsSlow;\n            }\n        }\n        // this pattern seems to avoid a V8 de-optimization, although that de-optimization does not\n        // seem to matter performance wise.\n        push_mode.call(this, initialMode);\n        let currConfig;\n        const recoveryEnabled = this.config.recoveryEnabled;\n        while (offset < orgLength) {\n            matchedImage = null;\n            const nextCharCode = orgText.charCodeAt(offset);\n            const chosenPatternIdxToConfig = getPossiblePatterns(nextCharCode);\n            const chosenPatternsLength = chosenPatternIdxToConfig.length;\n            for (i = 0; i < chosenPatternsLength; i++) {\n                currConfig = chosenPatternIdxToConfig[i];\n                const currPattern = currConfig.pattern;\n                payload = null;\n                // manually in-lined because > 600 chars won't be in-lined in V8\n                const singleCharCode = currConfig.short;\n                if (singleCharCode !== false) {\n                    if (nextCharCode === singleCharCode) {\n                        // single character string\n                        matchedImage = currPattern;\n                    }\n                }\n                else if (currConfig.isCustom === true) {\n                    match = currPattern.exec(orgText, offset, matchedTokens, groups);\n                    if (match !== null) {\n                        matchedImage = match[0];\n                        if (match.payload !== undefined) {\n                            payload = match.payload;\n                        }\n                    }\n                    else {\n                        matchedImage = null;\n                    }\n                }\n                else {\n                    this.updateLastIndex(currPattern, offset);\n                    matchedImage = this.match(currPattern, text, offset);\n                }\n                if (matchedImage !== null) {\n                    // even though this pattern matched we must try a another longer alternative.\n                    // this can be used to prioritize keywords over identifiers\n                    longerAlt = currConfig.longerAlt;\n                    if (longerAlt !== undefined) {\n                        // TODO: micro optimize, avoid extra prop access\n                        // by saving/linking longerAlt on the original config?\n                        const longerAltLength = longerAlt.length;\n                        for (k = 0; k < longerAltLength; k++) {\n                            const longerAltConfig = patternIdxToConfig[longerAlt[k]];\n                            const longerAltPattern = longerAltConfig.pattern;\n                            altPayload = null;\n                            // single Char can never be a longer alt so no need to test it.\n                            // manually in-lined because > 600 chars won't be in-lined in V8\n                            if (longerAltConfig.isCustom === true) {\n                                match = longerAltPattern.exec(orgText, offset, matchedTokens, groups);\n                                if (match !== null) {\n                                    matchAltImage = match[0];\n                                    if (match.payload !== undefined) {\n                                        altPayload = match.payload;\n                                    }\n                                }\n                                else {\n                                    matchAltImage = null;\n                                }\n                            }\n                            else {\n                                this.updateLastIndex(longerAltPattern, offset);\n                                matchAltImage = this.match(longerAltPattern, text, offset);\n                            }\n                            if (matchAltImage && matchAltImage.length > matchedImage.length) {\n                                matchedImage = matchAltImage;\n                                payload = altPayload;\n                                currConfig = longerAltConfig;\n                                // Exit the loop early after matching one of the longer alternatives\n                                // The first matched alternative takes precedence\n                                break;\n                            }\n                        }\n                    }\n                    break;\n                }\n            }\n            // successful match\n            if (matchedImage !== null) {\n                imageLength = matchedImage.length;\n                group = currConfig.group;\n                if (group !== undefined) {\n                    tokType = currConfig.tokenTypeIdx;\n                    // TODO: \"offset + imageLength\" and the new column may be computed twice in case of \"full\" location information inside\n                    // createFullToken method\n                    newToken = this.createTokenInstance(matchedImage, offset, tokType, currConfig.tokenType, line, column, imageLength);\n                    this.handlePayload(newToken, payload);\n                    // TODO: optimize NOOP in case there are no special groups?\n                    if (group === false) {\n                        matchedTokensIndex = this.addToken(matchedTokens, matchedTokensIndex, newToken);\n                    }\n                    else {\n                        groups[group].push(newToken);\n                    }\n                }\n                text = this.chopInput(text, imageLength);\n                offset = offset + imageLength;\n                // TODO: with newlines the column may be assigned twice\n                column = this.computeNewColumn(column, imageLength);\n                if (trackLines === true && currConfig.canLineTerminator === true) {\n                    let numOfLTsInMatch = 0;\n                    let foundTerminator;\n                    let lastLTEndOffset;\n                    lineTerminatorPattern.lastIndex = 0;\n                    do {\n                        foundTerminator = lineTerminatorPattern.test(matchedImage);\n                        if (foundTerminator === true) {\n                            lastLTEndOffset = lineTerminatorPattern.lastIndex - 1;\n                            numOfLTsInMatch++;\n                        }\n                    } while (foundTerminator === true);\n                    if (numOfLTsInMatch !== 0) {\n                        line = line + numOfLTsInMatch;\n                        column = imageLength - lastLTEndOffset;\n                        this.updateTokenEndLineColumnLocation(newToken, group, lastLTEndOffset, numOfLTsInMatch, line, column, imageLength);\n                    }\n                }\n                // will be NOOP if no modes present\n                this.handleModes(currConfig, pop_mode, push_mode, newToken);\n            }\n            else {\n                // error recovery, drop characters until we identify a valid token's start point\n                const errorStartOffset = offset;\n                const errorLine = line;\n                const errorColumn = column;\n                let foundResyncPoint = recoveryEnabled === false;\n                while (foundResyncPoint === false && offset < orgLength) {\n                    // Identity Func (when sticky flag is enabled)\n                    text = this.chopInput(text, 1);\n                    offset++;\n                    for (j = 0; j < currModePatternsLength; j++) {\n                        const currConfig = patternIdxToConfig[j];\n                        const currPattern = currConfig.pattern;\n                        // manually in-lined because > 600 chars won't be in-lined in V8\n                        const singleCharCode = currConfig.short;\n                        if (singleCharCode !== false) {\n                            if (orgText.charCodeAt(offset) === singleCharCode) {\n                                // single character string\n                                foundResyncPoint = true;\n                            }\n                        }\n                        else if (currConfig.isCustom === true) {\n                            foundResyncPoint =\n                                currPattern.exec(orgText, offset, matchedTokens, groups) !== null;\n                        }\n                        else {\n                            this.updateLastIndex(currPattern, offset);\n                            foundResyncPoint = currPattern.exec(text) !== null;\n                        }\n                        if (foundResyncPoint === true) {\n                            break;\n                        }\n                    }\n                }\n                errLength = offset - errorStartOffset;\n                column = this.computeNewColumn(column, errLength);\n                // at this point we either re-synced or reached the end of the input text\n                msg = this.config.errorMessageProvider.buildUnexpectedCharactersMessage(orgText, errorStartOffset, errLength, errorLine, errorColumn);\n                errors.push({\n                    offset: errorStartOffset,\n                    line: errorLine,\n                    column: errorColumn,\n                    length: errLength,\n                    message: msg,\n                });\n                if (recoveryEnabled === false) {\n                    break;\n                }\n            }\n        }\n        // if we do have custom patterns which push directly into the\n        // TODO: custom tokens should not push directly??\n        if (!this.hasCustom) {\n            // if we guessed a too large size for the tokens array this will shrink it to the right size.\n            matchedTokens.length = matchedTokensIndex;\n        }\n        return {\n            tokens: matchedTokens,\n            groups: groups,\n            errors: errors,\n        };\n    }\n    handleModes(config, pop_mode, push_mode, newToken) {\n        if (config.pop === true) {\n            // need to save the PUSH_MODE property as if the mode is popped\n            // patternIdxToPopMode is updated to reflect the new mode after popping the stack\n            const pushMode = config.push;\n            pop_mode(newToken);\n            if (pushMode !== undefined) {\n                push_mode.call(this, pushMode);\n            }\n        }\n        else if (config.push !== undefined) {\n            push_mode.call(this, config.push);\n        }\n    }\n    chopInput(text, length) {\n        return text.substring(length);\n    }\n    updateLastIndex(regExp, newLastIndex) {\n        regExp.lastIndex = newLastIndex;\n    }\n    // TODO: decrease this under 600 characters? inspect stripping comments option in TSC compiler\n    updateTokenEndLineColumnLocation(newToken, group, lastLTIdx, numOfLTsInMatch, line, column, imageLength) {\n        let lastCharIsLT, fixForEndingInLT;\n        if (group !== undefined) {\n            // a none skipped multi line Token, need to update endLine/endColumn\n            lastCharIsLT = lastLTIdx === imageLength - 1;\n            fixForEndingInLT = lastCharIsLT ? -1 : 0;\n            if (!(numOfLTsInMatch === 1 && lastCharIsLT === true)) {\n                // if a token ends in a LT that last LT only affects the line numbering of following Tokens\n                newToken.endLine = line + fixForEndingInLT;\n                // the last LT in a token does not affect the endColumn either as the [columnStart ... columnEnd)\n                // inclusive to exclusive range.\n                newToken.endColumn = column - 1 + -fixForEndingInLT;\n            }\n            // else single LT in the last character of a token, no need to modify the endLine/EndColumn\n        }\n    }\n    computeNewColumn(oldColumn, imageLength) {\n        return oldColumn + imageLength;\n    }\n    createOffsetOnlyToken(image, startOffset, tokenTypeIdx, tokenType) {\n        return {\n            image,\n            startOffset,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createStartOnlyToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn) {\n        return {\n            image,\n            startOffset,\n            startLine,\n            startColumn,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    createFullToken(image, startOffset, tokenTypeIdx, tokenType, startLine, startColumn, imageLength) {\n        return {\n            image,\n            startOffset,\n            endOffset: startOffset + imageLength - 1,\n            startLine,\n            endLine: startLine,\n            startColumn,\n            endColumn: startColumn + imageLength - 1,\n            tokenTypeIdx,\n            tokenType,\n        };\n    }\n    addTokenUsingPush(tokenVector, index, tokenToAdd) {\n        tokenVector.push(tokenToAdd);\n        return index;\n    }\n    addTokenUsingMemberAccess(tokenVector, index, tokenToAdd) {\n        tokenVector[index] = tokenToAdd;\n        index++;\n        return index;\n    }\n    handlePayloadNoCustom(token, payload) { }\n    handlePayloadWithCustom(token, payload) {\n        if (payload !== null) {\n            token.payload = payload;\n        }\n    }\n    matchWithTest(pattern, text, offset) {\n        const found = pattern.test(text);\n        if (found === true) {\n            return text.substring(offset, pattern.lastIndex);\n        }\n        return null;\n    }\n    matchWithExec(pattern, text) {\n        const regExpArray = pattern.exec(text);\n        return regExpArray !== null ? regExpArray[0] : null;\n    }\n}\nLexer.SKIPPED = \"This marks a skipped Token pattern, this means each token identified by it will\" +\n    \"be consumed and then thrown into oblivion, this can be used to for example to completely ignore whitespace.\";\nLexer.NA = /NOT_APPLICABLE/;\n//# sourceMappingURL=lexer_public.js.map","export const defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage(token) {\n        return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`;\n    },\n    buildUnexpectedCharactersMessage(fullText, startOffset, length, line, column) {\n        return (`unexpected character: ->${fullText.charAt(startOffset)}<- at offset: ${startOffset},` + ` skipped ${length} characters.`);\n    },\n};\n//# sourceMappingURL=lexer_errors_public.js.map","import { has, isString, isUndefined } from \"lodash-es\";\nimport { Lexer } from \"./lexer_public.js\";\nimport { augmentTokenTypes, tokenStructuredMatcher } from \"./tokens.js\";\nexport function tokenLabel(tokType) {\n    if (hasTokenLabel(tokType)) {\n        return tokType.LABEL;\n    }\n    else {\n        return tokType.name;\n    }\n}\nexport function tokenName(tokType) {\n    return tokType.name;\n}\nexport function hasTokenLabel(obj) {\n    return isString(obj.LABEL) && obj.LABEL !== \"\";\n}\nconst PARENT = \"parent\";\nconst CATEGORIES = \"categories\";\nconst LABEL = \"label\";\nconst GROUP = \"group\";\nconst PUSH_MODE = \"push_mode\";\nconst POP_MODE = \"pop_mode\";\nconst LONGER_ALT = \"longer_alt\";\nconst LINE_BREAKS = \"line_breaks\";\nconst START_CHARS_HINT = \"start_chars_hint\";\nexport function createToken(config) {\n    return createTokenInternal(config);\n}\nfunction createTokenInternal(config) {\n    const pattern = config.pattern;\n    const tokenType = {};\n    tokenType.name = config.name;\n    if (!isUndefined(pattern)) {\n        tokenType.PATTERN = pattern;\n    }\n    if (has(config, PARENT)) {\n        throw (\"The parent property is no longer supported.\\n\" +\n            \"See: https://github.com/chevrotain/chevrotain/issues/564#issuecomment-349062346 for details.\");\n    }\n    if (has(config, CATEGORIES)) {\n        // casting to ANY as this will be fixed inside `augmentTokenTypes``\n        tokenType.CATEGORIES = config[CATEGORIES];\n    }\n    augmentTokenTypes([tokenType]);\n    if (has(config, LABEL)) {\n        tokenType.LABEL = config[LABEL];\n    }\n    if (has(config, GROUP)) {\n        tokenType.GROUP = config[GROUP];\n    }\n    if (has(config, POP_MODE)) {\n        tokenType.POP_MODE = config[POP_MODE];\n    }\n    if (has(config, PUSH_MODE)) {\n        tokenType.PUSH_MODE = config[PUSH_MODE];\n    }\n    if (has(config, LONGER_ALT)) {\n        tokenType.LONGER_ALT = config[LONGER_ALT];\n    }\n    if (has(config, LINE_BREAKS)) {\n        tokenType.LINE_BREAKS = config[LINE_BREAKS];\n    }\n    if (has(config, START_CHARS_HINT)) {\n        tokenType.START_CHARS_HINT = config[START_CHARS_HINT];\n    }\n    return tokenType;\n}\nexport const EOF = createToken({ name: \"EOF\", pattern: Lexer.NA });\naugmentTokenTypes([EOF]);\nexport function createTokenInstance(tokType, image, startOffset, endOffset, startLine, endLine, startColumn, endColumn) {\n    return {\n        image,\n        startOffset,\n        endOffset,\n        startLine,\n        endLine,\n        startColumn,\n        endColumn,\n        tokenTypeIdx: tokType.tokenTypeIdx,\n        tokenType: tokType,\n    };\n}\nexport function tokenMatcher(token, tokType) {\n    return tokenStructuredMatcher(token, tokType);\n}\n//# sourceMappingURL=tokens_public.js.map","import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public.js\";\nimport { first, map, reduce } from \"lodash-es\";\nimport { getProductionDslName, NonTerminal, Rule, Terminal, } from \"@chevrotain/gast\";\nexport const defaultParserErrorProvider = {\n    buildMismatchTokenMessage({ expected, actual, previous, ruleName }) {\n        const hasLabel = hasTokenLabel(expected);\n        const expectedMsg = hasLabel\n            ? `--> ${tokenLabel(expected)} <--`\n            : `token of type --> ${expected.name} <--`;\n        const msg = `Expecting ${expectedMsg} but found --> '${actual.image}' <--`;\n        return msg;\n    },\n    buildNotAllInputParsedMessage({ firstRedundant, ruleName }) {\n        return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n    },\n    buildNoViableAltMessage({ expectedPathsPerAlt, actual, previous, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const allLookAheadPaths = reduce(expectedPathsPerAlt, (result, currAltPaths) => result.concat(currAltPaths), []);\n            const nextValidTokenSequences = map(allLookAheadPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\", \")}]`);\n            const nextValidSequenceItems = map(nextValidTokenSequences, (itemMsg, idx) => `  ${idx + 1}. ${itemMsg}`);\n            const calculatedDescription = `one of these possible Token sequences:\\n${nextValidSequenceItems.join(\"\\n\")}`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n    buildEarlyExitMessage({ expectedIterationPaths, actual, customUserDescription, ruleName, }) {\n        const errPrefix = \"Expecting: \";\n        // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n        const actualText = first(actual).image;\n        const errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n        if (customUserDescription) {\n            return errPrefix + customUserDescription + errSuffix;\n        }\n        else {\n            const nextValidTokenSequences = map(expectedIterationPaths, (currPath) => `[${map(currPath, (currTokenType) => tokenLabel(currTokenType)).join(\",\")}]`);\n            const calculatedDescription = `expecting at least one iteration which starts with one of these possible Token sequences::\\n  ` +\n                `<${nextValidTokenSequences.join(\" ,\")}>`;\n            return errPrefix + calculatedDescription + errSuffix;\n        }\n    },\n};\nObject.freeze(defaultParserErrorProvider);\nexport const defaultGrammarResolverErrorProvider = {\n    buildRuleNotFoundError(topLevelRule, undefinedRule) {\n        const msg = \"Invalid grammar, reference to a rule which is not defined: ->\" +\n            undefinedRule.nonTerminalName +\n            \"<-\\n\" +\n            \"inside top level rule: ->\" +\n            topLevelRule.name +\n            \"<-\";\n        return msg;\n    },\n};\nexport const defaultGrammarValidatorErrorProvider = {\n    buildDuplicateFoundError(topLevelRule, duplicateProds) {\n        function getExtraProductionArgument(prod) {\n            if (prod instanceof Terminal) {\n                return prod.terminalType.name;\n            }\n            else if (prod instanceof NonTerminal) {\n                return prod.nonTerminalName;\n            }\n            else {\n                return \"\";\n            }\n        }\n        const topLevelName = topLevelRule.name;\n        const duplicateProd = first(duplicateProds);\n        const index = duplicateProd.idx;\n        const dslName = getProductionDslName(duplicateProd);\n        const extraArgument = getExtraProductionArgument(duplicateProd);\n        const hasExplicitIndex = index > 0;\n        let msg = `->${dslName}${hasExplicitIndex ? index : \"\"}<- ${extraArgument ? `with argument: ->${extraArgument}<-` : \"\"}\n                  appears more than once (${duplicateProds.length} times) in the top level rule: ->${topLevelName}<-.                  \n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \n                  `;\n        // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n        msg = msg.replace(/[ \\t]+/g, \" \");\n        msg = msg.replace(/\\s\\s+/g, \"\\n\");\n        return msg;\n    },\n    buildNamespaceConflictError(rule) {\n        const errMsg = `Namespace conflict found in grammar.\\n` +\n            `The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <${rule.name}>.\\n` +\n            `To resolve this make sure each Terminal and Non-Terminal names are unique\\n` +\n            `This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n` +\n            `and Non-Terminal names start with a lower case letter.`;\n        return errMsg;\n    },\n    buildAlternationPrefixAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currTok) => tokenLabel(currTok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        const errMsg = `Ambiguous alternatives: <${options.ambiguityIndices.join(\" ,\")}> due to common lookahead prefix\\n` +\n            `in <OR${occurrence}> inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n` +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n` +\n            `For Further details.`;\n        return errMsg;\n    },\n    buildAlternationAmbiguityError(options) {\n        const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n        const occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n        let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\" ,\")}> in <OR${occurrence}>` +\n            ` inside <${options.topLevelRule.name}> Rule,\\n` +\n            `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n        currMessage =\n            currMessage +\n                `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n                `For Further details.`;\n        return currMessage;\n    },\n    buildEmptyRepetitionError(options) {\n        let dslName = getProductionDslName(options.repetition);\n        if (options.repetition.idx !== 0) {\n            dslName += options.repetition.idx;\n        }\n        const errMsg = `The repetition <${dslName}> within Rule <${options.topLevelRule.name}> can never consume any tokens.\\n` +\n            `This could lead to an infinite loop.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildTokenNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildEmptyAlternationError(options) {\n        const errMsg = `Ambiguous empty alternative: <${options.emptyChoiceIdx + 1}>` +\n            ` in <OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n` +\n            `Only the last alternative may be an empty alternative.`;\n        return errMsg;\n    },\n    buildTooManyAlternativesError(options) {\n        const errMsg = `An Alternation cannot have more than 256 alternatives:\\n` +\n            `<OR${options.alternation.idx}> inside <${options.topLevelRule.name}> Rule.\\n has ${options.alternation.definition.length + 1} alternatives.`;\n        return errMsg;\n    },\n    buildLeftRecursionError(options) {\n        const ruleName = options.topLevelRule.name;\n        const pathNames = map(options.leftRecursionPath, (currRule) => currRule.name);\n        const leftRecursivePath = `${ruleName} --> ${pathNames\n            .concat([ruleName])\n            .join(\" --> \")}`;\n        const errMsg = `Left Recursion found in grammar.\\n` +\n            `rule: <${ruleName}> can be invoked from itself (directly or indirectly)\\n` +\n            `without consuming any Tokens. The grammar path that causes this is: \\n ${leftRecursivePath}\\n` +\n            ` To fix this refactor your grammar to remove the left recursion.\\n` +\n            `see: https://en.wikipedia.org/wiki/LL_parser#Left_factoring.`;\n        return errMsg;\n    },\n    // TODO: remove - `errors_public` from nyc.config.js exclude\n    //       once this method is fully removed from this file\n    buildInvalidRuleNameError(options) {\n        /* istanbul ignore next */\n        return \"deprecated\";\n    },\n    buildDuplicateRuleNameError(options) {\n        let ruleName;\n        if (options.topLevelRule instanceof Rule) {\n            ruleName = options.topLevelRule.name;\n        }\n        else {\n            ruleName = options.topLevelRule;\n        }\n        const errMsg = `Duplicate definition, rule: ->${ruleName}<- is already defined in the grammar: ->${options.grammarName}<-`;\n        return errMsg;\n    },\n};\n//# sourceMappingURL=errors_public.js.map","import { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { forEach, values } from \"lodash-es\";\nimport { GAstVisitor } from \"@chevrotain/gast\";\nexport function resolveGrammar(topLevels, errMsgProvider) {\n    const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n    refResolver.resolveRefs();\n    return refResolver.errors;\n}\nexport class GastRefResolverVisitor extends GAstVisitor {\n    constructor(nameToTopRule, errMsgProvider) {\n        super();\n        this.nameToTopRule = nameToTopRule;\n        this.errMsgProvider = errMsgProvider;\n        this.errors = [];\n    }\n    resolveRefs() {\n        forEach(values(this.nameToTopRule), (prod) => {\n            this.currTopLevel = prod;\n            prod.accept(this);\n        });\n    }\n    visitNonTerminal(node) {\n        const ref = this.nameToTopRule[node.nonTerminalName];\n        if (!ref) {\n            const msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n            this.errors.push({\n                message: msg,\n                type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n                ruleName: this.currTopLevel.name,\n                unresolvedRefName: node.nonTerminalName,\n            });\n        }\n        else {\n            node.referencedRule = ref;\n        }\n    }\n}\n//# sourceMappingURL=resolver.js.map","import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n","import { clone, drop, dropRight, first as _first, forEach, isEmpty, last, } from \"lodash-es\";\nimport { first } from \"./first.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nexport class AbstractNextPossibleTokensWalker extends RestWalker {\n    constructor(topProd, path) {\n        super();\n        this.topProd = topProd;\n        this.path = path;\n        this.possibleTokTypes = [];\n        this.nextProductionName = \"\";\n        this.nextProductionOccurrence = 0;\n        this.found = false;\n        this.isAtEndOfPath = false;\n    }\n    startWalking() {\n        this.found = false;\n        if (this.path.ruleStack[0] !== this.topProd.name) {\n            throw Error(\"The path does not start with the walker's top Rule!\");\n        }\n        // immutable for the win\n        this.ruleStack = clone(this.path.ruleStack).reverse(); // intelij bug requires assertion\n        this.occurrenceStack = clone(this.path.occurrenceStack).reverse(); // intelij bug requires assertion\n        // already verified that the first production is valid, we now seek the 2nd production\n        this.ruleStack.pop();\n        this.occurrenceStack.pop();\n        this.updateExpectedNext();\n        this.walk(this.topProd);\n        return this.possibleTokTypes;\n    }\n    walk(prod, prevRest = []) {\n        // stop scanning once we found the path\n        if (!this.found) {\n            super.walk(prod, prevRest);\n        }\n    }\n    walkProdRef(refProd, currRest, prevRest) {\n        // found the next production, need to keep walking in it\n        if (refProd.referencedRule.name === this.nextProductionName &&\n            refProd.idx === this.nextProductionOccurrence) {\n            const fullRest = currRest.concat(prevRest);\n            this.updateExpectedNext();\n            this.walk(refProd.referencedRule, fullRest);\n        }\n    }\n    updateExpectedNext() {\n        // need to consume the Terminal\n        if (isEmpty(this.ruleStack)) {\n            // must reset nextProductionXXX to avoid walking down another Top Level production while what we are\n            // really seeking is the last Terminal...\n            this.nextProductionName = \"\";\n            this.nextProductionOccurrence = 0;\n            this.isAtEndOfPath = true;\n        }\n        else {\n            this.nextProductionName = this.ruleStack.pop();\n            this.nextProductionOccurrence = this.occurrenceStack.pop();\n        }\n    }\n}\nexport class NextAfterTokenWalker extends AbstractNextPossibleTokensWalker {\n    constructor(topProd, path) {\n        super(topProd, path);\n        this.path = path;\n        this.nextTerminalName = \"\";\n        this.nextTerminalOccurrence = 0;\n        this.nextTerminalName = this.path.lastTok.name;\n        this.nextTerminalOccurrence = this.path.lastTokOccurrence;\n    }\n    walkTerminal(terminal, currRest, prevRest) {\n        if (this.isAtEndOfPath &&\n            terminal.terminalType.name === this.nextTerminalName &&\n            terminal.idx === this.nextTerminalOccurrence &&\n            !this.found) {\n            const fullRest = currRest.concat(prevRest);\n            const restProd = new Alternative({ definition: fullRest });\n            this.possibleTokTypes = first(restProd);\n            this.found = true;\n        }\n    }\n}\n/**\n * This walker only \"walks\" a single \"TOP\" level in the Grammar Ast, this means\n * it never \"follows\" production refs\n */\nexport class AbstractNextTerminalAfterProductionWalker extends RestWalker {\n    constructor(topRule, occurrence) {\n        super();\n        this.topRule = topRule;\n        this.occurrence = occurrence;\n        this.result = {\n            token: undefined,\n            occurrence: undefined,\n            isEndOfRule: undefined,\n        };\n    }\n    startWalking() {\n        this.walk(this.topRule);\n        return this.result;\n    }\n}\nexport class NextTerminalAfterManyWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkMany(manyProd, currRest, prevRest) {\n        if (manyProd.idx === this.occurrence) {\n            const firstAfterMany = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterMany === undefined;\n            if (firstAfterMany instanceof Terminal) {\n                this.result.token = firstAfterMany.terminalType;\n                this.result.occurrence = firstAfterMany.idx;\n            }\n        }\n        else {\n            super.walkMany(manyProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterManySepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (manySepProd.idx === this.occurrence) {\n            const firstAfterManySep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterManySep === undefined;\n            if (firstAfterManySep instanceof Terminal) {\n                this.result.token = firstAfterManySep.terminalType;\n                this.result.occurrence = firstAfterManySep.idx;\n            }\n        }\n        else {\n            super.walkManySep(manySepProd, currRest, prevRest);\n        }\n    }\n}\nexport class NextTerminalAfterAtLeastOneWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (atLeastOneProd.idx === this.occurrence) {\n            const firstAfterAtLeastOne = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterAtLeastOne === undefined;\n            if (firstAfterAtLeastOne instanceof Terminal) {\n                this.result.token = firstAfterAtLeastOne.terminalType;\n                this.result.occurrence = firstAfterAtLeastOne.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOne(atLeastOneProd, currRest, prevRest);\n        }\n    }\n}\n// TODO: reduce code duplication in the AfterWalkers\nexport class NextTerminalAfterAtLeastOneSepWalker extends AbstractNextTerminalAfterProductionWalker {\n    walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest) {\n        if (atleastOneSepProd.idx === this.occurrence) {\n            const firstAfterfirstAfterAtLeastOneSep = _first(currRest.concat(prevRest));\n            this.result.isEndOfRule = firstAfterfirstAfterAtLeastOneSep === undefined;\n            if (firstAfterfirstAfterAtLeastOneSep instanceof Terminal) {\n                this.result.token = firstAfterfirstAfterAtLeastOneSep.terminalType;\n                this.result.occurrence = firstAfterfirstAfterAtLeastOneSep.idx;\n            }\n        }\n        else {\n            super.walkAtLeastOneSep(atleastOneSepProd, currRest, prevRest);\n        }\n    }\n}\nexport function possiblePathsFrom(targetDef, maxLength, currPath = []) {\n    // avoid side effects\n    currPath = clone(currPath);\n    let result = [];\n    let i = 0;\n    // TODO: avoid inner funcs\n    function remainingPathWith(nextDef) {\n        return nextDef.concat(drop(targetDef, i + 1));\n    }\n    // TODO: avoid inner funcs\n    function getAlternativesForProd(definition) {\n        const alternatives = possiblePathsFrom(remainingPathWith(definition), maxLength, currPath);\n        return result.concat(alternatives);\n    }\n    /**\n     * Mandatory productions will halt the loop as the paths computed from their recursive calls will already contain the\n     * following (rest) of the targetDef.\n     *\n     * For optional productions (Option/Repetition/...) the loop will continue to represent the paths that do not include the\n     * the optional production.\n     */\n    while (currPath.length < maxLength && i < targetDef.length) {\n        const prod = targetDef[i];\n        /* istanbul ignore else */\n        if (prod instanceof Alternative) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof NonTerminal) {\n            return getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof Option) {\n            result = getAlternativesForProd(prod.definition);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            const newDef = [\n                new Alternative({ definition: prod.definition }),\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ];\n            return getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: [new Terminal({ terminalType: prod.separator })].concat(prod.definition),\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Repetition) {\n            const newDef = prod.definition.concat([\n                new Repetition({\n                    definition: prod.definition,\n                }),\n            ]);\n            result = getAlternativesForProd(newDef);\n        }\n        else if (prod instanceof Alternation) {\n            forEach(prod.definition, (currAlt) => {\n                // TODO: this is a limited check for empty alternatives\n                //   It would prevent a common case of infinite loops during parser initialization.\n                //   However **in-directly** empty alternatives may still cause issues.\n                if (isEmpty(currAlt.definition) === false) {\n                    result = getAlternativesForProd(currAlt.definition);\n                }\n            });\n            return result;\n        }\n        else if (prod instanceof Terminal) {\n            currPath.push(prod.terminalType);\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n        i++;\n    }\n    result.push({\n        partialPath: currPath,\n        suffixDef: drop(targetDef, i),\n    });\n    return result;\n}\nexport function nextPossibleTokensAfter(initialDef, tokenVector, tokMatcher, maxLookAhead) {\n    const EXIT_NON_TERMINAL = \"EXIT_NONE_TERMINAL\";\n    // to avoid creating a new Array each time.\n    const EXIT_NON_TERMINAL_ARR = [EXIT_NON_TERMINAL];\n    const EXIT_ALTERNATIVE = \"EXIT_ALTERNATIVE\";\n    let foundCompletePath = false;\n    const tokenVectorLength = tokenVector.length;\n    const minimalAlternativesIndex = tokenVectorLength - maxLookAhead - 1;\n    const result = [];\n    const possiblePaths = [];\n    possiblePaths.push({\n        idx: -1,\n        def: initialDef,\n        ruleStack: [],\n        occurrenceStack: [],\n    });\n    while (!isEmpty(possiblePaths)) {\n        const currPath = possiblePaths.pop();\n        // skip alternatives if no more results can be found (assuming deterministic grammar with fixed lookahead)\n        if (currPath === EXIT_ALTERNATIVE) {\n            if (foundCompletePath &&\n                last(possiblePaths).idx <= minimalAlternativesIndex) {\n                // remove irrelevant alternative\n                possiblePaths.pop();\n            }\n            continue;\n        }\n        const currDef = currPath.def;\n        const currIdx = currPath.idx;\n        const currRuleStack = currPath.ruleStack;\n        const currOccurrenceStack = currPath.occurrenceStack;\n        // For Example: an empty path could exist in a valid grammar in the case of an EMPTY_ALT\n        if (isEmpty(currDef)) {\n            continue;\n        }\n        const prod = currDef[0];\n        /* istanbul ignore else */\n        if (prod === EXIT_NON_TERMINAL) {\n            const nextPath = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: dropRight(currRuleStack),\n                occurrenceStack: dropRight(currOccurrenceStack),\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Terminal) {\n            /* istanbul ignore else */\n            if (currIdx < tokenVectorLength - 1) {\n                const nextIdx = currIdx + 1;\n                const actualToken = tokenVector[nextIdx];\n                if (tokMatcher(actualToken, prod.terminalType)) {\n                    const nextPath = {\n                        idx: nextIdx,\n                        def: drop(currDef),\n                        ruleStack: currRuleStack,\n                        occurrenceStack: currOccurrenceStack,\n                    };\n                    possiblePaths.push(nextPath);\n                }\n                // end of the line\n            }\n            else if (currIdx === tokenVectorLength - 1) {\n                // IGNORE ABOVE ELSE\n                result.push({\n                    nextTokenType: prod.terminalType,\n                    nextTokenOccurrence: prod.idx,\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                });\n                foundCompletePath = true;\n            }\n            else {\n                throw Error(\"non exhaustive match\");\n            }\n        }\n        else if (prod instanceof NonTerminal) {\n            const newRuleStack = clone(currRuleStack);\n            newRuleStack.push(prod.nonTerminalName);\n            const newOccurrenceStack = clone(currOccurrenceStack);\n            newOccurrenceStack.push(prod.idx);\n            const nextPath = {\n                idx: currIdx,\n                def: prod.definition.concat(EXIT_NON_TERMINAL_ARR, drop(currDef)),\n                ruleStack: newRuleStack,\n                occurrenceStack: newOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof Option) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const nextPathWith = {\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof RepetitionMandatory) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const secondIteration = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionMandatoryWithSeparator) {\n            // TODO:(THE NEW operators here take a while...) (convert once?)\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const secondIteration = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([secondIteration], drop(currDef));\n            const nextPath = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPath);\n        }\n        else if (prod instanceof RepetitionWithSeparator) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            const separatorGast = new Terminal({\n                terminalType: prod.separator,\n            });\n            const nthRepetition = new Repetition({\n                definition: [separatorGast].concat(prod.definition),\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Repetition) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            const nextPathWithout = {\n                idx: currIdx,\n                def: drop(currDef),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWithout);\n            // required marker to avoid backtracking paths whose higher priority alternatives already matched\n            possiblePaths.push(EXIT_ALTERNATIVE);\n            // TODO: an empty repetition will cause infinite loops here, will the parser detect this in selfAnalysis?\n            const nthRepetition = new Repetition({\n                definition: prod.definition,\n                idx: prod.idx,\n            });\n            const nextDef = prod.definition.concat([nthRepetition], drop(currDef));\n            const nextPathWith = {\n                idx: currIdx,\n                def: nextDef,\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            };\n            possiblePaths.push(nextPathWith);\n        }\n        else if (prod instanceof Alternation) {\n            // the order of alternatives is meaningful, FILO (Last path will be traversed first).\n            for (let i = prod.definition.length - 1; i >= 0; i--) {\n                const currAlt = prod.definition[i];\n                const currAltPath = {\n                    idx: currIdx,\n                    def: currAlt.definition.concat(drop(currDef)),\n                    ruleStack: currRuleStack,\n                    occurrenceStack: currOccurrenceStack,\n                };\n                possiblePaths.push(currAltPath);\n                possiblePaths.push(EXIT_ALTERNATIVE);\n            }\n        }\n        else if (prod instanceof Alternative) {\n            possiblePaths.push({\n                idx: currIdx,\n                def: prod.definition.concat(drop(currDef)),\n                ruleStack: currRuleStack,\n                occurrenceStack: currOccurrenceStack,\n            });\n        }\n        else if (prod instanceof Rule) {\n            // last because we should only encounter at most a single one of these per invocation.\n            possiblePaths.push(expandTopLevelRule(prod, currIdx, currRuleStack, currOccurrenceStack));\n        }\n        else {\n            throw Error(\"non exhaustive match\");\n        }\n    }\n    return result;\n}\nfunction expandTopLevelRule(topRule, currIdx, currRuleStack, currOccurrenceStack) {\n    const newRuleStack = clone(currRuleStack);\n    newRuleStack.push(topRule.name);\n    const newCurrOccurrenceStack = clone(currOccurrenceStack);\n    // top rule is always assumed to have been called with occurrence index 1\n    newCurrOccurrenceStack.push(1);\n    return {\n        idx: currIdx,\n        def: topRule.definition,\n        ruleStack: newRuleStack,\n        occurrenceStack: newCurrOccurrenceStack,\n    };\n}\n//# sourceMappingURL=interpreter.js.map","import { every, flatten, forEach, has, isEmpty, map, reduce } from \"lodash-es\";\nimport { possiblePathsFrom } from \"./interpreter.js\";\nimport { RestWalker } from \"./rest.js\";\nimport { tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../scan/tokens.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, } from \"@chevrotain/gast\";\nexport var PROD_TYPE;\n(function (PROD_TYPE) {\n    PROD_TYPE[PROD_TYPE[\"OPTION\"] = 0] = \"OPTION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION\"] = 1] = \"REPETITION\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY\"] = 2] = \"REPETITION_MANDATORY\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_MANDATORY_WITH_SEPARATOR\"] = 3] = \"REPETITION_MANDATORY_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"REPETITION_WITH_SEPARATOR\"] = 4] = \"REPETITION_WITH_SEPARATOR\";\n    PROD_TYPE[PROD_TYPE[\"ALTERNATION\"] = 5] = \"ALTERNATION\";\n})(PROD_TYPE || (PROD_TYPE = {}));\nexport function getProdType(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof Option || prod === \"Option\") {\n        return PROD_TYPE.OPTION;\n    }\n    else if (prod instanceof Repetition || prod === \"Repetition\") {\n        return PROD_TYPE.REPETITION;\n    }\n    else if (prod instanceof RepetitionMandatory ||\n        prod === \"RepetitionMandatory\") {\n        return PROD_TYPE.REPETITION_MANDATORY;\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator ||\n        prod === \"RepetitionMandatoryWithSeparator\") {\n        return PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR;\n    }\n    else if (prod instanceof RepetitionWithSeparator ||\n        prod === \"RepetitionWithSeparator\") {\n        return PROD_TYPE.REPETITION_WITH_SEPARATOR;\n    }\n    else if (prod instanceof Alternation || prod === \"Alternation\") {\n        return PROD_TYPE.ALTERNATION;\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nexport function getLookaheadPaths(options) {\n    const { occurrence, rule, prodType, maxLookahead } = options;\n    const type = getProdType(prodType);\n    if (type === PROD_TYPE.ALTERNATION) {\n        return getLookaheadPathsForOr(occurrence, rule, maxLookahead);\n    }\n    else {\n        return getLookaheadPathsForOptionalProd(occurrence, rule, type, maxLookahead);\n    }\n}\nexport function buildLookaheadFuncForOr(occurrence, ruleGrammar, maxLookahead, hasPredicates, dynamicTokensEnabled, laFuncBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOr(occurrence, ruleGrammar, maxLookahead);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return laFuncBuilder(lookAheadPaths, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n}\n/**\n *  When dealing with an Optional production (OPTION/MANY/2nd iteration of AT_LEAST_ONE/...) we need to compare\n *  the lookahead \"inside\" the production and the lookahead immediately \"after\" it in the same top level rule (context free).\n *\n *  Example: given a production:\n *  ABC(DE)?DF\n *\n *  The optional '(DE)?' should only be entered if we see 'DE'. a single Token 'D' is not sufficient to distinguish between the two\n *  alternatives.\n *\n *  @returns A Lookahead function which will return true IFF the parser should parse the Optional production.\n */\nexport function buildLookaheadFuncForOptionalProd(occurrence, ruleGrammar, k, dynamicTokensEnabled, prodType, lookaheadBuilder) {\n    const lookAheadPaths = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k);\n    const tokenMatcher = areTokenCategoriesNotUsed(lookAheadPaths)\n        ? tokenStructuredMatcherNoCategories\n        : tokenStructuredMatcher;\n    return lookaheadBuilder(lookAheadPaths[0], tokenMatcher, dynamicTokensEnabled);\n}\nexport function buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    const numOfAlts = alts.length;\n    const areAllOneTokenLookahead = every(alts, (currAlt) => {\n        return every(currAlt, (currPath) => {\n            return currPath.length === 1;\n        });\n    });\n    // This version takes into account the predicates as well.\n    if (hasPredicates) {\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function (orAlts) {\n            // unfortunately the predicates must be extracted every single time\n            // as they cannot be cached due to references to parameters(vars) which are no longer valid.\n            // note that in the common case of no predicates, no cpu time will be wasted on this (see else block)\n            const predicates = map(orAlts, (currAlt) => currAlt.GATE);\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                const currPredicate = predicates[t];\n                if (currPredicate !== undefined && currPredicate.call(this) === false) {\n                    // if the predicate does not match there is no point in checking the paths\n                    continue;\n                }\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n    else if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        // optimized (common) case of all the lookaheads paths requiring only\n        // a single token lookahead. These Optimizations cannot work if dynamically defined Tokens are used.\n        const singleTokenAlts = map(alts, (currAlt) => {\n            return flatten(currAlt);\n        });\n        const choiceToAlt = reduce(singleTokenAlts, (result, currAlt, idx) => {\n            forEach(currAlt, (currTokType) => {\n                if (!has(result, currTokType.tokenTypeIdx)) {\n                    result[currTokType.tokenTypeIdx] = idx;\n                }\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    if (!has(result, currExtendingType)) {\n                        result[currExtendingType] = idx;\n                    }\n                });\n            });\n            return result;\n        }, {});\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            const nextToken = this.LA(1);\n            return choiceToAlt[nextToken.tokenTypeIdx];\n        };\n    }\n    else {\n        // optimized lookahead without needing to check the predicates at all.\n        // this causes code duplication which is intentional to improve performance.\n        /**\n         * @returns {number} - The chosen alternative index\n         */\n        return function () {\n            for (let t = 0; t < numOfAlts; t++) {\n                const currAlt = alts[t];\n                const currNumOfPaths = currAlt.length;\n                nextPath: for (let j = 0; j < currNumOfPaths; j++) {\n                    const currPath = currAlt[j];\n                    const currPathLength = currPath.length;\n                    for (let i = 0; i < currPathLength; i++) {\n                        const nextToken = this.LA(i + 1);\n                        if (tokenMatcher(nextToken, currPath[i]) === false) {\n                            // mismatch in current path\n                            // try the next pth\n                            continue nextPath;\n                        }\n                    }\n                    // found a full path that matches.\n                    // this will also work for an empty ALT as the loop will be skipped\n                    return t;\n                }\n                // none of the paths for the current alternative matched\n                // try the next alternative\n            }\n            // none of the alternatives could be matched\n            return undefined;\n        };\n    }\n}\nexport function buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled) {\n    const areAllOneTokenLookahead = every(alt, (currPath) => {\n        return currPath.length === 1;\n    });\n    const numOfPaths = alt.length;\n    // optimized (common) case of all the lookaheads paths requiring only\n    // a single token lookahead.\n    if (areAllOneTokenLookahead && !dynamicTokensEnabled) {\n        const singleTokensTypes = flatten(alt);\n        if (singleTokensTypes.length === 1 &&\n            isEmpty(singleTokensTypes[0].categoryMatches)) {\n            const expectedTokenType = singleTokensTypes[0];\n            const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n            return function () {\n                return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n            };\n        }\n        else {\n            const choiceToAlt = reduce(singleTokensTypes, (result, currTokType, idx) => {\n                result[currTokType.tokenTypeIdx] = true;\n                forEach(currTokType.categoryMatches, (currExtendingType) => {\n                    result[currExtendingType] = true;\n                });\n                return result;\n            }, []);\n            return function () {\n                const nextToken = this.LA(1);\n                return choiceToAlt[nextToken.tokenTypeIdx] === true;\n            };\n        }\n    }\n    else {\n        return function () {\n            nextPath: for (let j = 0; j < numOfPaths; j++) {\n                const currPath = alt[j];\n                const currPathLength = currPath.length;\n                for (let i = 0; i < currPathLength; i++) {\n                    const nextToken = this.LA(i + 1);\n                    if (tokenMatcher(nextToken, currPath[i]) === false) {\n                        // mismatch in current path\n                        // try the next pth\n                        continue nextPath;\n                    }\n                }\n                // found a full path that matches.\n                return true;\n            }\n            // none of the paths matched\n            return false;\n        };\n    }\n}\nclass RestDefinitionFinderWalker extends RestWalker {\n    constructor(topProd, targetOccurrence, targetProdType) {\n        super();\n        this.topProd = topProd;\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n    }\n    startWalking() {\n        this.walk(this.topProd);\n        return this.restDef;\n    }\n    checkIsTarget(node, expectedProdType, currRest, prevRest) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdType) {\n            this.restDef = currRest.concat(prevRest);\n            return true;\n        }\n        // performance optimization, do not iterate over the entire Grammar ast after we have found the target\n        return false;\n    }\n    walkOption(optionProd, currRest, prevRest) {\n        if (!this.checkIsTarget(optionProd, PROD_TYPE.OPTION, currRest, prevRest)) {\n            super.walkOption(optionProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOne(atLeastOneProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneProd, PROD_TYPE.REPETITION_MANDATORY, currRest, prevRest)) {\n            super.walkOption(atLeastOneProd, currRest, prevRest);\n        }\n    }\n    walkAtLeastOneSep(atLeastOneSepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(atLeastOneSepProd, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(atLeastOneSepProd, currRest, prevRest);\n        }\n    }\n    walkMany(manyProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manyProd, PROD_TYPE.REPETITION, currRest, prevRest)) {\n            super.walkOption(manyProd, currRest, prevRest);\n        }\n    }\n    walkManySep(manySepProd, currRest, prevRest) {\n        if (!this.checkIsTarget(manySepProd, PROD_TYPE.REPETITION_WITH_SEPARATOR, currRest, prevRest)) {\n            super.walkOption(manySepProd, currRest, prevRest);\n        }\n    }\n}\n/**\n * Returns the definition of a target production in a top level level rule.\n */\nclass InsideDefinitionFinderVisitor extends GAstVisitor {\n    constructor(targetOccurrence, targetProdType, targetRef) {\n        super();\n        this.targetOccurrence = targetOccurrence;\n        this.targetProdType = targetProdType;\n        this.targetRef = targetRef;\n        this.result = [];\n    }\n    checkIsTarget(node, expectedProdName) {\n        if (node.idx === this.targetOccurrence &&\n            this.targetProdType === expectedProdName &&\n            (this.targetRef === undefined || node === this.targetRef)) {\n            this.result = node.definition;\n        }\n    }\n    visitOption(node) {\n        this.checkIsTarget(node, PROD_TYPE.OPTION);\n    }\n    visitRepetition(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION);\n    }\n    visitRepetitionMandatory(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY);\n    }\n    visitRepetitionMandatoryWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR);\n    }\n    visitRepetitionWithSeparator(node) {\n        this.checkIsTarget(node, PROD_TYPE.REPETITION_WITH_SEPARATOR);\n    }\n    visitAlternation(node) {\n        this.checkIsTarget(node, PROD_TYPE.ALTERNATION);\n    }\n}\nfunction initializeArrayOfArrays(size) {\n    const result = new Array(size);\n    for (let i = 0; i < size; i++) {\n        result[i] = [];\n    }\n    return result;\n}\n/**\n * A sort of hash function between a Path in the grammar and a string.\n * Note that this returns multiple \"hashes\" to support the scenario of token categories.\n * -  A single path with categories may match multiple **actual** paths.\n */\nfunction pathToHashKeys(path) {\n    let keys = [\"\"];\n    for (let i = 0; i < path.length; i++) {\n        const tokType = path[i];\n        const longerKeys = [];\n        for (let j = 0; j < keys.length; j++) {\n            const currShorterKey = keys[j];\n            longerKeys.push(currShorterKey + \"_\" + tokType.tokenTypeIdx);\n            for (let t = 0; t < tokType.categoryMatches.length; t++) {\n                const categoriesKeySuffix = \"_\" + tokType.categoryMatches[t];\n                longerKeys.push(currShorterKey + categoriesKeySuffix);\n            }\n        }\n        keys = longerKeys;\n    }\n    return keys;\n}\n/**\n * Imperative style due to being called from a hot spot\n */\nfunction isUniquePrefixHash(altKnownPathsKeys, searchPathKeys, idx) {\n    for (let currAltIdx = 0; currAltIdx < altKnownPathsKeys.length; currAltIdx++) {\n        // We only want to test vs the other alternatives\n        if (currAltIdx === idx) {\n            continue;\n        }\n        const otherAltKnownPathsKeys = altKnownPathsKeys[currAltIdx];\n        for (let searchIdx = 0; searchIdx < searchPathKeys.length; searchIdx++) {\n            const searchKey = searchPathKeys[searchIdx];\n            if (otherAltKnownPathsKeys[searchKey] === true) {\n                return false;\n            }\n        }\n    }\n    // None of the SearchPathKeys were found in any of the other alternatives\n    return true;\n}\nexport function lookAheadSequenceFromAlternatives(altsDefs, k) {\n    const partialAlts = map(altsDefs, (currAlt) => possiblePathsFrom([currAlt], 1));\n    const finalResult = initializeArrayOfArrays(partialAlts.length);\n    const altsHashes = map(partialAlts, (currAltPaths) => {\n        const dict = {};\n        forEach(currAltPaths, (item) => {\n            const keys = pathToHashKeys(item.partialPath);\n            forEach(keys, (currKey) => {\n                dict[currKey] = true;\n            });\n        });\n        return dict;\n    });\n    let newData = partialAlts;\n    // maxLookahead loop\n    for (let pathLength = 1; pathLength <= k; pathLength++) {\n        const currDataset = newData;\n        newData = initializeArrayOfArrays(currDataset.length);\n        // alternatives loop\n        for (let altIdx = 0; altIdx < currDataset.length; altIdx++) {\n            const currAltPathsAndSuffixes = currDataset[altIdx];\n            // paths in current alternative loop\n            for (let currPathIdx = 0; currPathIdx < currAltPathsAndSuffixes.length; currPathIdx++) {\n                const currPathPrefix = currAltPathsAndSuffixes[currPathIdx].partialPath;\n                const suffixDef = currAltPathsAndSuffixes[currPathIdx].suffixDef;\n                const prefixKeys = pathToHashKeys(currPathPrefix);\n                const isUnique = isUniquePrefixHash(altsHashes, prefixKeys, altIdx);\n                // End of the line for this path.\n                if (isUnique || isEmpty(suffixDef) || currPathPrefix.length === k) {\n                    const currAltResult = finalResult[altIdx];\n                    // TODO: Can we implement a containsPath using Maps/Dictionaries?\n                    if (containsPath(currAltResult, currPathPrefix) === false) {\n                        currAltResult.push(currPathPrefix);\n                        // Update all new  keys for the current path.\n                        for (let j = 0; j < prefixKeys.length; j++) {\n                            const currKey = prefixKeys[j];\n                            altsHashes[altIdx][currKey] = true;\n                        }\n                    }\n                }\n                // Expand longer paths\n                else {\n                    const newPartialPathsAndSuffixes = possiblePathsFrom(suffixDef, pathLength + 1, currPathPrefix);\n                    newData[altIdx] = newData[altIdx].concat(newPartialPathsAndSuffixes);\n                    // Update keys for new known paths\n                    forEach(newPartialPathsAndSuffixes, (item) => {\n                        const prefixKeys = pathToHashKeys(item.partialPath);\n                        forEach(prefixKeys, (key) => {\n                            altsHashes[altIdx][key] = true;\n                        });\n                    });\n                }\n            }\n        }\n    }\n    return finalResult;\n}\nexport function getLookaheadPathsForOr(occurrence, ruleGrammar, k, orProd) {\n    const visitor = new InsideDefinitionFinderVisitor(occurrence, PROD_TYPE.ALTERNATION, orProd);\n    ruleGrammar.accept(visitor);\n    return lookAheadSequenceFromAlternatives(visitor.result, k);\n}\nexport function getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, k) {\n    const insideDefVisitor = new InsideDefinitionFinderVisitor(occurrence, prodType);\n    ruleGrammar.accept(insideDefVisitor);\n    const insideDef = insideDefVisitor.result;\n    const afterDefWalker = new RestDefinitionFinderWalker(ruleGrammar, occurrence, prodType);\n    const afterDef = afterDefWalker.startWalking();\n    const insideFlat = new AlternativeGAST({ definition: insideDef });\n    const afterFlat = new AlternativeGAST({ definition: afterDef });\n    return lookAheadSequenceFromAlternatives([insideFlat, afterFlat], k);\n}\nexport function containsPath(alternative, searchPath) {\n    compareOtherPath: for (let i = 0; i < alternative.length; i++) {\n        const otherPath = alternative[i];\n        if (otherPath.length !== searchPath.length) {\n            continue;\n        }\n        for (let j = 0; j < otherPath.length; j++) {\n            const searchTok = searchPath[j];\n            const otherTok = otherPath[j];\n            const matchingTokens = searchTok === otherTok ||\n                otherTok.categoryMatchesMap[searchTok.tokenTypeIdx] !== undefined;\n            if (matchingTokens === false) {\n                continue compareOtherPath;\n            }\n        }\n        return true;\n    }\n    return false;\n}\nexport function isStrictPrefixOfPath(prefix, other) {\n    return (prefix.length < other.length &&\n        every(prefix, (tokType, idx) => {\n            const otherTokType = other[idx];\n            return (tokType === otherTokType ||\n                otherTokType.categoryMatchesMap[tokType.tokenTypeIdx]);\n        }));\n}\nexport function areTokenCategoriesNotUsed(lookAheadPaths) {\n    return every(lookAheadPaths, (singleAltPaths) => every(singleAltPaths, (singlePath) => every(singlePath, (token) => isEmpty(token.categoryMatches))));\n}\n//# sourceMappingURL=lookahead.js.map","import { clone, compact, difference, drop, dropRight, filter, first, flatMap, flatten, forEach, groupBy, includes, isEmpty, map, pickBy, reduce, reject, values, } from \"lodash-es\";\nimport { ParserDefinitionErrorType, } from \"../parser/parser.js\";\nimport { Alternation, Alternative as AlternativeGAST, GAstVisitor, getProductionDslName, isOptionalProd, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Terminal, } from \"@chevrotain/gast\";\nimport { containsPath, getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, getProdType, isStrictPrefixOfPath, } from \"./lookahead.js\";\nimport { nextPossibleTokensAfter } from \"./interpreter.js\";\nimport { tokenStructuredMatcher } from \"../../scan/tokens.js\";\nexport function validateLookahead(options) {\n    const lookaheadValidationErrorMessages = options.lookaheadStrategy.validate({\n        rules: options.rules,\n        tokenTypes: options.tokenTypes,\n        grammarName: options.grammarName,\n    });\n    return map(lookaheadValidationErrorMessages, (errorMessage) => (Object.assign({ type: ParserDefinitionErrorType.CUSTOM_LOOKAHEAD_VALIDATION }, errorMessage)));\n}\nexport function validateGrammar(topLevels, tokenTypes, errMsgProvider, grammarName) {\n    const duplicateErrors = flatMap(topLevels, (currTopLevel) => validateDuplicateProductions(currTopLevel, errMsgProvider));\n    const termsNamespaceConflictErrors = checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider);\n    const tooManyAltsErrors = flatMap(topLevels, (curRule) => validateTooManyAlts(curRule, errMsgProvider));\n    const duplicateRulesError = flatMap(topLevels, (curRule) => validateRuleDoesNotAlreadyExist(curRule, topLevels, grammarName, errMsgProvider));\n    return duplicateErrors.concat(termsNamespaceConflictErrors, tooManyAltsErrors, duplicateRulesError);\n}\nfunction validateDuplicateProductions(topLevelRule, errMsgProvider) {\n    const collectorVisitor = new OccurrenceValidationCollector();\n    topLevelRule.accept(collectorVisitor);\n    const allRuleProductions = collectorVisitor.allProductions;\n    const productionGroups = groupBy(allRuleProductions, identifyProductionForDuplicates);\n    const duplicates = pickBy(productionGroups, (currGroup) => {\n        return currGroup.length > 1;\n    });\n    const errors = map(values(duplicates), (currDuplicates) => {\n        const firstProd = first(currDuplicates);\n        const msg = errMsgProvider.buildDuplicateFoundError(topLevelRule, currDuplicates);\n        const dslName = getProductionDslName(firstProd);\n        const defError = {\n            message: msg,\n            type: ParserDefinitionErrorType.DUPLICATE_PRODUCTIONS,\n            ruleName: topLevelRule.name,\n            dslName: dslName,\n            occurrence: firstProd.idx,\n        };\n        const param = getExtraProductionArgument(firstProd);\n        if (param) {\n            defError.parameter = param;\n        }\n        return defError;\n    });\n    return errors;\n}\nexport function identifyProductionForDuplicates(prod) {\n    return `${getProductionDslName(prod)}_#_${prod.idx}_#_${getExtraProductionArgument(prod)}`;\n}\nfunction getExtraProductionArgument(prod) {\n    if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n    }\n    else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n    }\n    else {\n        return \"\";\n    }\n}\nexport class OccurrenceValidationCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitNonTerminal(subrule) {\n        this.allProductions.push(subrule);\n    }\n    visitOption(option) {\n        this.allProductions.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n    visitAlternation(or) {\n        this.allProductions.push(or);\n    }\n    visitTerminal(terminal) {\n        this.allProductions.push(terminal);\n    }\n}\nexport function validateRuleDoesNotAlreadyExist(rule, allRules, className, errMsgProvider) {\n    const errors = [];\n    const occurrences = reduce(allRules, (result, curRule) => {\n        if (curRule.name === rule.name) {\n            return result + 1;\n        }\n        return result;\n    }, 0);\n    if (occurrences > 1) {\n        const errMsg = errMsgProvider.buildDuplicateRuleNameError({\n            topLevelRule: rule,\n            grammarName: className,\n        });\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n            ruleName: rule.name,\n        });\n    }\n    return errors;\n}\n// TODO: is there anyway to get only the rule names of rules inherited from the super grammars?\n// This is not part of the IGrammarErrorProvider because the validation cannot be performed on\n// The grammar structure, only at runtime.\nexport function validateRuleIsOverridden(ruleName, definedRulesNames, className) {\n    const errors = [];\n    let errMsg;\n    if (!includes(definedRulesNames, ruleName)) {\n        errMsg =\n            `Invalid rule override, rule: ->${ruleName}<- cannot be overridden in the grammar: ->${className}<-` +\n                `as it is not defined in any of the super grammars `;\n        errors.push({\n            message: errMsg,\n            type: ParserDefinitionErrorType.INVALID_RULE_OVERRIDE,\n            ruleName: ruleName,\n        });\n    }\n    return errors;\n}\nexport function validateNoLeftRecursion(topRule, currRule, errMsgProvider, path = []) {\n    const errors = [];\n    const nextNonTerminals = getFirstNoneTerminal(currRule.definition);\n    if (isEmpty(nextNonTerminals)) {\n        return [];\n    }\n    else {\n        const ruleName = topRule.name;\n        const foundLeftRecursion = includes(nextNonTerminals, topRule);\n        if (foundLeftRecursion) {\n            errors.push({\n                message: errMsgProvider.buildLeftRecursionError({\n                    topLevelRule: topRule,\n                    leftRecursionPath: path,\n                }),\n                type: ParserDefinitionErrorType.LEFT_RECURSION,\n                ruleName: ruleName,\n            });\n        }\n        // we are only looking for cyclic paths leading back to the specific topRule\n        // other cyclic paths are ignored, we still need this difference to avoid infinite loops...\n        const validNextSteps = difference(nextNonTerminals, path.concat([topRule]));\n        const errorsFromNextSteps = flatMap(validNextSteps, (currRefRule) => {\n            const newPath = clone(path);\n            newPath.push(currRefRule);\n            return validateNoLeftRecursion(topRule, currRefRule, errMsgProvider, newPath);\n        });\n        return errors.concat(errorsFromNextSteps);\n    }\n}\nexport function getFirstNoneTerminal(definition) {\n    let result = [];\n    if (isEmpty(definition)) {\n        return result;\n    }\n    const firstProd = first(definition);\n    /* istanbul ignore else */\n    if (firstProd instanceof NonTerminal) {\n        result.push(firstProd.referencedRule);\n    }\n    else if (firstProd instanceof AlternativeGAST ||\n        firstProd instanceof Option ||\n        firstProd instanceof RepetitionMandatory ||\n        firstProd instanceof RepetitionMandatoryWithSeparator ||\n        firstProd instanceof RepetitionWithSeparator ||\n        firstProd instanceof Repetition) {\n        result = result.concat(getFirstNoneTerminal(firstProd.definition));\n    }\n    else if (firstProd instanceof Alternation) {\n        // each sub definition in alternation is a FLAT\n        result = flatten(map(firstProd.definition, (currSubDef) => getFirstNoneTerminal(currSubDef.definition)));\n    }\n    else if (firstProd instanceof Terminal) {\n        // nothing to see, move along\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n    const isFirstOptional = isOptionalProd(firstProd);\n    const hasMore = definition.length > 1;\n    if (isFirstOptional && hasMore) {\n        const rest = drop(definition);\n        return result.concat(getFirstNoneTerminal(rest));\n    }\n    else {\n        return result;\n    }\n}\nclass OrCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.alternations = [];\n    }\n    visitAlternation(node) {\n        this.alternations.push(node);\n    }\n}\nexport function validateEmptyOrAlternative(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        const exceptLast = dropRight(currOr.definition);\n        return flatMap(exceptLast, (currAlternative, currAltIdx) => {\n            const possibleFirstInAlt = nextPossibleTokensAfter([currAlternative], [], tokenStructuredMatcher, 1);\n            if (isEmpty(possibleFirstInAlt)) {\n                return [\n                    {\n                        message: errMsgProvider.buildEmptyAlternationError({\n                            topLevelRule: topLevelRule,\n                            alternation: currOr,\n                            emptyChoiceIdx: currAltIdx,\n                        }),\n                        type: ParserDefinitionErrorType.NONE_LAST_EMPTY_ALT,\n                        ruleName: topLevelRule.name,\n                        occurrence: currOr.idx,\n                        alternative: currAltIdx + 1,\n                    },\n                ];\n            }\n            else {\n                return [];\n            }\n        });\n    });\n    return errors;\n}\nexport function validateAmbiguousAlternationAlternatives(topLevelRule, globalMaxLookahead, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    let ors = orCollector.alternations;\n    // New Handling of ignoring ambiguities\n    // - https://github.com/chevrotain/chevrotain/issues/869\n    ors = reject(ors, (currOr) => currOr.ignoreAmbiguities === true);\n    const errors = flatMap(ors, (currOr) => {\n        const currOccurrence = currOr.idx;\n        const actualMaxLookahead = currOr.maxLookahead || globalMaxLookahead;\n        const alternatives = getLookaheadPathsForOr(currOccurrence, topLevelRule, actualMaxLookahead, currOr);\n        const altsAmbiguityErrors = checkAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        const altsPrefixAmbiguityErrors = checkPrefixAlternativesAmbiguities(alternatives, currOr, topLevelRule, errMsgProvider);\n        return altsAmbiguityErrors.concat(altsPrefixAmbiguityErrors);\n    });\n    return errors;\n}\nexport class RepetitionCollector extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.allProductions = [];\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.allProductions.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.allProductions.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.allProductions.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.allProductions.push(many);\n    }\n}\nexport function validateTooManyAlts(topLevelRule, errMsgProvider) {\n    const orCollector = new OrCollector();\n    topLevelRule.accept(orCollector);\n    const ors = orCollector.alternations;\n    const errors = flatMap(ors, (currOr) => {\n        if (currOr.definition.length > 255) {\n            return [\n                {\n                    message: errMsgProvider.buildTooManyAlternativesError({\n                        topLevelRule: topLevelRule,\n                        alternation: currOr,\n                    }),\n                    type: ParserDefinitionErrorType.TOO_MANY_ALTS,\n                    ruleName: topLevelRule.name,\n                    occurrence: currOr.idx,\n                },\n            ];\n        }\n        else {\n            return [];\n        }\n    });\n    return errors;\n}\nexport function validateSomeNonEmptyLookaheadPath(topLevelRules, maxLookahead, errMsgProvider) {\n    const errors = [];\n    forEach(topLevelRules, (currTopRule) => {\n        const collectorVisitor = new RepetitionCollector();\n        currTopRule.accept(collectorVisitor);\n        const allRuleProductions = collectorVisitor.allProductions;\n        forEach(allRuleProductions, (currProd) => {\n            const prodType = getProdType(currProd);\n            const actualMaxLookahead = currProd.maxLookahead || maxLookahead;\n            const currOccurrence = currProd.idx;\n            const paths = getLookaheadPathsForOptionalProd(currOccurrence, currTopRule, prodType, actualMaxLookahead);\n            const pathsInsideProduction = paths[0];\n            if (isEmpty(flatten(pathsInsideProduction))) {\n                const errMsg = errMsgProvider.buildEmptyRepetitionError({\n                    topLevelRule: currTopRule,\n                    repetition: currProd,\n                });\n                errors.push({\n                    message: errMsg,\n                    type: ParserDefinitionErrorType.NO_NON_EMPTY_LOOKAHEAD,\n                    ruleName: currTopRule.name,\n                });\n            }\n        });\n    });\n    return errors;\n}\nfunction checkAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    const foundAmbiguousPaths = [];\n    const identicalAmbiguities = reduce(alternatives, (result, currAlt, currAltIdx) => {\n        // ignore (skip) ambiguities with this alternative\n        if (alternation.definition[currAltIdx].ignoreAmbiguities === true) {\n            return result;\n        }\n        forEach(currAlt, (currPath) => {\n            const altsCurrPathAppearsIn = [currAltIdx];\n            forEach(alternatives, (currOtherAlt, currOtherAltIdx) => {\n                if (currAltIdx !== currOtherAltIdx &&\n                    containsPath(currOtherAlt, currPath) &&\n                    // ignore (skip) ambiguities with this \"other\" alternative\n                    alternation.definition[currOtherAltIdx].ignoreAmbiguities !== true) {\n                    altsCurrPathAppearsIn.push(currOtherAltIdx);\n                }\n            });\n            if (altsCurrPathAppearsIn.length > 1 &&\n                !containsPath(foundAmbiguousPaths, currPath)) {\n                foundAmbiguousPaths.push(currPath);\n                result.push({\n                    alts: altsCurrPathAppearsIn,\n                    path: currPath,\n                });\n            }\n        });\n        return result;\n    }, []);\n    const currErrors = map(identicalAmbiguities, (currAmbDescriptor) => {\n        const ambgIndices = map(currAmbDescriptor.alts, (currAltIdx) => currAltIdx + 1);\n        const currMessage = errMsgProvider.buildAlternationAmbiguityError({\n            topLevelRule: rule,\n            alternation: alternation,\n            ambiguityIndices: ambgIndices,\n            prefixPath: currAmbDescriptor.path,\n        });\n        return {\n            message: currMessage,\n            type: ParserDefinitionErrorType.AMBIGUOUS_ALTS,\n            ruleName: rule.name,\n            occurrence: alternation.idx,\n            alternatives: currAmbDescriptor.alts,\n        };\n    });\n    return currErrors;\n}\nexport function checkPrefixAlternativesAmbiguities(alternatives, alternation, rule, errMsgProvider) {\n    // flatten\n    const pathsAndIndices = reduce(alternatives, (result, currAlt, idx) => {\n        const currPathsAndIdx = map(currAlt, (currPath) => {\n            return { idx: idx, path: currPath };\n        });\n        return result.concat(currPathsAndIdx);\n    }, []);\n    const errors = compact(flatMap(pathsAndIndices, (currPathAndIdx) => {\n        const alternativeGast = alternation.definition[currPathAndIdx.idx];\n        // ignore (skip) ambiguities with this alternative\n        if (alternativeGast.ignoreAmbiguities === true) {\n            return [];\n        }\n        const targetIdx = currPathAndIdx.idx;\n        const targetPath = currPathAndIdx.path;\n        const prefixAmbiguitiesPathsAndIndices = filter(pathsAndIndices, (searchPathAndIdx) => {\n            // prefix ambiguity can only be created from lower idx (higher priority) path\n            return (\n            // ignore (skip) ambiguities with this \"other\" alternative\n            alternation.definition[searchPathAndIdx.idx].ignoreAmbiguities !==\n                true &&\n                searchPathAndIdx.idx < targetIdx &&\n                // checking for strict prefix because identical lookaheads\n                // will be be detected using a different validation.\n                isStrictPrefixOfPath(searchPathAndIdx.path, targetPath));\n        });\n        const currPathPrefixErrors = map(prefixAmbiguitiesPathsAndIndices, (currAmbPathAndIdx) => {\n            const ambgIndices = [currAmbPathAndIdx.idx + 1, targetIdx + 1];\n            const occurrence = alternation.idx === 0 ? \"\" : alternation.idx;\n            const message = errMsgProvider.buildAlternationPrefixAmbiguityError({\n                topLevelRule: rule,\n                alternation: alternation,\n                ambiguityIndices: ambgIndices,\n                prefixPath: currAmbPathAndIdx.path,\n            });\n            return {\n                message: message,\n                type: ParserDefinitionErrorType.AMBIGUOUS_PREFIX_ALTS,\n                ruleName: rule.name,\n                occurrence: occurrence,\n                alternatives: ambgIndices,\n            };\n        });\n        return currPathPrefixErrors;\n    }));\n    return errors;\n}\nfunction checkTerminalAndNoneTerminalsNameSpace(topLevels, tokenTypes, errMsgProvider) {\n    const errors = [];\n    const tokenNames = map(tokenTypes, (currToken) => currToken.name);\n    forEach(topLevels, (currRule) => {\n        const currRuleName = currRule.name;\n        if (includes(tokenNames, currRuleName)) {\n            const errMsg = errMsgProvider.buildNamespaceConflictError(currRule);\n            errors.push({\n                message: errMsg,\n                type: ParserDefinitionErrorType.CONFLICT_TOKENS_RULES_NAMESPACE,\n                ruleName: currRuleName,\n            });\n        }\n    });\n    return errors;\n}\n//# sourceMappingURL=checks.js.map","import { includes } from \"lodash-es\";\nconst MISMATCHED_TOKEN_EXCEPTION = \"MismatchedTokenException\";\nconst NO_VIABLE_ALT_EXCEPTION = \"NoViableAltException\";\nconst EARLY_EXIT_EXCEPTION = \"EarlyExitException\";\nconst NOT_ALL_INPUT_PARSED_EXCEPTION = \"NotAllInputParsedException\";\nconst RECOGNITION_EXCEPTION_NAMES = [\n    MISMATCHED_TOKEN_EXCEPTION,\n    NO_VIABLE_ALT_EXCEPTION,\n    EARLY_EXIT_EXCEPTION,\n    NOT_ALL_INPUT_PARSED_EXCEPTION,\n];\nObject.freeze(RECOGNITION_EXCEPTION_NAMES);\n// hacks to bypass no support for custom Errors in javascript/typescript\nexport function isRecognitionException(error) {\n    // can't do instanceof on hacked custom js exceptions\n    return includes(RECOGNITION_EXCEPTION_NAMES, error.name);\n}\nclass RecognitionException extends Error {\n    constructor(message, token) {\n        super(message);\n        this.token = token;\n        this.resyncedTokens = [];\n        // fix prototype chain when typescript target is ES5\n        Object.setPrototypeOf(this, new.target.prototype);\n        /* istanbul ignore next - V8 workaround to remove constructor from stacktrace when typescript target is ES5 */\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    }\n}\nexport class MismatchedTokenException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = MISMATCHED_TOKEN_EXCEPTION;\n    }\n}\nexport class NoViableAltException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = NO_VIABLE_ALT_EXCEPTION;\n    }\n}\nexport class NotAllInputParsedException extends RecognitionException {\n    constructor(message, token) {\n        super(message, token);\n        this.name = NOT_ALL_INPUT_PARSED_EXCEPTION;\n    }\n}\nexport class EarlyExitException extends RecognitionException {\n    constructor(message, token, previousToken) {\n        super(message, token);\n        this.previousToken = previousToken;\n        this.name = EARLY_EXIT_EXCEPTION;\n    }\n}\n//# sourceMappingURL=exceptions_public.js.map","import { createTokenInstance, EOF, tokenMatcher, } from \"../../../scan/tokens_public.js\";\nimport { clone, dropRight, find, flatten, has, includes, isEmpty, map, } from \"lodash-es\";\nimport { MismatchedTokenException } from \"../../exceptions_public.js\";\nimport { IN } from \"../../constants.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nexport const EOF_FOLLOW_KEY = {};\nexport const IN_RULE_RECOVERY_EXCEPTION = \"InRuleRecoveryException\";\nexport class InRuleRecoveryException extends Error {\n    constructor(message) {\n        super(message);\n        this.name = IN_RULE_RECOVERY_EXCEPTION;\n    }\n}\n/**\n * This trait is responsible for the error recovery and fault tolerant logic\n */\nexport class Recoverable {\n    initRecoverable(config) {\n        this.firstAfterRepMap = {};\n        this.resyncFollows = {};\n        this.recoveryEnabled = has(config, \"recoveryEnabled\")\n            ? config.recoveryEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.recoveryEnabled;\n        // performance optimization, NOOP will be inlined which\n        // effectively means that this optional feature does not exist\n        // when not used.\n        if (this.recoveryEnabled) {\n            this.attemptInRepetitionRecovery = attemptInRepetitionRecovery;\n        }\n    }\n    getTokenToInsert(tokType) {\n        const tokToInsert = createTokenInstance(tokType, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\n        tokToInsert.isInsertedInRecovery = true;\n        return tokToInsert;\n    }\n    canTokenTypeBeInsertedInRecovery(tokType) {\n        return true;\n    }\n    canTokenTypeBeDeletedInRecovery(tokType) {\n        return true;\n    }\n    tryInRepetitionRecovery(grammarRule, grammarRuleArgs, lookAheadFunc, expectedTokType) {\n        // TODO: can the resyncTokenType be cached?\n        const reSyncTokType = this.findReSyncTokenType();\n        const savedLexerState = this.exportLexerState();\n        const resyncedTokens = [];\n        let passedResyncPoint = false;\n        const nextTokenWithoutResync = this.LA(1);\n        let currToken = this.LA(1);\n        const generateErrorMessage = () => {\n            const previousToken = this.LA(0);\n            // we are preemptively re-syncing before an error has been detected, therefor we must reproduce\n            // the error that would have been thrown\n            const msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: expectedTokType,\n                actual: nextTokenWithoutResync,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            const error = new MismatchedTokenException(msg, nextTokenWithoutResync, this.LA(0));\n            // the first token here will be the original cause of the error, this is not part of the resyncedTokens property.\n            error.resyncedTokens = dropRight(resyncedTokens);\n            this.SAVE_ERROR(error);\n        };\n        while (!passedResyncPoint) {\n            // re-synced to a point where we can safely exit the repetition/\n            if (this.tokenMatcher(currToken, expectedTokType)) {\n                generateErrorMessage();\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (lookAheadFunc.call(this)) {\n                // we skipped enough tokens so we can resync right back into another iteration of the repetition grammar rule\n                generateErrorMessage();\n                // recursive invocation in other to support multiple re-syncs in the same top level repetition grammar rule\n                grammarRule.apply(this, grammarRuleArgs);\n                return; // must return here to avoid reverting the inputIdx\n            }\n            else if (this.tokenMatcher(currToken, reSyncTokType)) {\n                passedResyncPoint = true;\n            }\n            else {\n                currToken = this.SKIP_TOKEN();\n                this.addToResyncTokens(currToken, resyncedTokens);\n            }\n        }\n        // we were unable to find a CLOSER point to resync inside the Repetition, reset the state.\n        // The parsing exception we were trying to prevent will happen in the NEXT parsing step. it may be handled by\n        // \"between rules\" resync recovery later in the flow.\n        this.importLexerState(savedLexerState);\n    }\n    shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck) {\n        // Edge case of arriving from a MANY repetition which is stuck\n        // Attempting recovery in this case could cause an infinite loop\n        if (notStuck === false) {\n            return false;\n        }\n        // no need to recover, next token is what we expect...\n        if (this.tokenMatcher(this.LA(1), expectTokAfterLastMatch)) {\n            return false;\n        }\n        // error recovery is disabled during backtracking as it can make the parser ignore a valid grammar path\n        // and prefer some backtracking path that includes recovered errors.\n        if (this.isBackTracking()) {\n            return false;\n        }\n        // if we can perform inRule recovery (single token insertion or deletion) we always prefer that recovery algorithm\n        // because if it works, it makes the least amount of changes to the input stream (greedy algorithm)\n        //noinspection RedundantIfStatementJS\n        if (this.canPerformInRuleRecovery(expectTokAfterLastMatch, this.getFollowsForInRuleRecovery(expectTokAfterLastMatch, nextTokIdx))) {\n            return false;\n        }\n        return true;\n    }\n    // Error Recovery functionality\n    getFollowsForInRuleRecovery(tokType, tokIdxInRule) {\n        const grammarPath = this.getCurrentGrammarPath(tokType, tokIdxInRule);\n        const follows = this.getNextPossibleTokenTypes(grammarPath);\n        return follows;\n    }\n    tryInRuleRecovery(expectedTokType, follows) {\n        if (this.canRecoverWithSingleTokenInsertion(expectedTokType, follows)) {\n            const tokToInsert = this.getTokenToInsert(expectedTokType);\n            return tokToInsert;\n        }\n        if (this.canRecoverWithSingleTokenDeletion(expectedTokType)) {\n            const nextTok = this.SKIP_TOKEN();\n            this.consumeToken();\n            return nextTok;\n        }\n        throw new InRuleRecoveryException(\"sad sad panda\");\n    }\n    canPerformInRuleRecovery(expectedToken, follows) {\n        return (this.canRecoverWithSingleTokenInsertion(expectedToken, follows) ||\n            this.canRecoverWithSingleTokenDeletion(expectedToken));\n    }\n    canRecoverWithSingleTokenInsertion(expectedTokType, follows) {\n        if (!this.canTokenTypeBeInsertedInRecovery(expectedTokType)) {\n            return false;\n        }\n        // must know the possible following tokens to perform single token insertion\n        if (isEmpty(follows)) {\n            return false;\n        }\n        const mismatchedTok = this.LA(1);\n        const isMisMatchedTokInFollows = find(follows, (possibleFollowsTokType) => {\n            return this.tokenMatcher(mismatchedTok, possibleFollowsTokType);\n        }) !== undefined;\n        return isMisMatchedTokInFollows;\n    }\n    canRecoverWithSingleTokenDeletion(expectedTokType) {\n        if (!this.canTokenTypeBeDeletedInRecovery(expectedTokType)) {\n            return false;\n        }\n        const isNextTokenWhatIsExpected = this.tokenMatcher(this.LA(2), expectedTokType);\n        return isNextTokenWhatIsExpected;\n    }\n    isInCurrentRuleReSyncSet(tokenTypeIdx) {\n        const followKey = this.getCurrFollowKey();\n        const currentRuleReSyncSet = this.getFollowSetFromFollowKey(followKey);\n        return includes(currentRuleReSyncSet, tokenTypeIdx);\n    }\n    findReSyncTokenType() {\n        const allPossibleReSyncTokTypes = this.flattenFollowSet();\n        // this loop will always terminate as EOF is always in the follow stack and also always (virtually) in the input\n        let nextToken = this.LA(1);\n        let k = 2;\n        while (true) {\n            const foundMatch = find(allPossibleReSyncTokTypes, (resyncTokType) => {\n                const canMatch = tokenMatcher(nextToken, resyncTokType);\n                return canMatch;\n            });\n            if (foundMatch !== undefined) {\n                return foundMatch;\n            }\n            nextToken = this.LA(k);\n            k++;\n        }\n    }\n    getCurrFollowKey() {\n        // the length is at least one as we always add the ruleName to the stack before invoking the rule.\n        if (this.RULE_STACK.length === 1) {\n            return EOF_FOLLOW_KEY;\n        }\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        const currRuleIdx = this.getLastExplicitRuleOccurrenceIndex();\n        const prevRuleShortName = this.getPreviousExplicitRuleShortName();\n        return {\n            ruleName: this.shortRuleNameToFullName(currRuleShortName),\n            idxInCallingRule: currRuleIdx,\n            inRule: this.shortRuleNameToFullName(prevRuleShortName),\n        };\n    }\n    buildFullFollowKeyStack() {\n        const explicitRuleStack = this.RULE_STACK;\n        const explicitOccurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return map(explicitRuleStack, (ruleName, idx) => {\n            if (idx === 0) {\n                return EOF_FOLLOW_KEY;\n            }\n            return {\n                ruleName: this.shortRuleNameToFullName(ruleName),\n                idxInCallingRule: explicitOccurrenceStack[idx],\n                inRule: this.shortRuleNameToFullName(explicitRuleStack[idx - 1]),\n            };\n        });\n    }\n    flattenFollowSet() {\n        const followStack = map(this.buildFullFollowKeyStack(), (currKey) => {\n            return this.getFollowSetFromFollowKey(currKey);\n        });\n        return flatten(followStack);\n    }\n    getFollowSetFromFollowKey(followKey) {\n        if (followKey === EOF_FOLLOW_KEY) {\n            return [EOF];\n        }\n        const followName = followKey.ruleName + followKey.idxInCallingRule + IN + followKey.inRule;\n        return this.resyncFollows[followName];\n    }\n    // It does not make any sense to include a virtual EOF token in the list of resynced tokens\n    // as EOF does not really exist and thus does not contain any useful information (line/column numbers)\n    addToResyncTokens(token, resyncTokens) {\n        if (!this.tokenMatcher(token, EOF)) {\n            resyncTokens.push(token);\n        }\n        return resyncTokens;\n    }\n    reSyncTo(tokType) {\n        const resyncedTokens = [];\n        let nextTok = this.LA(1);\n        while (this.tokenMatcher(nextTok, tokType) === false) {\n            nextTok = this.SKIP_TOKEN();\n            this.addToResyncTokens(nextTok, resyncedTokens);\n        }\n        // the last token is not part of the error.\n        return dropRight(resyncedTokens);\n    }\n    attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n        // by default this is a NO-OP\n        // The actual implementation is with the function(not method) below\n    }\n    getCurrentGrammarPath(tokType, tokIdxInRule) {\n        const pathRuleStack = this.getHumanReadableRuleStack();\n        const pathOccurrenceStack = clone(this.RULE_OCCURRENCE_STACK);\n        const grammarPath = {\n            ruleStack: pathRuleStack,\n            occurrenceStack: pathOccurrenceStack,\n            lastTok: tokType,\n            lastTokOccurrence: tokIdxInRule,\n        };\n        return grammarPath;\n    }\n    getHumanReadableRuleStack() {\n        return map(this.RULE_STACK, (currShortName) => this.shortRuleNameToFullName(currShortName));\n    }\n}\nexport function attemptInRepetitionRecovery(prodFunc, args, lookaheadFunc, dslMethodIdx, prodOccurrence, nextToksWalker, notStuck) {\n    const key = this.getKeyForAutomaticLookahead(dslMethodIdx, prodOccurrence);\n    let firstAfterRepInfo = this.firstAfterRepMap[key];\n    if (firstAfterRepInfo === undefined) {\n        const currRuleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[currRuleName];\n        const walker = new nextToksWalker(ruleGrammar, prodOccurrence);\n        firstAfterRepInfo = walker.startWalking();\n        this.firstAfterRepMap[key] = firstAfterRepInfo;\n    }\n    let expectTokAfterLastMatch = firstAfterRepInfo.token;\n    let nextTokIdx = firstAfterRepInfo.occurrence;\n    const isEndOfRule = firstAfterRepInfo.isEndOfRule;\n    // special edge case of a TOP most repetition after which the input should END.\n    // this will force an attempt for inRule recovery in that scenario.\n    if (this.RULE_STACK.length === 1 &&\n        isEndOfRule &&\n        expectTokAfterLastMatch === undefined) {\n        expectTokAfterLastMatch = EOF;\n        nextTokIdx = 1;\n    }\n    // We don't have anything to re-sync to...\n    // this condition was extracted from `shouldInRepetitionRecoveryBeTried` to act as a type-guard\n    if (expectTokAfterLastMatch === undefined || nextTokIdx === undefined) {\n        return;\n    }\n    if (this.shouldInRepetitionRecoveryBeTried(expectTokAfterLastMatch, nextTokIdx, notStuck)) {\n        // TODO: performance optimization: instead of passing the original args here, we modify\n        // the args param (or create a new one) and make sure the lookahead func is explicitly provided\n        // to avoid searching the cache for it once more.\n        this.tryInRepetitionRecovery(prodFunc, args, lookaheadFunc, expectTokAfterLastMatch);\n    }\n}\n//# sourceMappingURL=recoverable.js.map","// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport const BITS_FOR_METHOD_TYPE = 4;\nexport const BITS_FOR_OCCURRENCE_IDX = 8;\nexport const BITS_FOR_RULE_IDX = 12;\n// TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\nexport const BITS_FOR_ALT_IDX = 8;\n// short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\nexport const OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport const OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport const MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport const AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n// this actually returns a number, but it is always used as a string (object prop key)\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n    return occurrence | dslMethodIdx | ruleIdx;\n}\nconst BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;\n//# sourceMappingURL=keys.js.map","import { flatMap, isEmpty } from \"lodash-es\";\nimport { defaultGrammarValidatorErrorProvider } from \"../errors_public.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser/parser.js\";\nimport { validateAmbiguousAlternationAlternatives, validateEmptyOrAlternative, validateNoLeftRecursion, validateSomeNonEmptyLookaheadPath, } from \"./checks.js\";\nimport { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, getProdType, } from \"./lookahead.js\";\nexport class LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        this.maxLookahead =\n            (_a = options === null || options === void 0 ? void 0 : options.maxLookahead) !== null && _a !== void 0 ? _a : DEFAULT_PARSER_CONFIG.maxLookahead;\n    }\n    validate(options) {\n        const leftRecursionErrors = this.validateNoLeftRecursion(options.rules);\n        if (isEmpty(leftRecursionErrors)) {\n            const emptyAltErrors = this.validateEmptyOrAlternatives(options.rules);\n            const ambiguousAltsErrors = this.validateAmbiguousAlternationAlternatives(options.rules, this.maxLookahead);\n            const emptyRepetitionErrors = this.validateSomeNonEmptyLookaheadPath(options.rules, this.maxLookahead);\n            const allErrors = [\n                ...leftRecursionErrors,\n                ...emptyAltErrors,\n                ...ambiguousAltsErrors,\n                ...emptyRepetitionErrors,\n            ];\n            return allErrors;\n        }\n        return leftRecursionErrors;\n    }\n    validateNoLeftRecursion(rules) {\n        return flatMap(rules, (currTopRule) => validateNoLeftRecursion(currTopRule, currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateEmptyOrAlternatives(rules) {\n        return flatMap(rules, (currTopRule) => validateEmptyOrAlternative(currTopRule, defaultGrammarValidatorErrorProvider));\n    }\n    validateAmbiguousAlternationAlternatives(rules, maxLookahead) {\n        return flatMap(rules, (currTopRule) => validateAmbiguousAlternationAlternatives(currTopRule, maxLookahead, defaultGrammarValidatorErrorProvider));\n    }\n    validateSomeNonEmptyLookaheadPath(rules, maxLookahead) {\n        return validateSomeNonEmptyLookaheadPath(rules, maxLookahead, defaultGrammarValidatorErrorProvider);\n    }\n    buildLookaheadForAlternation(options) {\n        return buildLookaheadFuncForOr(options.prodOccurrence, options.rule, options.maxLookahead, options.hasPredicates, options.dynamicTokensEnabled, buildAlternativesLookAheadFunc);\n    }\n    buildLookaheadForOptional(options) {\n        return buildLookaheadFuncForOptionalProd(options.prodOccurrence, options.rule, options.maxLookahead, options.dynamicTokensEnabled, getProdType(options.prodType), buildSingleAlternativeLookaheadFunction);\n    }\n}\n//# sourceMappingURL=llk_lookahead.js.map","import { forEach, has } from \"lodash-es\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { GAstVisitor, getProductionDslName, } from \"@chevrotain/gast\";\nimport { LLkLookaheadStrategy } from \"../../grammar/llk_lookahead.js\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nexport class LooksAhead {\n    initLooksAhead(config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        this.lookaheadStrategy = has(config, \"lookaheadStrategy\")\n            ? config.lookaheadStrategy // assumes end user provides the correct config value/type\n            : new LLkLookaheadStrategy({ maxLookahead: this.maxLookahead });\n        this.lookAheadFuncsCache = new Map();\n    }\n    preComputeLookaheadFunctions(rules) {\n        forEach(rules, (currRule) => {\n            this.TRACE_INIT(`${currRule.name} Rule Lookahead`, () => {\n                const { alternation, repetition, option, repetitionMandatory, repetitionMandatoryWithSeparator, repetitionWithSeparator, } = collectMethods(currRule);\n                forEach(alternation, (currProd) => {\n                    const prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    this.TRACE_INIT(`${getProductionDslName(currProd)}${prodIdx}`, () => {\n                        const laFunc = this.lookaheadStrategy.buildLookaheadForAlternation({\n                            prodOccurrence: currProd.idx,\n                            rule: currRule,\n                            maxLookahead: currProd.maxLookahead || this.maxLookahead,\n                            hasPredicates: currProd.hasPredicates,\n                            dynamicTokensEnabled: this.dynamicTokensEnabled,\n                        });\n                        const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, \"Repetition\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, \"Option\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, \"RepetitionMandatory\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, \"RepetitionMandatoryWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, (currProd) => {\n                    this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, \"RepetitionWithSeparator\", currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    }\n    computeLookaheadFunc(rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        this.TRACE_INIT(`${dslMethodName}${prodOccurrence === 0 ? \"\" : prodOccurrence}`, () => {\n            const laFunc = this.lookaheadStrategy.buildLookaheadForOptional({\n                prodOccurrence,\n                rule,\n                maxLookahead: prodMaxLookahead || this.maxLookahead,\n                dynamicTokensEnabled: this.dynamicTokensEnabled,\n                prodType,\n            });\n            const key = getKeyForAutomaticLookahead(this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            this.setLaFuncCache(key, laFunc);\n        });\n    }\n    // this actually returns a number, but it is always used as a string (object prop key)\n    getKeyForAutomaticLookahead(dslMethodIdx, occurrence) {\n        const currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    }\n    getLaFuncFromCache(key) {\n        return this.lookAheadFuncsCache.get(key);\n    }\n    /* istanbul ignore next */\n    setLaFuncCache(key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    }\n}\nclass DslMethodsCollectorVisitor extends GAstVisitor {\n    constructor() {\n        super(...arguments);\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    reset() {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: [],\n        };\n    }\n    visitOption(option) {\n        this.dslMethods.option.push(option);\n    }\n    visitRepetitionWithSeparator(manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    }\n    visitRepetitionMandatory(atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    }\n    visitRepetitionMandatoryWithSeparator(atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    }\n    visitRepetition(many) {\n        this.dslMethods.repetition.push(many);\n    }\n    visitAlternation(or) {\n        this.dslMethods.alternation.push(or);\n    }\n}\nconst collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    const dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=looksahead.js.map","/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationOnlyOffset(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (both start/end offsets exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n    // Once the startOffset has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n    }\n}\n/**\n * This nodeLocation tracking is not efficient and should only be used\n * when error recovery is enabled or the Token Vector contains virtual Tokens\n * (e.g, Python Indent/Outdent)\n * As it executes the calculation for every single terminal/nonTerminal\n * and does not rely on the fact the token vector is **sorted**\n */\nexport function setNodeLocationFull(currNodeLocation, newLocationInfo) {\n    // First (valid) update for this cst node\n    if (isNaN(currNodeLocation.startOffset) === true) {\n        // assumption1: Token location information is either NaN or a valid number\n        // assumption2: Token location information is fully valid if it exist\n        // (all start/end props exist and are numbers).\n        currNodeLocation.startOffset = newLocationInfo.startOffset;\n        currNodeLocation.startColumn = newLocationInfo.startColumn;\n        currNodeLocation.startLine = newLocationInfo.startLine;\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n    // Once the start props has been updated with a valid number it should never receive\n    // any farther updates as the Token vector is sorted.\n    // We still have to check this this condition for every new possible location info\n    // because with error recovery enabled we may encounter invalid tokens (NaN location props)\n    else if (currNodeLocation.endOffset < newLocationInfo.endOffset === true) {\n        currNodeLocation.endOffset = newLocationInfo.endOffset;\n        currNodeLocation.endColumn = newLocationInfo.endColumn;\n        currNodeLocation.endLine = newLocationInfo.endLine;\n    }\n}\nexport function addTerminalToCst(node, token, tokenTypeName) {\n    if (node.children[tokenTypeName] === undefined) {\n        node.children[tokenTypeName] = [token];\n    }\n    else {\n        node.children[tokenTypeName].push(token);\n    }\n}\nexport function addNoneTerminalToCst(node, ruleName, ruleResult) {\n    if (node.children[ruleName] === undefined) {\n        node.children[ruleName] = [ruleResult];\n    }\n    else {\n        node.children[ruleName].push(ruleResult);\n    }\n}\n//# sourceMappingURL=cst.js.map","const NAME = \"name\";\nexport function defineNameProp(obj, nameValue) {\n    Object.defineProperty(obj, NAME, {\n        enumerable: false,\n        configurable: true,\n        writable: false,\n        value: nameValue,\n    });\n}\n//# sourceMappingURL=lang_extensions.js.map","import { compact, filter, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map, } from \"lodash-es\";\nimport { defineNameProp } from \"../../lang/lang_extensions.js\";\nexport function defaultVisit(ctx, param) {\n    const childrenNames = keys(ctx);\n    const childrenNamesLength = childrenNames.length;\n    for (let i = 0; i < childrenNamesLength; i++) {\n        const currChildName = childrenNames[i];\n        const currChildArray = ctx[currChildName];\n        const currChildArrayLength = currChildArray.length;\n        for (let j = 0; j < currChildArrayLength; j++) {\n            const currChild = currChildArray[j];\n            // distinction between Tokens Children and CstNode children\n            if (currChild.tokenTypeIdx === undefined) {\n                this[currChild.name](currChild.children, param);\n            }\n        }\n    }\n    // defaultVisit does not support generic out param\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n    const semanticProto = {\n        visit: function (cstNode, param) {\n            // enables writing more concise visitor methods when CstNode has only a single child\n            if (isArray(cstNode)) {\n                // A CST Node's children dictionary can never have empty arrays as values\n                // If a key is defined there will be at least one element in the corresponding value array.\n                cstNode = cstNode[0];\n            }\n            // enables passing optional CstNodes concisely.\n            if (isUndefined(cstNode)) {\n                return undefined;\n            }\n            return this[cstNode.name](cstNode.children, param);\n        },\n        validateVisitor: function () {\n            const semanticDefinitionErrors = validateVisitor(this, ruleNames);\n            if (!isEmpty(semanticDefinitionErrors)) {\n                const errorMessages = map(semanticDefinitionErrors, (currDefError) => currDefError.msg);\n                throw Error(`Errors Detected in CST Visitor <${this.constructor.name}>:\\n\\t` +\n                    `${errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")}`);\n            }\n        },\n    };\n    derivedConstructor.prototype = semanticProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    derivedConstructor._RULE_NAMES = ruleNames;\n    return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n    const derivedConstructor = function () { };\n    // can be overwritten according to:\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n    // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n    defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n    const withDefaultsProto = Object.create(baseConstructor.prototype);\n    forEach(ruleNames, (ruleName) => {\n        withDefaultsProto[ruleName] = defaultVisit;\n    });\n    derivedConstructor.prototype = withDefaultsProto;\n    derivedConstructor.prototype.constructor = derivedConstructor;\n    return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n    CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n    const missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n    return missingErrors;\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n    const missingRuleNames = filter(ruleNames, (currRuleName) => {\n        return isFunction(visitorInstance[currRuleName]) === false;\n    });\n    const errors = map(missingRuleNames, (currRuleName) => {\n        return {\n            msg: `Missing visitor method: <${currRuleName}> on ${(visitorInstance.constructor.name)} CST Visitor.`,\n            type: CstVisitorDefinitionError.MISSING_METHOD,\n            methodName: currRuleName,\n        };\n    });\n    return compact(errors);\n}\n//# sourceMappingURL=cst_visitor.js.map","import { forEach, has, isArray, isFunction, last as peek, some, } from \"lodash-es\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal, } from \"@chevrotain/gast\";\nimport { Lexer } from \"../../../scan/lexer_public.js\";\nimport { augmentTokenTypes, hasShortKeyProperty, } from \"../../../scan/tokens.js\";\nimport { createToken, createTokenInstance, } from \"../../../scan/tokens_public.js\";\nimport { END_OF_FILE } from \"../parser.js\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys.js\";\nconst RECORDING_NULL_OBJECT = {\n    description: \"This Object indicates the Parser is during Recording Phase\",\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nconst HANDLE_SEPARATOR = true;\nconst MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nconst RFT = createToken({ name: \"RECORDING_PHASE_TOKEN\", pattern: Lexer.NA });\naugmentTokenTypes([RFT]);\nconst RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" +\n    \"\" +\n    \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", \n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nconst RECORDING_PHASE_CSTNODE = {\n    name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" +\n        \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n    children: {},\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nexport class GastRecorder {\n    initGastRecorder(config) {\n        this.recordingProdStack = [];\n        this.RECORDING_PHASE = false;\n    }\n    enableRecording() {\n        this.RECORDING_PHASE = true;\n        this.TRACE_INIT(\"Enable Recording\", () => {\n            /**\n             * Warning Dark Voodoo Magic upcoming!\n             * We are \"replacing\" the public parsing DSL methods API\n             * With **new** alternative implementations on the Parser **instance**\n             *\n             * So far this is the only way I've found to avoid performance regressions during parsing time.\n             * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n             *   implementations directly instead.\n             */\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                this[`CONSUME${idx}`] = function (arg1, arg2) {\n                    return this.consumeInternalRecord(arg1, i, arg2);\n                };\n                this[`SUBRULE${idx}`] = function (arg1, arg2) {\n                    return this.subruleInternalRecord(arg1, i, arg2);\n                };\n                this[`OPTION${idx}`] = function (arg1) {\n                    return this.optionInternalRecord(arg1, i);\n                };\n                this[`OR${idx}`] = function (arg1) {\n                    return this.orInternalRecord(arg1, i);\n                };\n                this[`MANY${idx}`] = function (arg1) {\n                    this.manyInternalRecord(i, arg1);\n                };\n                this[`MANY_SEP${idx}`] = function (arg1) {\n                    this.manySepFirstInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE${idx}`] = function (arg1) {\n                    this.atLeastOneInternalRecord(i, arg1);\n                };\n                this[`AT_LEAST_ONE_SEP${idx}`] = function (arg1) {\n                    this.atLeastOneSepFirstInternalRecord(i, arg1);\n                };\n            }\n            // DSL methods with the idx(suffix) as an argument\n            this[`consume`] = function (idx, arg1, arg2) {\n                return this.consumeInternalRecord(arg1, idx, arg2);\n            };\n            this[`subrule`] = function (idx, arg1, arg2) {\n                return this.subruleInternalRecord(arg1, idx, arg2);\n            };\n            this[`option`] = function (idx, arg1) {\n                return this.optionInternalRecord(arg1, idx);\n            };\n            this[`or`] = function (idx, arg1) {\n                return this.orInternalRecord(arg1, idx);\n            };\n            this[`many`] = function (idx, arg1) {\n                this.manyInternalRecord(idx, arg1);\n            };\n            this[`atLeastOne`] = function (idx, arg1) {\n                this.atLeastOneInternalRecord(idx, arg1);\n            };\n            this.ACTION = this.ACTION_RECORD;\n            this.BACKTRACK = this.BACKTRACK_RECORD;\n            this.LA = this.LA_RECORD;\n        });\n    }\n    disableRecording() {\n        this.RECORDING_PHASE = false;\n        // By deleting these **instance** properties, any future invocation\n        // will be deferred to the original methods on the **prototype** object\n        // This seems to get rid of any incorrect optimizations that V8 may\n        // do during the recording phase.\n        this.TRACE_INIT(\"Deleting Recording methods\", () => {\n            const that = this;\n            for (let i = 0; i < 10; i++) {\n                const idx = i > 0 ? i : \"\";\n                delete that[`CONSUME${idx}`];\n                delete that[`SUBRULE${idx}`];\n                delete that[`OPTION${idx}`];\n                delete that[`OR${idx}`];\n                delete that[`MANY${idx}`];\n                delete that[`MANY_SEP${idx}`];\n                delete that[`AT_LEAST_ONE${idx}`];\n                delete that[`AT_LEAST_ONE_SEP${idx}`];\n            }\n            delete that[`consume`];\n            delete that[`subrule`];\n            delete that[`option`];\n            delete that[`or`];\n            delete that[`many`];\n            delete that[`atLeastOne`];\n            delete that.ACTION;\n            delete that.BACKTRACK;\n            delete that.LA;\n        });\n    }\n    //   Parser methods are called inside an ACTION?\n    //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n    // @ts-expect-error -- noop place holder\n    ACTION_RECORD(impl) {\n        // NO-OP during recording\n    }\n    // Executing backtracking logic will break our recording logic assumptions\n    BACKTRACK_RECORD(grammarRule, args) {\n        return () => true;\n    }\n    // LA is part of the official API and may be used for custom lookahead logic\n    // by end users who may forget to wrap it in ACTION or inside a GATE\n    LA_RECORD(howMuch) {\n        // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n        // On LA return EOF at the end of the input so an infinite loop may occur.\n        return END_OF_FILE;\n    }\n    topLevelRuleRecord(name, def) {\n        try {\n            const newTopLevelRule = new Rule({ definition: [], name: name });\n            newTopLevelRule.name = name;\n            this.recordingProdStack.push(newTopLevelRule);\n            def.call(this);\n            this.recordingProdStack.pop();\n            return newTopLevelRule;\n        }\n        catch (originalError) {\n            if (originalError.KNOWN_RECORDER_ERROR !== true) {\n                try {\n                    originalError.message =\n                        originalError.message +\n                            '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' +\n                            \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n                }\n                catch (mutabilityError) {\n                    // We may not be able to modify the original error object\n                    throw originalError;\n                }\n            }\n            throw originalError;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternalRecord(actionORMethodDef, occurrence) {\n        return recordProd.call(this, Option, actionORMethodDef, occurrence);\n    }\n    atLeastOneInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n    }\n    atLeastOneSepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    manyInternalRecord(occurrence, actionORMethodDef) {\n        recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n    }\n    manySepFirstInternalRecord(occurrence, options) {\n        recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n    }\n    orInternalRecord(altsOrOpts, occurrence) {\n        return recordOrProd.call(this, altsOrOpts, occurrence);\n    }\n    subruleInternalRecord(ruleToCall, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n            const error = new Error(`<SUBRULE${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a Parser method reference but got: <${JSON.stringify(ruleToCall)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const ruleName = ruleToCall.ruleName;\n        const newNoneTerminal = new NonTerminal({\n            idx: occurrence,\n            nonTerminalName: ruleName,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n            // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n            referencedRule: undefined,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return this.outputCst\n            ? RECORDING_PHASE_CSTNODE\n            : RECORDING_NULL_OBJECT;\n    }\n    consumeInternalRecord(tokType, occurrence, options) {\n        assertMethodIdxIsValid(occurrence);\n        if (!hasShortKeyProperty(tokType)) {\n            const error = new Error(`<CONSUME${getIdxSuffix(occurrence)}> argument is invalid` +\n                ` expecting a TokenType reference but got: <${JSON.stringify(tokType)}>` +\n                `\\n inside top level rule: <${this.recordingProdStack[0].name}>`);\n            error.KNOWN_RECORDER_ERROR = true;\n            throw error;\n        }\n        const prevProd = peek(this.recordingProdStack);\n        const newNoneTerminal = new Terminal({\n            idx: occurrence,\n            terminalType: tokType,\n            label: options === null || options === void 0 ? void 0 : options.LABEL,\n        });\n        prevProd.definition.push(newNoneTerminal);\n        return RECORDING_PHASE_TOKEN;\n    }\n}\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep = false) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    const grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n    const newProd = new prodConstructor({ definition: [], idx: occurrence });\n    if (handleSep) {\n        newProd.separator = mainProdArg.SEP;\n    }\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    this.recordingProdStack.push(newProd);\n    grammarAction.call(this);\n    prevProd.definition.push(newProd);\n    this.recordingProdStack.pop();\n    return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n    assertMethodIdxIsValid(occurrence);\n    const prevProd = peek(this.recordingProdStack);\n    // Only an array of alternatives\n    const hasOptions = isArray(mainProdArg) === false;\n    const alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n    const newOrProd = new Alternation({\n        definition: [],\n        idx: occurrence,\n        ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true,\n    });\n    if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n        newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n    }\n    const hasPredicates = some(alts, (currAlt) => isFunction(currAlt.GATE));\n    newOrProd.hasPredicates = hasPredicates;\n    prevProd.definition.push(newOrProd);\n    forEach(alts, (currAlt) => {\n        const currAltFlat = new Alternative({ definition: [] });\n        newOrProd.definition.push(currAltFlat);\n        if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n            currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES; // assumes end user provides the correct config value/type\n        }\n        // **implicit** ignoreAmbiguities due to usage of gate\n        else if (has(currAlt, \"GATE\")) {\n            currAltFlat.ignoreAmbiguities = true;\n        }\n        this.recordingProdStack.push(currAltFlat);\n        currAlt.ALT.call(this);\n        this.recordingProdStack.pop();\n    });\n    return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n    return idx === 0 ? \"\" : `${idx}`;\n}\nfunction assertMethodIdxIsValid(idx) {\n    if (idx < 0 || idx > MAX_METHOD_IDX) {\n        const error = new Error(\n        // The stack trace will contain all the needed details\n        `Invalid DSL Method idx value: <${idx}>\\n\\t` +\n            `Idx value must be a none negative value smaller than ${MAX_METHOD_IDX + 1}`);\n        error.KNOWN_RECORDER_ERROR = true;\n        throw error;\n    }\n}\n//# sourceMappingURL=gast_recorder.js.map","import { clone, forEach, has, isEmpty, map, values } from \"lodash-es\";\nimport { toFastProperties } from \"@chevrotain/utils\";\nimport { computeAllProdsFollows } from \"../grammar/follow.js\";\nimport { createTokenInstance, EOF } from \"../../scan/tokens_public.js\";\nimport { defaultGrammarValidatorErrorProvider, defaultParserErrorProvider, } from \"../errors_public.js\";\nimport { resolveGrammar, validateGrammar, } from \"../grammar/gast/gast_resolver_public.js\";\nimport { Recoverable } from \"./traits/recoverable.js\";\nimport { LooksAhead } from \"./traits/looksahead.js\";\nimport { TreeBuilder } from \"./traits/tree_builder.js\";\nimport { LexerAdapter } from \"./traits/lexer_adapter.js\";\nimport { RecognizerApi } from \"./traits/recognizer_api.js\";\nimport { RecognizerEngine } from \"./traits/recognizer_engine.js\";\nimport { ErrorHandler } from \"./traits/error_handler.js\";\nimport { ContentAssist } from \"./traits/context_assist.js\";\nimport { GastRecorder } from \"./traits/gast_recorder.js\";\nimport { PerformanceTracer } from \"./traits/perf_tracer.js\";\nimport { applyMixins } from \"./utils/apply_mixins.js\";\nimport { validateLookahead } from \"../grammar/checks.js\";\nexport const END_OF_FILE = createTokenInstance(EOF, \"\", NaN, NaN, NaN, NaN, NaN, NaN);\nObject.freeze(END_OF_FILE);\nexport const DEFAULT_PARSER_CONFIG = Object.freeze({\n    recoveryEnabled: false,\n    maxLookahead: 3,\n    dynamicTokensEnabled: false,\n    outputCst: true,\n    errorMessageProvider: defaultParserErrorProvider,\n    nodeLocationTracking: \"none\",\n    traceInitPerf: false,\n    skipValidations: false,\n});\nexport const DEFAULT_RULE_CONFIG = Object.freeze({\n    recoveryValueFunc: () => undefined,\n    resyncEnabled: true,\n});\nexport var ParserDefinitionErrorType;\n(function (ParserDefinitionErrorType) {\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_NAME\"] = 0] = \"INVALID_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_RULE_NAME\"] = 1] = \"DUPLICATE_RULE_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_RULE_OVERRIDE\"] = 2] = \"INVALID_RULE_OVERRIDE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"DUPLICATE_PRODUCTIONS\"] = 3] = \"DUPLICATE_PRODUCTIONS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"UNRESOLVED_SUBRULE_REF\"] = 4] = \"UNRESOLVED_SUBRULE_REF\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"LEFT_RECURSION\"] = 5] = \"LEFT_RECURSION\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NONE_LAST_EMPTY_ALT\"] = 6] = \"NONE_LAST_EMPTY_ALT\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_ALTS\"] = 7] = \"AMBIGUOUS_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CONFLICT_TOKENS_RULES_NAMESPACE\"] = 8] = \"CONFLICT_TOKENS_RULES_NAMESPACE\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"INVALID_TOKEN_NAME\"] = 9] = \"INVALID_TOKEN_NAME\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"NO_NON_EMPTY_LOOKAHEAD\"] = 10] = \"NO_NON_EMPTY_LOOKAHEAD\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"AMBIGUOUS_PREFIX_ALTS\"] = 11] = \"AMBIGUOUS_PREFIX_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"TOO_MANY_ALTS\"] = 12] = \"TOO_MANY_ALTS\";\n    ParserDefinitionErrorType[ParserDefinitionErrorType[\"CUSTOM_LOOKAHEAD_VALIDATION\"] = 13] = \"CUSTOM_LOOKAHEAD_VALIDATION\";\n})(ParserDefinitionErrorType || (ParserDefinitionErrorType = {}));\nexport function EMPTY_ALT(value = undefined) {\n    return function () {\n        return value;\n    };\n}\nexport class Parser {\n    /**\n     *  @deprecated use the **instance** method with the same name instead\n     */\n    static performSelfAnalysis(parserInstance) {\n        throw Error(\"The **static** `performSelfAnalysis` method has been deprecated.\" +\n            \"\\t\\nUse the **instance** method with the same name instead.\");\n    }\n    performSelfAnalysis() {\n        this.TRACE_INIT(\"performSelfAnalysis\", () => {\n            let defErrorsMsgs;\n            this.selfAnalysisDone = true;\n            const className = this.className;\n            this.TRACE_INIT(\"toFastProps\", () => {\n                // Without this voodoo magic the parser would be x3-x4 slower\n                // It seems it is better to invoke `toFastProperties` **before**\n                // Any manipulations of the `this` object done during the recording phase.\n                toFastProperties(this);\n            });\n            this.TRACE_INIT(\"Grammar Recording\", () => {\n                try {\n                    this.enableRecording();\n                    // Building the GAST\n                    forEach(this.definedRulesNames, (currRuleName) => {\n                        const wrappedRule = this[currRuleName];\n                        const originalGrammarAction = wrappedRule[\"originalGrammarAction\"];\n                        let recordedRuleGast;\n                        this.TRACE_INIT(`${currRuleName} Rule`, () => {\n                            recordedRuleGast = this.topLevelRuleRecord(currRuleName, originalGrammarAction);\n                        });\n                        this.gastProductionsCache[currRuleName] = recordedRuleGast;\n                    });\n                }\n                finally {\n                    this.disableRecording();\n                }\n            });\n            let resolverErrors = [];\n            this.TRACE_INIT(\"Grammar Resolving\", () => {\n                resolverErrors = resolveGrammar({\n                    rules: values(this.gastProductionsCache),\n                });\n                this.definitionErrors = this.definitionErrors.concat(resolverErrors);\n            });\n            this.TRACE_INIT(\"Grammar Validations\", () => {\n                // only perform additional grammar validations IFF no resolving errors have occurred.\n                // as unresolved grammar may lead to unhandled runtime exceptions in the follow up validations.\n                if (isEmpty(resolverErrors) && this.skipValidations === false) {\n                    const validationErrors = validateGrammar({\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        errMsgProvider: defaultGrammarValidatorErrorProvider,\n                        grammarName: className,\n                    });\n                    const lookaheadValidationErrors = validateLookahead({\n                        lookaheadStrategy: this.lookaheadStrategy,\n                        rules: values(this.gastProductionsCache),\n                        tokenTypes: values(this.tokensMap),\n                        grammarName: className,\n                    });\n                    this.definitionErrors = this.definitionErrors.concat(validationErrors, lookaheadValidationErrors);\n                }\n            });\n            // this analysis may fail if the grammar is not perfectly valid\n            if (isEmpty(this.definitionErrors)) {\n                // The results of these computations are not needed unless error recovery is enabled.\n                if (this.recoveryEnabled) {\n                    this.TRACE_INIT(\"computeAllProdsFollows\", () => {\n                        const allFollows = computeAllProdsFollows(values(this.gastProductionsCache));\n                        this.resyncFollows = allFollows;\n                    });\n                }\n                this.TRACE_INIT(\"ComputeLookaheadFunctions\", () => {\n                    var _a, _b;\n                    (_b = (_a = this.lookaheadStrategy).initialize) === null || _b === void 0 ? void 0 : _b.call(_a, {\n                        rules: values(this.gastProductionsCache),\n                    });\n                    this.preComputeLookaheadFunctions(values(this.gastProductionsCache));\n                });\n            }\n            if (!Parser.DEFER_DEFINITION_ERRORS_HANDLING &&\n                !isEmpty(this.definitionErrors)) {\n                defErrorsMsgs = map(this.definitionErrors, (defError) => defError.message);\n                throw new Error(`Parser Definition Errors detected:\\n ${defErrorsMsgs.join(\"\\n-------------------------------\\n\")}`);\n            }\n        });\n    }\n    constructor(tokenVocabulary, config) {\n        this.definitionErrors = [];\n        this.selfAnalysisDone = false;\n        const that = this;\n        that.initErrorHandler(config);\n        that.initLexerAdapter();\n        that.initLooksAhead(config);\n        that.initRecognizerEngine(tokenVocabulary, config);\n        that.initRecoverable(config);\n        that.initTreeBuilder(config);\n        that.initContentAssist();\n        that.initGastRecorder(config);\n        that.initPerformanceTracer(config);\n        if (has(config, \"ignoredIssues\")) {\n            throw new Error(\"The <ignoredIssues> IParserConfig property has been deprecated.\\n\\t\" +\n                \"Please use the <IGNORE_AMBIGUITIES> flag on the relevant DSL method instead.\\n\\t\" +\n                \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#IGNORING_AMBIGUITIES\\n\\t\" +\n                \"For further details.\");\n        }\n        this.skipValidations = has(config, \"skipValidations\")\n            ? config.skipValidations // casting assumes the end user passing the correct type\n            : DEFAULT_PARSER_CONFIG.skipValidations;\n    }\n}\n// Set this flag to true if you don't want the Parser to throw error when problems in it's definition are detected.\n// (normally during the parser's constructor).\n// This is a design time flag, it will not affect the runtime error handling of the parser, just design time errors,\n// for example: duplicate rule names, referencing an unresolved subrule, ect...\n// This flag should not be enabled during normal usage, it is used in special situations, for example when\n// needing to display the parser definition errors in some GUI(online playground).\nParser.DEFER_DEFINITION_ERRORS_HANDLING = false;\napplyMixins(Parser, [\n    Recoverable,\n    LooksAhead,\n    TreeBuilder,\n    LexerAdapter,\n    RecognizerEngine,\n    RecognizerApi,\n    ErrorHandler,\n    ContentAssist,\n    GastRecorder,\n    PerformanceTracer,\n]);\nexport class CstParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = true;\n        super(tokenVocabulary, configClone);\n    }\n}\nexport class EmbeddedActionsParser extends Parser {\n    constructor(tokenVocabulary, config = DEFAULT_PARSER_CONFIG) {\n        const configClone = clone(config);\n        configClone.outputCst = false;\n        super(tokenVocabulary, configClone);\n    }\n}\n//# sourceMappingURL=parser.js.map","export function applyMixins(derivedCtor, baseCtors) {\n    baseCtors.forEach((baseCtor) => {\n        const baseProto = baseCtor.prototype;\n        Object.getOwnPropertyNames(baseProto).forEach((propName) => {\n            if (propName === \"constructor\") {\n                return;\n            }\n            const basePropDescriptor = Object.getOwnPropertyDescriptor(baseProto, propName);\n            // Handle Accessors\n            if (basePropDescriptor &&\n                (basePropDescriptor.get || basePropDescriptor.set)) {\n                Object.defineProperty(derivedCtor.prototype, propName, basePropDescriptor);\n            }\n            else {\n                derivedCtor.prototype[propName] = baseCtor.prototype[propName];\n            }\n        });\n    });\n}\n//# sourceMappingURL=apply_mixins.js.map","import { defaults, forEach } from \"lodash-es\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver.js\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks.js\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, } from \"../../errors_public.js\";\nexport function resolveGrammar(options) {\n    const actualOptions = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider,\n    });\n    const topRulesTable = {};\n    forEach(options.rules, (rule) => {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, actualOptions.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider,\n    });\n    return orgValidateGrammar(options.rules, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\n//# sourceMappingURL=gast_resolver_public.js.map","import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset, } from \"../../cst/cst.js\";\nimport { has, isUndefined, keys, noop } from \"lodash-es\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults, } from \"../../cst/cst_visitor.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * This trait is responsible for the CST building logic.\n */\nexport class TreeBuilder {\n    initTreeBuilder(config) {\n        this.CST_STACK = [];\n        // outputCst is no longer exposed/defined in the pubic API\n        this.outputCst = config.outputCst;\n        this.nodeLocationTracking = has(config, \"nodeLocationTracking\")\n            ? config.nodeLocationTracking // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n        if (!this.outputCst) {\n            this.cstInvocationStateUpdate = noop;\n            this.cstFinallyStateUpdate = noop;\n            this.cstPostTerminal = noop;\n            this.cstPostNonTerminal = noop;\n            this.cstPostRule = noop;\n        }\n        else {\n            if (/full/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationFull;\n                    this.setNodeLocationFromNode = setNodeLocationFull;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleFull;\n                    this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n                }\n            }\n            else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n                if (this.recoveryEnabled) {\n                    this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n                    this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n                    this.cstPostRule = noop;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRecovery;\n                }\n                else {\n                    this.setNodeLocationFromToken = noop;\n                    this.setNodeLocationFromNode = noop;\n                    this.cstPostRule = this.cstPostRuleOnlyOffset;\n                    this.setInitialNodeLocation =\n                        this.setInitialNodeLocationOnlyOffsetRegular;\n                }\n            }\n            else if (/none/i.test(this.nodeLocationTracking)) {\n                this.setNodeLocationFromToken = noop;\n                this.setNodeLocationFromNode = noop;\n                this.cstPostRule = noop;\n                this.setInitialNodeLocation = noop;\n            }\n            else {\n                throw Error(`Invalid <nodeLocationTracking> config option: \"${config.nodeLocationTracking}\"`);\n            }\n        }\n    }\n    setInitialNodeLocationOnlyOffsetRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationOnlyOffsetRegular(cstNode) {\n        cstNode.location = {\n            // without error recovery the starting Location of a new CstNode is guaranteed\n            // To be the next Token's startOffset (for valid inputs).\n            // For invalid inputs there won't be any CSTOutput so this potential\n            // inaccuracy does not matter\n            startOffset: this.LA(1).startOffset,\n            endOffset: NaN,\n        };\n    }\n    setInitialNodeLocationFullRecovery(cstNode) {\n        cstNode.location = {\n            startOffset: NaN,\n            startLine: NaN,\n            startColumn: NaN,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    /**\n       *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n  \n       * @param cstNode\n       */\n    setInitialNodeLocationFullRegular(cstNode) {\n        const nextToken = this.LA(1);\n        cstNode.location = {\n            startOffset: nextToken.startOffset,\n            startLine: nextToken.startLine,\n            startColumn: nextToken.startColumn,\n            endOffset: NaN,\n            endLine: NaN,\n            endColumn: NaN,\n        };\n    }\n    cstInvocationStateUpdate(fullRuleName) {\n        const cstNode = {\n            name: fullRuleName,\n            children: Object.create(null),\n        };\n        this.setInitialNodeLocation(cstNode);\n        this.CST_STACK.push(cstNode);\n    }\n    cstFinallyStateUpdate() {\n        this.CST_STACK.pop();\n    }\n    cstPostRuleFull(ruleCstNode) {\n        // casts to `required<CstNodeLocation>` are safe because `cstPostRuleFull` should only be invoked when full location is enabled\n        const prevToken = this.LA(0);\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n            loc.endLine = prevToken.endLine;\n            loc.endColumn = prevToken.endColumn;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n            loc.startLine = NaN;\n            loc.startColumn = NaN;\n        }\n    }\n    cstPostRuleOnlyOffset(ruleCstNode) {\n        const prevToken = this.LA(0);\n        // `location' is not null because `cstPostRuleOnlyOffset` will only be invoked when location tracking is enabled.\n        const loc = ruleCstNode.location;\n        // If this condition is true it means we consumed at least one Token\n        // In this CstNode.\n        if (loc.startOffset <= prevToken.startOffset === true) {\n            loc.endOffset = prevToken.endOffset;\n        }\n        // \"empty\" CstNode edge case\n        else {\n            loc.startOffset = NaN;\n        }\n    }\n    cstPostTerminal(key, consumedToken) {\n        const rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n        addTerminalToCst(rootCst, consumedToken, key);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromToken(rootCst.location, consumedToken);\n    }\n    cstPostNonTerminal(ruleCstResult, ruleName) {\n        const preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n        addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n        // This is only used when **both** error recovery and CST Output are enabled.\n        this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n    }\n    getBaseCstVisitorConstructor() {\n        if (isUndefined(this.baseCstVisitorConstructor)) {\n            const newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n            this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n            return newBaseCstVisitorConstructor;\n        }\n        return this.baseCstVisitorConstructor;\n    }\n    getBaseCstVisitorConstructorWithDefaults() {\n        if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n            const newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n            this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n            return newConstructor;\n        }\n        return this.baseCstVisitorWithDefaultsConstructor;\n    }\n    getLastExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 1];\n    }\n    getPreviousExplicitRuleShortName() {\n        const ruleStack = this.RULE_STACK;\n        return ruleStack[ruleStack.length - 2];\n    }\n    getLastExplicitRuleOccurrenceIndex() {\n        const occurrenceStack = this.RULE_OCCURRENCE_STACK;\n        return occurrenceStack[occurrenceStack.length - 1];\n    }\n}\n//# sourceMappingURL=tree_builder.js.map","import { END_OF_FILE } from \"../parser.js\";\n/**\n * Trait responsible abstracting over the interaction with Lexer output (Token vector).\n *\n * This could be generalized to support other kinds of lexers, e.g.\n * - Just in Time Lexing / Lexer-Less parsing.\n * - Streaming Lexer.\n */\nexport class LexerAdapter {\n    initLexerAdapter() {\n        this.tokVector = [];\n        this.tokVectorLength = 0;\n        this.currIdx = -1;\n    }\n    set input(newInput) {\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        if (this.selfAnalysisDone !== true) {\n            throw Error(`Missing <performSelfAnalysis> invocation at the end of the Parser's constructor.`);\n        }\n        // @ts-ignore - `this parameter` not supported in setters/getters\n        //   - https://www.typescriptlang.org/docs/handbook/functions.html#this-parameters\n        this.reset();\n        this.tokVector = newInput;\n        this.tokVectorLength = newInput.length;\n    }\n    get input() {\n        return this.tokVector;\n    }\n    // skips a token and returns the next token\n    SKIP_TOKEN() {\n        if (this.currIdx <= this.tokVector.length - 2) {\n            this.consumeToken();\n            return this.LA(1);\n        }\n        else {\n            return END_OF_FILE;\n        }\n    }\n    // Lexer (accessing Token vector) related methods which can be overridden to implement lazy lexers\n    // or lexers dependent on parser context.\n    LA(howMuch) {\n        const soughtIdx = this.currIdx + howMuch;\n        if (soughtIdx < 0 || this.tokVectorLength <= soughtIdx) {\n            return END_OF_FILE;\n        }\n        else {\n            return this.tokVector[soughtIdx];\n        }\n    }\n    consumeToken() {\n        this.currIdx++;\n    }\n    exportLexerState() {\n        return this.currIdx;\n    }\n    importLexerState(newState) {\n        this.currIdx = newState;\n    }\n    resetLexerState() {\n        this.currIdx = -1;\n    }\n    moveToTerminatedState() {\n        this.currIdx = this.tokVector.length - 1;\n    }\n    getLexerPosition() {\n        return this.exportLexerState();\n    }\n}\n//# sourceMappingURL=lexer_adapter.js.map","import { clone, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values, } from \"lodash-es\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX, } from \"../../grammar/keys.js\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException, } from \"../../exceptions_public.js\";\nimport { PROD_TYPE } from \"../../grammar/lookahead.js\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker, } from \"../../grammar/interpreter.js\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser.js\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable.js\";\nimport { EOF } from \"../../../scan/tokens_public.js\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories, } from \"../../../scan/tokens.js\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nexport class RecognizerEngine {\n    initRecognizerEngine(tokenVocabulary, config) {\n        this.className = this.constructor.name;\n        // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n        this.shortRuleNameToFull = {};\n        this.fullRuleNameToShort = {};\n        this.ruleShortNameIdx = 256;\n        this.tokenMatcher = tokenStructuredMatcherNoCategories;\n        this.subruleIdx = 0;\n        this.definedRulesNames = [];\n        this.tokensMap = {};\n        this.isBackTrackingStack = [];\n        this.RULE_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n        this.gastProductionsCache = {};\n        if (has(config, \"serializedGrammar\")) {\n            throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" +\n                \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" +\n                \"\\tFor Further details.\");\n        }\n        if (isArray(tokenVocabulary)) {\n            // This only checks for Token vocabularies provided as arrays.\n            // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n            // rather than all edge cases of empty Token vocabularies.\n            if (isEmpty(tokenVocabulary)) {\n                throw Error(\"A Token Vocabulary cannot be empty.\\n\" +\n                    \"\\tNote that the first argument for the parser constructor\\n\" +\n                    \"\\tis no longer a Token vector (since v4.0).\");\n            }\n            if (typeof tokenVocabulary[0].startOffset === \"number\") {\n                throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" +\n                    \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" +\n                    \"\\tFor Further details.\");\n            }\n        }\n        if (isArray(tokenVocabulary)) {\n            this.tokensMap = reduce(tokenVocabulary, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (has(tokenVocabulary, \"modes\") &&\n            every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n            const allTokenTypes = flatten(values(tokenVocabulary.modes));\n            const uniqueTokens = uniq(allTokenTypes);\n            this.tokensMap = reduce(uniqueTokens, (acc, tokType) => {\n                acc[tokType.name] = tokType;\n                return acc;\n            }, {});\n        }\n        else if (isObject(tokenVocabulary)) {\n            this.tokensMap = clone(tokenVocabulary);\n        }\n        else {\n            throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" +\n                \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n        }\n        // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n        // parsed with a clear error message (\"expecting EOF but found ...\")\n        this.tokensMap[\"EOF\"] = EOF;\n        const allTokenTypes = has(tokenVocabulary, \"modes\")\n            ? flatten(values(tokenVocabulary.modes))\n            : values(tokenVocabulary);\n        const noTokenCategoriesUsed = every(allTokenTypes, (tokenConstructor) => isEmpty(tokenConstructor.categoryMatches));\n        this.tokenMatcher = noTokenCategoriesUsed\n            ? tokenStructuredMatcherNoCategories\n            : tokenStructuredMatcher;\n        // Because ES2015+ syntax should be supported for creating Token classes\n        // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n        // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n        augmentTokenTypes(values(this.tokensMap));\n    }\n    defineRule(ruleName, impl, config) {\n        if (this.selfAnalysisDone) {\n            throw Error(`Grammar rule <${ruleName}> may not be defined after the 'performSelfAnalysis' method has been called'\\n` +\n                `Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.`);\n        }\n        const resyncEnabled = has(config, \"resyncEnabled\")\n            ? config.resyncEnabled // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.resyncEnabled;\n        const recoveryValueFunc = has(config, \"recoveryValueFunc\")\n            ? config.recoveryValueFunc // assumes end user provides the correct config value/type\n            : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n        // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n        // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n        const shortName = this.ruleShortNameIdx << (BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX);\n        this.ruleShortNameIdx++;\n        this.shortRuleNameToFull[shortName] = ruleName;\n        this.fullRuleNameToShort[ruleName] = shortName;\n        let invokeRuleWithTry;\n        // Micro optimization, only check the condition **once** on rule definition\n        // instead of **every single** rule invocation.\n        if (this.outputCst === true) {\n            invokeRuleWithTry = function invokeRuleWithTry(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    impl.apply(this, args);\n                    const cst = this.CST_STACK[this.CST_STACK.length - 1];\n                    this.cstPostRule(cst);\n                    return cst;\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        else {\n            invokeRuleWithTry = function invokeRuleWithTryCst(...args) {\n                try {\n                    this.ruleInvocationStateUpdate(shortName, ruleName, this.subruleIdx);\n                    return impl.apply(this, args);\n                }\n                catch (e) {\n                    return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n                }\n                finally {\n                    this.ruleFinallyStateUpdate();\n                }\n            };\n        }\n        const wrappedGrammarRule = Object.assign(invokeRuleWithTry, { ruleName, originalGrammarAction: impl });\n        return wrappedGrammarRule;\n    }\n    invokeRuleCatch(e, resyncEnabledConfig, recoveryValueFunc) {\n        const isFirstInvokedRule = this.RULE_STACK.length === 1;\n        // note the reSync is always enabled for the first rule invocation, because we must always be able to\n        // reSync with EOF and just output some INVALID ParseTree\n        // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n        // path is really the most valid one\n        const reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n        if (isRecognitionException(e)) {\n            const recogError = e;\n            if (reSyncEnabled) {\n                const reSyncTokType = this.findReSyncTokenType();\n                if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n                    recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        return partialCstResult;\n                    }\n                    else {\n                        return recoveryValueFunc(e);\n                    }\n                }\n                else {\n                    if (this.outputCst) {\n                        const partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n                        partialCstResult.recoveredNode = true;\n                        recogError.partialCstResult = partialCstResult;\n                    }\n                    // to be handled Further up the call stack\n                    throw recogError;\n                }\n            }\n            else if (isFirstInvokedRule) {\n                // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n                this.moveToTerminatedState();\n                // the parser should never throw one of its own errors outside its flow.\n                // even if error recovery is disabled\n                return recoveryValueFunc(e);\n            }\n            else {\n                // to be recovered Further up the call stack\n                throw recogError;\n            }\n        }\n        else {\n            // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n            throw e;\n        }\n    }\n    // Implementation of parsing DSL\n    optionInternal(actionORMethodDef, occurrence) {\n        const key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n        return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n    }\n    optionInternalLogic(actionORMethodDef, occurrence, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            return action.call(this);\n        }\n        return undefined;\n    }\n    atLeastOneInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n        return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookAheadFunc = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookAheadFunc;\n                lookAheadFunc = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        if (lookAheadFunc.call(this) === true) {\n            let notStuck = this.doSingleRepetition(action);\n            while (lookAheadFunc.call(this) === true &&\n                notStuck === true) {\n                notStuck = this.doSingleRepetition(action);\n            }\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n        }\n        // note that while it may seem that this can cause an error because by using a recursive call to\n        // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n        // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n    }\n    atLeastOneSepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n        this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    atLeastOneSepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLookaheadFunc.call(this) === true) {\n            action.call(this);\n            //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n            //  because it is only needed in error recovery scenarios.\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterAtLeastOneSepWalker,\n            ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n        }\n        else {\n            throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n        }\n    }\n    manyInternal(prodOccurrence, actionORMethodDef) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n        return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n    }\n    manyInternalLogic(prodOccurrence, actionORMethodDef, key) {\n        let lookaheadFunction = this.getLaFuncFromCache(key);\n        let action;\n        if (typeof actionORMethodDef !== \"function\") {\n            action = actionORMethodDef.DEF;\n            const predicate = actionORMethodDef.GATE;\n            // predicate present\n            if (predicate !== undefined) {\n                const orgLookaheadFunction = lookaheadFunction;\n                lookaheadFunction = () => {\n                    return predicate.call(this) && orgLookaheadFunction.call(this);\n                };\n            }\n        }\n        else {\n            action = actionORMethodDef;\n        }\n        let notStuck = true;\n        while (lookaheadFunction.call(this) === true && notStuck === true) {\n            notStuck = this.doSingleRepetition(action);\n        }\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker, \n        // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n        // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n        // An infinite loop cannot occur as:\n        // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n        // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n        notStuck);\n    }\n    manySepFirstInternal(prodOccurrence, options) {\n        const laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n        this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n    }\n    manySepFirstInternalLogic(prodOccurrence, options, key) {\n        const action = options.DEF;\n        const separator = options.SEP;\n        const firstIterationLaFunc = this.getLaFuncFromCache(key);\n        // 1st iteration\n        if (firstIterationLaFunc.call(this) === true) {\n            action.call(this);\n            const separatorLookAheadFunc = () => {\n                return this.tokenMatcher(this.LA(1), separator);\n            };\n            // 2nd..nth iterations\n            while (this.tokenMatcher(this.LA(1), separator) === true) {\n                // note that this CONSUME will never enter recovery because\n                // the separatorLookAheadFunc checks that the separator really does exist.\n                this.CONSUME(separator);\n                // No need for checking infinite loop here due to consuming the separator.\n                action.call(this);\n            }\n            // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n            this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n                prodOccurrence,\n                separator,\n                separatorLookAheadFunc,\n                action,\n                NextTerminalAfterManySepWalker,\n            ], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n        }\n    }\n    repetitionSepSecondInternal(prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n        while (separatorLookAheadFunc()) {\n            // note that this CONSUME will never enter recovery because\n            // the separatorLookAheadFunc checks that the separator really does exist.\n            this.CONSUME(separator);\n            action.call(this);\n        }\n        // we can only arrive to this function after an error\n        // has occurred (hence the name 'second') so the following\n        // IF will always be entered, its possible to remove it...\n        // however it is kept to avoid confusion and be consistent.\n        // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n        /* istanbul ignore else */\n        this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [\n            prodOccurrence,\n            separator,\n            separatorLookAheadFunc,\n            action,\n            nextTerminalAfterWalker,\n        ], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n    }\n    doSingleRepetition(action) {\n        const beforeIteration = this.getLexerPosition();\n        action.call(this);\n        const afterIteration = this.getLexerPosition();\n        // This boolean will indicate if this repetition progressed\n        // or if we are \"stuck\" (potential infinite loop in the repetition).\n        return afterIteration > beforeIteration;\n    }\n    orInternal(altsOrOpts, occurrence) {\n        const laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n        const alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n        const laFunc = this.getLaFuncFromCache(laKey);\n        const altIdxToTake = laFunc.call(this, alts);\n        if (altIdxToTake !== undefined) {\n            const chosenAlternative = alts[altIdxToTake];\n            return chosenAlternative.ALT.call(this);\n        }\n        this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n    }\n    ruleFinallyStateUpdate() {\n        this.RULE_STACK.pop();\n        this.RULE_OCCURRENCE_STACK.pop();\n        // NOOP when cst is disabled\n        this.cstFinallyStateUpdate();\n        if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n            const firstRedundantTok = this.LA(1);\n            const errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n                firstRedundant: firstRedundantTok,\n                ruleName: this.getCurrRuleFullName(),\n            });\n            this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n        }\n    }\n    subruleInternal(ruleToCall, idx, options) {\n        let ruleResult;\n        try {\n            const args = options !== undefined ? options.ARGS : undefined;\n            this.subruleIdx = idx;\n            ruleResult = ruleToCall.apply(this, args);\n            this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleToCall.ruleName);\n            return ruleResult;\n        }\n        catch (e) {\n            throw this.subruleInternalError(e, options, ruleToCall.ruleName);\n        }\n    }\n    subruleInternalError(e, options, ruleName) {\n        if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n            this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined\n                ? options.LABEL\n                : ruleName);\n            delete e.partialCstResult;\n        }\n        throw e;\n    }\n    consumeInternal(tokType, idx, options) {\n        let consumedToken;\n        try {\n            const nextToken = this.LA(1);\n            if (this.tokenMatcher(nextToken, tokType) === true) {\n                this.consumeToken();\n                consumedToken = nextToken;\n            }\n            else {\n                this.consumeInternalError(tokType, nextToken, options);\n            }\n        }\n        catch (eFromConsumption) {\n            consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n        }\n        this.cstPostTerminal(options !== undefined && options.LABEL !== undefined\n            ? options.LABEL\n            : tokType.name, consumedToken);\n        return consumedToken;\n    }\n    consumeInternalError(tokType, nextToken, options) {\n        let msg;\n        const previousToken = this.LA(0);\n        if (options !== undefined && options.ERR_MSG) {\n            msg = options.ERR_MSG;\n        }\n        else {\n            msg = this.errorMessageProvider.buildMismatchTokenMessage({\n                expected: tokType,\n                actual: nextToken,\n                previous: previousToken,\n                ruleName: this.getCurrRuleFullName(),\n            });\n        }\n        throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n    }\n    consumeInternalRecovery(tokType, idx, eFromConsumption) {\n        // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n        // but the original syntax could have been parsed successfully without any backtracking + recovery\n        if (this.recoveryEnabled &&\n            // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n            eFromConsumption.name === \"MismatchedTokenException\" &&\n            !this.isBackTracking()) {\n            const follows = this.getFollowsForInRuleRecovery(tokType, idx);\n            try {\n                return this.tryInRuleRecovery(tokType, follows);\n            }\n            catch (eFromInRuleRecovery) {\n                if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n                    // failed in RuleRecovery.\n                    // throw the original error in order to trigger reSync error recovery\n                    throw eFromConsumption;\n                }\n                else {\n                    throw eFromInRuleRecovery;\n                }\n            }\n        }\n        else {\n            throw eFromConsumption;\n        }\n    }\n    saveRecogState() {\n        // errors is a getter which will clone the errors array\n        const savedErrors = this.errors;\n        const savedRuleStack = clone(this.RULE_STACK);\n        return {\n            errors: savedErrors,\n            lexerState: this.exportLexerState(),\n            RULE_STACK: savedRuleStack,\n            CST_STACK: this.CST_STACK,\n        };\n    }\n    reloadRecogState(newState) {\n        this.errors = newState.errors;\n        this.importLexerState(newState.lexerState);\n        this.RULE_STACK = newState.RULE_STACK;\n    }\n    ruleInvocationStateUpdate(shortName, fullName, idxInCallingRule) {\n        this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n        this.RULE_STACK.push(shortName);\n        // NOOP when cst is disabled\n        this.cstInvocationStateUpdate(fullName);\n    }\n    isBackTracking() {\n        return this.isBackTrackingStack.length !== 0;\n    }\n    getCurrRuleFullName() {\n        const shortName = this.getLastExplicitRuleShortName();\n        return this.shortRuleNameToFull[shortName];\n    }\n    shortRuleNameToFullName(shortName) {\n        return this.shortRuleNameToFull[shortName];\n    }\n    isAtEndOfInput() {\n        return this.tokenMatcher(this.LA(1), EOF);\n    }\n    reset() {\n        this.resetLexerState();\n        this.subruleIdx = 0;\n        this.isBackTrackingStack = [];\n        this.errors = [];\n        this.RULE_STACK = [];\n        // TODO: extract a specific reset for TreeBuilder trait\n        this.CST_STACK = [];\n        this.RULE_OCCURRENCE_STACK = [];\n    }\n}\n//# sourceMappingURL=recognizer_engine.js.map","import { includes, values } from \"lodash-es\";\nimport { isRecognitionException } from \"../../exceptions_public.js\";\nimport { DEFAULT_RULE_CONFIG, ParserDefinitionErrorType } from \"../parser.js\";\nimport { defaultGrammarValidatorErrorProvider } from \"../../errors_public.js\";\nimport { validateRuleIsOverridden } from \"../../grammar/checks.js\";\nimport { serializeGrammar } from \"@chevrotain/gast\";\n/**\n * This trait is responsible for implementing the public API\n * for defining Chevrotain parsers, i.e:\n * - CONSUME\n * - RULE\n * - OPTION\n * - ...\n */\nexport class RecognizerApi {\n    ACTION(impl) {\n        return impl.call(this);\n    }\n    consume(idx, tokType, options) {\n        return this.consumeInternal(tokType, idx, options);\n    }\n    subrule(idx, ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, idx, options);\n    }\n    option(idx, actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, idx);\n    }\n    or(idx, altsOrOpts) {\n        return this.orInternal(altsOrOpts, idx);\n    }\n    many(idx, actionORMethodDef) {\n        return this.manyInternal(idx, actionORMethodDef);\n    }\n    atLeastOne(idx, actionORMethodDef) {\n        return this.atLeastOneInternal(idx, actionORMethodDef);\n    }\n    CONSUME(tokType, options) {\n        return this.consumeInternal(tokType, 0, options);\n    }\n    CONSUME1(tokType, options) {\n        return this.consumeInternal(tokType, 1, options);\n    }\n    CONSUME2(tokType, options) {\n        return this.consumeInternal(tokType, 2, options);\n    }\n    CONSUME3(tokType, options) {\n        return this.consumeInternal(tokType, 3, options);\n    }\n    CONSUME4(tokType, options) {\n        return this.consumeInternal(tokType, 4, options);\n    }\n    CONSUME5(tokType, options) {\n        return this.consumeInternal(tokType, 5, options);\n    }\n    CONSUME6(tokType, options) {\n        return this.consumeInternal(tokType, 6, options);\n    }\n    CONSUME7(tokType, options) {\n        return this.consumeInternal(tokType, 7, options);\n    }\n    CONSUME8(tokType, options) {\n        return this.consumeInternal(tokType, 8, options);\n    }\n    CONSUME9(tokType, options) {\n        return this.consumeInternal(tokType, 9, options);\n    }\n    SUBRULE(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 0, options);\n    }\n    SUBRULE1(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 1, options);\n    }\n    SUBRULE2(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 2, options);\n    }\n    SUBRULE3(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 3, options);\n    }\n    SUBRULE4(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 4, options);\n    }\n    SUBRULE5(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 5, options);\n    }\n    SUBRULE6(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 6, options);\n    }\n    SUBRULE7(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 7, options);\n    }\n    SUBRULE8(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 8, options);\n    }\n    SUBRULE9(ruleToCall, options) {\n        return this.subruleInternal(ruleToCall, 9, options);\n    }\n    OPTION(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 0);\n    }\n    OPTION1(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 1);\n    }\n    OPTION2(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 2);\n    }\n    OPTION3(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 3);\n    }\n    OPTION4(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 4);\n    }\n    OPTION5(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 5);\n    }\n    OPTION6(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 6);\n    }\n    OPTION7(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 7);\n    }\n    OPTION8(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 8);\n    }\n    OPTION9(actionORMethodDef) {\n        return this.optionInternal(actionORMethodDef, 9);\n    }\n    OR(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 0);\n    }\n    OR1(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 1);\n    }\n    OR2(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 2);\n    }\n    OR3(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 3);\n    }\n    OR4(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 4);\n    }\n    OR5(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 5);\n    }\n    OR6(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 6);\n    }\n    OR7(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 7);\n    }\n    OR8(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 8);\n    }\n    OR9(altsOrOpts) {\n        return this.orInternal(altsOrOpts, 9);\n    }\n    MANY(actionORMethodDef) {\n        this.manyInternal(0, actionORMethodDef);\n    }\n    MANY1(actionORMethodDef) {\n        this.manyInternal(1, actionORMethodDef);\n    }\n    MANY2(actionORMethodDef) {\n        this.manyInternal(2, actionORMethodDef);\n    }\n    MANY3(actionORMethodDef) {\n        this.manyInternal(3, actionORMethodDef);\n    }\n    MANY4(actionORMethodDef) {\n        this.manyInternal(4, actionORMethodDef);\n    }\n    MANY5(actionORMethodDef) {\n        this.manyInternal(5, actionORMethodDef);\n    }\n    MANY6(actionORMethodDef) {\n        this.manyInternal(6, actionORMethodDef);\n    }\n    MANY7(actionORMethodDef) {\n        this.manyInternal(7, actionORMethodDef);\n    }\n    MANY8(actionORMethodDef) {\n        this.manyInternal(8, actionORMethodDef);\n    }\n    MANY9(actionORMethodDef) {\n        this.manyInternal(9, actionORMethodDef);\n    }\n    MANY_SEP(options) {\n        this.manySepFirstInternal(0, options);\n    }\n    MANY_SEP1(options) {\n        this.manySepFirstInternal(1, options);\n    }\n    MANY_SEP2(options) {\n        this.manySepFirstInternal(2, options);\n    }\n    MANY_SEP3(options) {\n        this.manySepFirstInternal(3, options);\n    }\n    MANY_SEP4(options) {\n        this.manySepFirstInternal(4, options);\n    }\n    MANY_SEP5(options) {\n        this.manySepFirstInternal(5, options);\n    }\n    MANY_SEP6(options) {\n        this.manySepFirstInternal(6, options);\n    }\n    MANY_SEP7(options) {\n        this.manySepFirstInternal(7, options);\n    }\n    MANY_SEP8(options) {\n        this.manySepFirstInternal(8, options);\n    }\n    MANY_SEP9(options) {\n        this.manySepFirstInternal(9, options);\n    }\n    AT_LEAST_ONE(actionORMethodDef) {\n        this.atLeastOneInternal(0, actionORMethodDef);\n    }\n    AT_LEAST_ONE1(actionORMethodDef) {\n        return this.atLeastOneInternal(1, actionORMethodDef);\n    }\n    AT_LEAST_ONE2(actionORMethodDef) {\n        this.atLeastOneInternal(2, actionORMethodDef);\n    }\n    AT_LEAST_ONE3(actionORMethodDef) {\n        this.atLeastOneInternal(3, actionORMethodDef);\n    }\n    AT_LEAST_ONE4(actionORMethodDef) {\n        this.atLeastOneInternal(4, actionORMethodDef);\n    }\n    AT_LEAST_ONE5(actionORMethodDef) {\n        this.atLeastOneInternal(5, actionORMethodDef);\n    }\n    AT_LEAST_ONE6(actionORMethodDef) {\n        this.atLeastOneInternal(6, actionORMethodDef);\n    }\n    AT_LEAST_ONE7(actionORMethodDef) {\n        this.atLeastOneInternal(7, actionORMethodDef);\n    }\n    AT_LEAST_ONE8(actionORMethodDef) {\n        this.atLeastOneInternal(8, actionORMethodDef);\n    }\n    AT_LEAST_ONE9(actionORMethodDef) {\n        this.atLeastOneInternal(9, actionORMethodDef);\n    }\n    AT_LEAST_ONE_SEP(options) {\n        this.atLeastOneSepFirstInternal(0, options);\n    }\n    AT_LEAST_ONE_SEP1(options) {\n        this.atLeastOneSepFirstInternal(1, options);\n    }\n    AT_LEAST_ONE_SEP2(options) {\n        this.atLeastOneSepFirstInternal(2, options);\n    }\n    AT_LEAST_ONE_SEP3(options) {\n        this.atLeastOneSepFirstInternal(3, options);\n    }\n    AT_LEAST_ONE_SEP4(options) {\n        this.atLeastOneSepFirstInternal(4, options);\n    }\n    AT_LEAST_ONE_SEP5(options) {\n        this.atLeastOneSepFirstInternal(5, options);\n    }\n    AT_LEAST_ONE_SEP6(options) {\n        this.atLeastOneSepFirstInternal(6, options);\n    }\n    AT_LEAST_ONE_SEP7(options) {\n        this.atLeastOneSepFirstInternal(7, options);\n    }\n    AT_LEAST_ONE_SEP8(options) {\n        this.atLeastOneSepFirstInternal(8, options);\n    }\n    AT_LEAST_ONE_SEP9(options) {\n        this.atLeastOneSepFirstInternal(9, options);\n    }\n    RULE(name, implementation, config = DEFAULT_RULE_CONFIG) {\n        if (includes(this.definedRulesNames, name)) {\n            const errMsg = defaultGrammarValidatorErrorProvider.buildDuplicateRuleNameError({\n                topLevelRule: name,\n                grammarName: this.className,\n            });\n            const error = {\n                message: errMsg,\n                type: ParserDefinitionErrorType.DUPLICATE_RULE_NAME,\n                ruleName: name,\n            };\n            this.definitionErrors.push(error);\n        }\n        this.definedRulesNames.push(name);\n        const ruleImplementation = this.defineRule(name, implementation, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    OVERRIDE_RULE(name, impl, config = DEFAULT_RULE_CONFIG) {\n        const ruleErrors = validateRuleIsOverridden(name, this.definedRulesNames, this.className);\n        this.definitionErrors = this.definitionErrors.concat(ruleErrors);\n        const ruleImplementation = this.defineRule(name, impl, config);\n        this[name] = ruleImplementation;\n        return ruleImplementation;\n    }\n    BACKTRACK(grammarRule, args) {\n        return function () {\n            // save org state\n            this.isBackTrackingStack.push(1);\n            const orgState = this.saveRecogState();\n            try {\n                grammarRule.apply(this, args);\n                // if no exception was thrown we have succeed parsing the rule.\n                return true;\n            }\n            catch (e) {\n                if (isRecognitionException(e)) {\n                    return false;\n                }\n                else {\n                    throw e;\n                }\n            }\n            finally {\n                this.reloadRecogState(orgState);\n                this.isBackTrackingStack.pop();\n            }\n        };\n    }\n    // GAST export APIs\n    getGAstProductions() {\n        return this.gastProductionsCache;\n    }\n    getSerializedGastProductions() {\n        return serializeGrammar(values(this.gastProductionsCache));\n    }\n}\n//# sourceMappingURL=recognizer_api.js.map","import { EarlyExitException, isRecognitionException, NoViableAltException, } from \"../../exceptions_public.js\";\nimport { clone, has } from \"lodash-es\";\nimport { getLookaheadPathsForOptionalProd, getLookaheadPathsForOr, } from \"../../grammar/lookahead.js\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class ErrorHandler {\n    initErrorHandler(config) {\n        this._errors = [];\n        this.errorMessageProvider = has(config, \"errorMessageProvider\")\n            ? config.errorMessageProvider // assumes end user provides the correct config value/type\n            : DEFAULT_PARSER_CONFIG.errorMessageProvider;\n    }\n    SAVE_ERROR(error) {\n        if (isRecognitionException(error)) {\n            error.context = {\n                ruleStack: this.getHumanReadableRuleStack(),\n                ruleOccurrenceStack: clone(this.RULE_OCCURRENCE_STACK),\n            };\n            this._errors.push(error);\n            return error;\n        }\n        else {\n            throw Error(\"Trying to save an Error which is not a RecognitionException\");\n        }\n    }\n    get errors() {\n        return clone(this._errors);\n    }\n    set errors(newErrors) {\n        this._errors = newErrors;\n    }\n    // TODO: consider caching the error message computed information\n    raiseEarlyExitException(occurrence, prodType, userDefinedErrMsg) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOptionalProd(occurrence, ruleGrammar, prodType, this.maxLookahead);\n        const insideProdPaths = lookAheadPathsPerAlternative[0];\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const msg = this.errorMessageProvider.buildEarlyExitMessage({\n            expectedIterationPaths: insideProdPaths,\n            actual: actualTokens,\n            previous: this.LA(0),\n            customUserDescription: userDefinedErrMsg,\n            ruleName: ruleName,\n        });\n        throw this.SAVE_ERROR(new EarlyExitException(msg, this.LA(1), this.LA(0)));\n    }\n    // TODO: consider caching the error message computed information\n    raiseNoAltException(occurrence, errMsgTypes) {\n        const ruleName = this.getCurrRuleFullName();\n        const ruleGrammar = this.getGAstProductions()[ruleName];\n        // TODO: getLookaheadPathsForOr can be slow for large enough maxLookahead and certain grammars, consider caching ?\n        const lookAheadPathsPerAlternative = getLookaheadPathsForOr(occurrence, ruleGrammar, this.maxLookahead);\n        const actualTokens = [];\n        for (let i = 1; i <= this.maxLookahead; i++) {\n            actualTokens.push(this.LA(i));\n        }\n        const previousToken = this.LA(0);\n        const errMsg = this.errorMessageProvider.buildNoViableAltMessage({\n            expectedPathsPerAlt: lookAheadPathsPerAlternative,\n            actual: actualTokens,\n            previous: previousToken,\n            customUserDescription: errMsgTypes,\n            ruleName: this.getCurrRuleFullName(),\n        });\n        throw this.SAVE_ERROR(new NoViableAltException(errMsg, this.LA(1), previousToken));\n    }\n}\n//# sourceMappingURL=error_handler.js.map","import { NextAfterTokenWalker, nextPossibleTokensAfter, } from \"../../grammar/interpreter.js\";\nimport { first, isUndefined } from \"lodash-es\";\nexport class ContentAssist {\n    initContentAssist() { }\n    computeContentAssist(startRuleName, precedingInput) {\n        const startRuleGast = this.gastProductionsCache[startRuleName];\n        if (isUndefined(startRuleGast)) {\n            throw Error(`Rule ->${startRuleName}<- does not exist in this grammar.`);\n        }\n        return nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n    }\n    // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n    // TODO: should this be more explicitly part of the public API?\n    getNextPossibleTokenTypes(grammarPath) {\n        const topRuleName = first(grammarPath.ruleStack);\n        const gastProductions = this.getGAstProductions();\n        const topProduction = gastProductions[topRuleName];\n        const nextPossibleTokenTypes = new NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n        return nextPossibleTokenTypes;\n    }\n}\n//# sourceMappingURL=context_assist.js.map","import { has } from \"lodash-es\";\nimport { timer } from \"@chevrotain/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser.js\";\n/**\n * Trait responsible for runtime parsing errors.\n */\nexport class PerformanceTracer {\n    initPerformanceTracer(config) {\n        if (has(config, \"traceInitPerf\")) {\n            const userTraceInitPerf = config.traceInitPerf;\n            const traceIsNumber = typeof userTraceInitPerf === \"number\";\n            this.traceInitMaxIdent = traceIsNumber\n                ? userTraceInitPerf\n                : Infinity;\n            this.traceInitPerf = traceIsNumber\n                ? userTraceInitPerf > 0\n                : userTraceInitPerf; // assumes end user provides the correct config value/type\n        }\n        else {\n            this.traceInitMaxIdent = 0;\n            this.traceInitPerf = DEFAULT_PARSER_CONFIG.traceInitPerf;\n        }\n        this.traceInitIndent = -1;\n    }\n    TRACE_INIT(phaseDesc, phaseImpl) {\n        // No need to optimize this using NOOP pattern because\n        // It is not called in a hot spot...\n        if (this.traceInitPerf === true) {\n            this.traceInitIndent++;\n            const indent = new Array(this.traceInitIndent + 1).join(\"\\t\");\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                console.log(`${indent}--> <${phaseDesc}>`);\n            }\n            const { time, value } = timer(phaseImpl);\n            /* istanbul ignore next - Difficult to reproduce specific performance behavior (>10ms) in tests */\n            const traceMethod = time > 10 ? console.warn : console.log;\n            if (this.traceInitIndent < this.traceInitMaxIdent) {\n                traceMethod(`${indent}<-- <${phaseDesc}> time: ${time}ms`);\n            }\n            this.traceInitIndent--;\n            return value;\n        }\n        else {\n            return phaseImpl();\n        }\n    }\n}\n//# sourceMappingURL=perf_tracer.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nimport filter from \"lodash-es/filter.js\";\nimport { Alternation, NonTerminal, Option, RepetitionMandatory, Repetition, Terminal, RepetitionWithSeparator, RepetitionMandatoryWithSeparator } from \"chevrotain\";\nexport function buildATNKey(rule, type, occurrence) {\n    return `${rule.name}_${type}_${occurrence}`;\n}\nexport const ATN_INVALID_TYPE = 0;\nexport const ATN_BASIC = 1;\nexport const ATN_RULE_START = 2;\nexport const ATN_PLUS_BLOCK_START = 4;\nexport const ATN_STAR_BLOCK_START = 5;\n// Currently unused as the ATN is not used for lexing\nexport const ATN_TOKEN_START = 6;\nexport const ATN_RULE_STOP = 7;\nexport const ATN_BLOCK_END = 8;\nexport const ATN_STAR_LOOP_BACK = 9;\nexport const ATN_STAR_LOOP_ENTRY = 10;\nexport const ATN_PLUS_LOOP_BACK = 11;\nexport const ATN_LOOP_END = 12;\nexport class AbstractTransition {\n    constructor(target) {\n        this.target = target;\n    }\n    isEpsilon() {\n        return false;\n    }\n}\nexport class AtomTransition extends AbstractTransition {\n    constructor(target, tokenType) {\n        super(target);\n        this.tokenType = tokenType;\n    }\n}\nexport class EpsilonTransition extends AbstractTransition {\n    constructor(target) {\n        super(target);\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport class RuleTransition extends AbstractTransition {\n    constructor(ruleStart, rule, followState) {\n        super(ruleStart);\n        this.rule = rule;\n        this.followState = followState;\n    }\n    isEpsilon() {\n        return true;\n    }\n}\nexport function createATN(rules) {\n    const atn = {\n        decisionMap: {},\n        decisionStates: [],\n        ruleToStartState: new Map(),\n        ruleToStopState: new Map(),\n        states: []\n    };\n    createRuleStartAndStopATNStates(atn, rules);\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const ruleBlock = block(atn, rule, rule);\n        if (ruleBlock === undefined) {\n            continue;\n        }\n        buildRuleHandle(atn, rule, ruleBlock);\n    }\n    return atn;\n}\nfunction createRuleStartAndStopATNStates(atn, rules) {\n    const ruleLength = rules.length;\n    for (let i = 0; i < ruleLength; i++) {\n        const rule = rules[i];\n        const start = newState(atn, rule, undefined, {\n            type: ATN_RULE_START\n        });\n        const stop = newState(atn, rule, undefined, {\n            type: ATN_RULE_STOP\n        });\n        start.stop = stop;\n        atn.ruleToStartState.set(rule, start);\n        atn.ruleToStopState.set(rule, stop);\n    }\n}\nfunction atom(atn, rule, production) {\n    if (production instanceof Terminal) {\n        return tokenRef(atn, rule, production.terminalType, production);\n    }\n    else if (production instanceof NonTerminal) {\n        return ruleRef(atn, rule, production);\n    }\n    else if (production instanceof Alternation) {\n        return alternation(atn, rule, production);\n    }\n    else if (production instanceof Option) {\n        return option(atn, rule, production);\n    }\n    else if (production instanceof Repetition) {\n        return repetition(atn, rule, production);\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return repetitionSep(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return repetitionMandatory(atn, rule, production);\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return repetitionMandatorySep(atn, rule, production);\n    }\n    else {\n        return block(atn, rule, production);\n    }\n}\nfunction repetition(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    return star(atn, rule, repetition, handle);\n}\nfunction repetitionSep(atn, rule, repetition) {\n    const starState = newState(atn, rule, repetition, {\n        type: ATN_STAR_BLOCK_START\n    });\n    defineDecisionState(atn, starState);\n    const handle = makeAlts(atn, rule, starState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return star(atn, rule, repetition, handle, sep);\n}\nfunction repetitionMandatory(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    return plus(atn, rule, repetition, handle);\n}\nfunction repetitionMandatorySep(atn, rule, repetition) {\n    const plusState = newState(atn, rule, repetition, {\n        type: ATN_PLUS_BLOCK_START\n    });\n    defineDecisionState(atn, plusState);\n    const handle = makeAlts(atn, rule, plusState, repetition, block(atn, rule, repetition));\n    const sep = tokenRef(atn, rule, repetition.separator, repetition);\n    return plus(atn, rule, repetition, handle, sep);\n}\nfunction alternation(atn, rule, alternation) {\n    const start = newState(atn, rule, alternation, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const alts = map(alternation.definition, (e) => atom(atn, rule, e));\n    const handle = makeAlts(atn, rule, start, alternation, ...alts);\n    return handle;\n}\nfunction option(atn, rule, option) {\n    const start = newState(atn, rule, option, {\n        type: ATN_BASIC\n    });\n    defineDecisionState(atn, start);\n    const handle = makeAlts(atn, rule, start, option, block(atn, rule, option));\n    return optional(atn, rule, option, handle);\n}\nfunction block(atn, rule, block) {\n    const handles = filter(map(block.definition, (e) => atom(atn, rule, e)), (e) => e !== undefined);\n    if (handles.length === 1) {\n        return handles[0];\n    }\n    else if (handles.length === 0) {\n        return undefined;\n    }\n    else {\n        return makeBlock(atn, handles);\n    }\n}\nfunction plus(atn, rule, plus, handle, sep) {\n    const blkStart = handle.left;\n    const blkEnd = handle.right;\n    const loop = newState(atn, rule, plus, {\n        type: ATN_PLUS_LOOP_BACK\n    });\n    defineDecisionState(atn, loop);\n    const end = newState(atn, rule, plus, {\n        type: ATN_LOOP_END\n    });\n    blkStart.loopback = loop;\n    end.loopback = loop;\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionMandatoryWithSeparator' : 'RepetitionMandatory', plus.idx)] = loop;\n    epsilon(blkEnd, loop); // block can see loop back\n    // Depending on whether we have a separator we put the exit transition at index 1 or 0\n    // This influences the chosen option in the lookahead DFA\n    if (sep === undefined) {\n        epsilon(loop, blkStart); // loop back to start\n        epsilon(loop, end); // exit\n    }\n    else {\n        epsilon(loop, end); // exit\n        // loop back to start with separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, blkStart);\n    }\n    return {\n        left: blkStart,\n        right: end\n    };\n}\nfunction star(atn, rule, star, handle, sep) {\n    const start = handle.left;\n    const end = handle.right;\n    const entry = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_ENTRY\n    });\n    defineDecisionState(atn, entry);\n    const loopEnd = newState(atn, rule, star, {\n        type: ATN_LOOP_END\n    });\n    const loop = newState(atn, rule, star, {\n        type: ATN_STAR_LOOP_BACK\n    });\n    entry.loopback = loop;\n    loopEnd.loopback = loop;\n    epsilon(entry, start); // loop enter edge (alt 2)\n    epsilon(entry, loopEnd); // bypass loop edge (alt 1)\n    epsilon(end, loop); // block end hits loop back\n    if (sep !== undefined) {\n        epsilon(loop, loopEnd); // end loop\n        // loop back to start of handle using separator\n        epsilon(loop, sep.left);\n        epsilon(sep.right, start);\n    }\n    else {\n        epsilon(loop, entry); // loop back to entry/exit decision\n    }\n    atn.decisionMap[buildATNKey(rule, sep ? 'RepetitionWithSeparator' : 'Repetition', star.idx)] = entry;\n    return {\n        left: entry,\n        right: loopEnd\n    };\n}\nfunction optional(atn, rule, optional, handle) {\n    const start = handle.left;\n    const end = handle.right;\n    epsilon(start, end);\n    atn.decisionMap[buildATNKey(rule, 'Option', optional.idx)] = start;\n    return handle;\n}\nfunction defineDecisionState(atn, state) {\n    atn.decisionStates.push(state);\n    state.decision = atn.decisionStates.length - 1;\n    return state.decision;\n}\nfunction makeAlts(atn, rule, start, production, ...alts) {\n    const end = newState(atn, rule, production, {\n        type: ATN_BLOCK_END,\n        start\n    });\n    start.end = end;\n    for (const alt of alts) {\n        if (alt !== undefined) {\n            // hook alts up to decision block\n            epsilon(start, alt.left);\n            epsilon(alt.right, end);\n        }\n        else {\n            epsilon(start, end);\n        }\n    }\n    const handle = {\n        left: start,\n        right: end\n    };\n    atn.decisionMap[buildATNKey(rule, getProdType(production), production.idx)] = start;\n    return handle;\n}\nfunction getProdType(production) {\n    if (production instanceof Alternation) {\n        return 'Alternation';\n    }\n    else if (production instanceof Option) {\n        return 'Option';\n    }\n    else if (production instanceof Repetition) {\n        return 'Repetition';\n    }\n    else if (production instanceof RepetitionWithSeparator) {\n        return 'RepetitionWithSeparator';\n    }\n    else if (production instanceof RepetitionMandatory) {\n        return 'RepetitionMandatory';\n    }\n    else if (production instanceof RepetitionMandatoryWithSeparator) {\n        return 'RepetitionMandatoryWithSeparator';\n    }\n    else {\n        throw new Error('Invalid production type encountered');\n    }\n}\nfunction makeBlock(atn, alts) {\n    const altsLength = alts.length;\n    for (let i = 0; i < altsLength - 1; i++) {\n        const handle = alts[i];\n        let transition;\n        if (handle.left.transitions.length === 1) {\n            transition = handle.left.transitions[0];\n        }\n        const isRuleTransition = transition instanceof RuleTransition;\n        const ruleTransition = transition;\n        const next = alts[i + 1].left;\n        if (handle.left.type === ATN_BASIC &&\n            handle.right.type === ATN_BASIC &&\n            transition !== undefined &&\n            ((isRuleTransition && ruleTransition.followState === handle.right) ||\n                transition.target === handle.right)) {\n            // we can avoid epsilon edge to next element\n            if (isRuleTransition) {\n                ruleTransition.followState = next;\n            }\n            else {\n                transition.target = next;\n            }\n            removeState(atn, handle.right); // we skipped over this state\n        }\n        else {\n            // need epsilon if previous block's right end node is complex\n            epsilon(handle.right, next);\n        }\n    }\n    const first = alts[0];\n    const last = alts[altsLength - 1];\n    return {\n        left: first.left,\n        right: last.right\n    };\n}\nfunction tokenRef(atn, rule, tokenType, production) {\n    const left = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, rule, production, {\n        type: ATN_BASIC\n    });\n    addTransition(left, new AtomTransition(right, tokenType));\n    return {\n        left,\n        right\n    };\n}\nfunction ruleRef(atn, currentRule, nonTerminal) {\n    const rule = nonTerminal.referencedRule;\n    const start = atn.ruleToStartState.get(rule);\n    const left = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const right = newState(atn, currentRule, nonTerminal, {\n        type: ATN_BASIC\n    });\n    const call = new RuleTransition(start, rule, right);\n    addTransition(left, call);\n    return {\n        left,\n        right\n    };\n}\nfunction buildRuleHandle(atn, rule, block) {\n    const start = atn.ruleToStartState.get(rule);\n    epsilon(start, block.left);\n    const stop = atn.ruleToStopState.get(rule);\n    epsilon(block.right, stop);\n    const handle = {\n        left: start,\n        right: stop\n    };\n    return handle;\n}\nfunction epsilon(a, b) {\n    const transition = new EpsilonTransition(b);\n    addTransition(a, transition);\n}\nfunction newState(atn, rule, production, partial) {\n    const t = Object.assign({ atn,\n        production, epsilonOnlyTransitions: false, rule, transitions: [], nextTokenWithinRule: [], stateNumber: atn.states.length }, partial);\n    atn.states.push(t);\n    return t;\n}\nfunction addTransition(state, transition) {\n    // A single ATN state can only contain epsilon transitions or non-epsilon transitions\n    // Because they are never mixed, only setting the property for the first transition is fine\n    if (state.transitions.length === 0) {\n        state.epsilonOnlyTransitions = transition.isEpsilon();\n    }\n    state.transitions.push(transition);\n}\nfunction removeState(atn, state) {\n    atn.states.splice(atn.states.indexOf(state), 1);\n}\n//# sourceMappingURL=atn.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport map from \"lodash-es/map.js\";\nexport const DFA_ERROR = {};\nexport class ATNConfigSet {\n    constructor() {\n        this.map = {};\n        this.configs = [];\n    }\n    get size() {\n        return this.configs.length;\n    }\n    finalize() {\n        // Empties the map to free up memory\n        this.map = {};\n    }\n    add(config) {\n        const key = getATNConfigKey(config);\n        // Only add configs which don't exist in our map already\n        // While this does not influence the actual algorithm, adding them anyway would massively increase memory consumption\n        if (!(key in this.map)) {\n            this.map[key] = this.configs.length;\n            this.configs.push(config);\n        }\n    }\n    get elements() {\n        return this.configs;\n    }\n    get alts() {\n        return map(this.configs, (e) => e.alt);\n    }\n    get key() {\n        let value = \"\";\n        for (const k in this.map) {\n            value += k + \":\";\n        }\n        return value;\n    }\n}\nexport function getATNConfigKey(config, alt = true) {\n    return `${alt ? `a${config.alt}` : \"\"}s${config.state.stateNumber}:${config.stack.map((e) => e.stateNumber.toString()).join(\"_\")}`;\n}\n//# sourceMappingURL=dfa.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { tokenMatcher, tokenLabel, NonTerminal, Alternation, Option, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Repetition, Terminal, LLkLookaheadStrategy, getLookaheadPaths } from \"chevrotain\";\nimport { ATN_RULE_STOP, AtomTransition, buildATNKey, createATN, EpsilonTransition, RuleTransition } from \"./atn.js\";\nimport { ATNConfigSet, DFA_ERROR, getATNConfigKey } from \"./dfa.js\";\nimport min from \"lodash-es/min.js\";\nimport flatMap from \"lodash-es/flatMap.js\";\nimport uniqBy from \"lodash-es/uniqBy.js\";\nimport map from \"lodash-es/map.js\";\nimport flatten from \"lodash-es/flatten.js\";\nimport forEach from \"lodash-es/forEach.js\";\nimport isEmpty from \"lodash-es/isEmpty.js\";\nimport reduce from \"lodash-es/reduce.js\";\nfunction createDFACache(startState, decision) {\n    const map = {};\n    return (predicateSet) => {\n        const key = predicateSet.toString();\n        let existing = map[key];\n        if (existing !== undefined) {\n            return existing;\n        }\n        else {\n            existing = {\n                atnStartState: startState,\n                decision,\n                states: {}\n            };\n            map[key] = existing;\n            return existing;\n        }\n    };\n}\nclass PredicateSet {\n    constructor() {\n        this.predicates = [];\n    }\n    is(index) {\n        return index >= this.predicates.length || this.predicates[index];\n    }\n    set(index, value) {\n        this.predicates[index] = value;\n    }\n    toString() {\n        let value = \"\";\n        const size = this.predicates.length;\n        for (let i = 0; i < size; i++) {\n            value += this.predicates[i] === true ? \"1\" : \"0\";\n        }\n        return value;\n    }\n}\nconst EMPTY_PREDICATES = new PredicateSet();\nexport class LLStarLookaheadStrategy extends LLkLookaheadStrategy {\n    constructor(options) {\n        var _a;\n        super();\n        this.logging = (_a = options === null || options === void 0 ? void 0 : options.logging) !== null && _a !== void 0 ? _a : ((message) => console.log(message));\n    }\n    initialize(options) {\n        this.atn = createATN(options.rules);\n        this.dfas = initATNSimulator(this.atn);\n    }\n    validateAmbiguousAlternationAlternatives() {\n        return [];\n    }\n    validateEmptyOrAlternatives() {\n        return [];\n    }\n    buildLookaheadForAlternation(options) {\n        const { prodOccurrence, rule, hasPredicates, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, 'Alternation', prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const partialAlts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType: \"Alternation\",\n            rule: rule\n        }), (currAlt) => map(currAlt, (path) => path[0]));\n        if (isLL1Sequence(partialAlts, false) && !dynamicTokensEnabled) {\n            const choiceToAlt = reduce(partialAlts, (result, currAlt, idx) => {\n                forEach(currAlt, (currTokType) => {\n                    if (currTokType) {\n                        result[currTokType.tokenTypeIdx] = idx;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = idx;\n                        });\n                    }\n                });\n                return result;\n            }, {});\n            if (hasPredicates) {\n                return function (orAlts) {\n                    var _a;\n                    const nextToken = this.LA(1);\n                    const prediction = choiceToAlt[nextToken.tokenTypeIdx];\n                    if (orAlts !== undefined && prediction !== undefined) {\n                        const gate = (_a = orAlts[prediction]) === null || _a === void 0 ? void 0 : _a.GATE;\n                        if (gate !== undefined && gate.call(this) === false) {\n                            return undefined;\n                        }\n                    }\n                    return prediction;\n                };\n            }\n            else {\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx];\n                };\n            }\n        }\n        else if (hasPredicates) {\n            return function (orAlts) {\n                const predicates = new PredicateSet();\n                const length = orAlts === undefined ? 0 : orAlts.length;\n                for (let i = 0; i < length; i++) {\n                    const gate = orAlts === null || orAlts === void 0 ? void 0 : orAlts[i].GATE;\n                    predicates.set(i, gate === undefined || gate.call(this));\n                }\n                const result = adaptivePredict.call(this, dfas, decisionIndex, predicates, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n        else {\n            return function () {\n                const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n                return typeof result === 'number' ? result : undefined;\n            };\n        }\n    }\n    buildLookaheadForOptional(options) {\n        const { prodOccurrence, rule, prodType, dynamicTokensEnabled } = options;\n        const dfas = this.dfas;\n        const logging = this.logging;\n        const key = buildATNKey(rule, prodType, prodOccurrence);\n        const decisionState = this.atn.decisionMap[key];\n        const decisionIndex = decisionState.decision;\n        const alts = map(getLookaheadPaths({\n            maxLookahead: 1,\n            occurrence: prodOccurrence,\n            prodType,\n            rule\n        }), (e) => {\n            return map(e, (g) => g[0]);\n        });\n        if (isLL1Sequence(alts) && alts[0][0] && !dynamicTokensEnabled) {\n            const alt = alts[0];\n            const singleTokensTypes = flatten(alt);\n            if (singleTokensTypes.length === 1 &&\n                isEmpty(singleTokensTypes[0].categoryMatches)) {\n                const expectedTokenType = singleTokensTypes[0];\n                const expectedTokenUniqueKey = expectedTokenType.tokenTypeIdx;\n                return function () {\n                    return this.LA(1).tokenTypeIdx === expectedTokenUniqueKey;\n                };\n            }\n            else {\n                const choiceToAlt = reduce(singleTokensTypes, (result, currTokType) => {\n                    if (currTokType !== undefined) {\n                        result[currTokType.tokenTypeIdx] = true;\n                        forEach(currTokType.categoryMatches, (currExtendingType) => {\n                            result[currExtendingType] = true;\n                        });\n                    }\n                    return result;\n                }, {});\n                return function () {\n                    const nextToken = this.LA(1);\n                    return choiceToAlt[nextToken.tokenTypeIdx] === true;\n                };\n            }\n        }\n        return function () {\n            const result = adaptivePredict.call(this, dfas, decisionIndex, EMPTY_PREDICATES, logging);\n            return typeof result === \"object\" ? false : result === 0;\n        };\n    }\n}\nfunction isLL1Sequence(sequences, allowEmpty = true) {\n    const fullSet = new Set();\n    for (const alt of sequences) {\n        const altSet = new Set();\n        for (const tokType of alt) {\n            if (tokType === undefined) {\n                if (allowEmpty) {\n                    // Epsilon production encountered\n                    break;\n                }\n                else {\n                    return false;\n                }\n            }\n            const indices = [tokType.tokenTypeIdx].concat(tokType.categoryMatches);\n            for (const index of indices) {\n                if (fullSet.has(index)) {\n                    if (!altSet.has(index)) {\n                        return false;\n                    }\n                }\n                else {\n                    fullSet.add(index);\n                    altSet.add(index);\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction initATNSimulator(atn) {\n    const decisionLength = atn.decisionStates.length;\n    const decisionToDFA = Array(decisionLength);\n    for (let i = 0; i < decisionLength; i++) {\n        decisionToDFA[i] = createDFACache(atn.decisionStates[i], i);\n    }\n    return decisionToDFA;\n}\nfunction adaptivePredict(dfaCaches, decision, predicateSet, logging) {\n    const dfa = dfaCaches[decision](predicateSet);\n    let start = dfa.start;\n    if (start === undefined) {\n        const closure = computeStartState(dfa.atnStartState);\n        start = addDFAState(dfa, newDFAState(closure));\n        dfa.start = start;\n    }\n    const alt = performLookahead.apply(this, [dfa, start, predicateSet, logging]);\n    return alt;\n}\nfunction performLookahead(dfa, s0, predicateSet, logging) {\n    let previousD = s0;\n    let i = 1;\n    const path = [];\n    let t = this.LA(i++);\n    while (true) {\n        let d = getExistingTargetState(previousD, t);\n        if (d === undefined) {\n            d = computeLookaheadTarget.apply(this, [dfa, previousD, t, i, predicateSet, logging]);\n        }\n        if (d === DFA_ERROR) {\n            return buildAdaptivePredictError(path, previousD, t);\n        }\n        if (d.isAcceptState === true) {\n            return d.prediction;\n        }\n        previousD = d;\n        path.push(t);\n        t = this.LA(i++);\n    }\n}\nfunction computeLookaheadTarget(dfa, previousD, token, lookahead, predicateSet, logging) {\n    const reach = computeReachSet(previousD.configs, token, predicateSet);\n    if (reach.size === 0) {\n        addDFAEdge(dfa, previousD, token, DFA_ERROR);\n        return DFA_ERROR;\n    }\n    let newState = newDFAState(reach);\n    const predictedAlt = getUniqueAlt(reach, predicateSet);\n    if (predictedAlt !== undefined) {\n        newState.isAcceptState = true;\n        newState.prediction = predictedAlt;\n        newState.configs.uniqueAlt = predictedAlt;\n    }\n    else if (hasConflictTerminatingPrediction(reach)) {\n        const prediction = min(reach.alts);\n        newState.isAcceptState = true;\n        newState.prediction = prediction;\n        newState.configs.uniqueAlt = prediction;\n        reportLookaheadAmbiguity.apply(this, [dfa, lookahead, reach.alts, logging]);\n    }\n    newState = addDFAEdge(dfa, previousD, token, newState);\n    return newState;\n}\nfunction reportLookaheadAmbiguity(dfa, lookahead, ambiguityIndices, logging) {\n    const prefixPath = [];\n    for (let i = 1; i <= lookahead; i++) {\n        prefixPath.push(this.LA(i).tokenType);\n    }\n    const atnState = dfa.atnStartState;\n    const topLevelRule = atnState.rule;\n    const production = atnState.production;\n    const message = buildAmbiguityError({\n        topLevelRule,\n        ambiguityIndices,\n        production,\n        prefixPath\n    });\n    logging(message);\n}\nfunction buildAmbiguityError(options) {\n    const pathMsg = map(options.prefixPath, (currtok) => tokenLabel(currtok)).join(\", \");\n    const occurrence = options.production.idx === 0 ? \"\" : options.production.idx;\n    let currMessage = `Ambiguous Alternatives Detected: <${options.ambiguityIndices.join(\", \")}> in <${getProductionDslName(options.production)}${occurrence}>` +\n        ` inside <${options.topLevelRule.name}> Rule,\\n` +\n        `<${pathMsg}> may appears as a prefix path in all these alternatives.\\n`;\n    currMessage =\n        currMessage +\n            `See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n` +\n            `For Further details.`;\n    return currMessage;\n}\nfunction getProductionDslName(prod) {\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nfunction buildAdaptivePredictError(path, previous, current) {\n    const nextTransitions = flatMap(previous.configs.elements, (e) => e.state.transitions);\n    const nextTokenTypes = uniqBy(nextTransitions\n        .filter((e) => e instanceof AtomTransition)\n        .map((e) => e.tokenType), (e) => e.tokenTypeIdx);\n    return {\n        actualToken: current,\n        possibleTokenTypes: nextTokenTypes,\n        tokenPath: path\n    };\n}\nfunction getExistingTargetState(state, token) {\n    return state.edges[token.tokenTypeIdx];\n}\nfunction computeReachSet(configs, token, predicateSet) {\n    const intermediate = new ATNConfigSet();\n    const skippedStopStates = [];\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === false) {\n            continue;\n        }\n        if (c.state.type === ATN_RULE_STOP) {\n            skippedStopStates.push(c);\n            continue;\n        }\n        const transitionLength = c.state.transitions.length;\n        for (let i = 0; i < transitionLength; i++) {\n            const transition = c.state.transitions[i];\n            const target = getReachableTarget(transition, token);\n            if (target !== undefined) {\n                intermediate.add({\n                    state: target,\n                    alt: c.alt,\n                    stack: c.stack\n                });\n            }\n        }\n    }\n    let reach;\n    if (skippedStopStates.length === 0 && intermediate.size === 1) {\n        reach = intermediate;\n    }\n    if (reach === undefined) {\n        reach = new ATNConfigSet();\n        for (const c of intermediate.elements) {\n            closure(c, reach);\n        }\n    }\n    if (skippedStopStates.length > 0 && !hasConfigInRuleStopState(reach)) {\n        for (const c of skippedStopStates) {\n            reach.add(c);\n        }\n    }\n    return reach;\n}\nfunction getReachableTarget(transition, token) {\n    if (transition instanceof AtomTransition &&\n        tokenMatcher(token, transition.tokenType)) {\n        return transition.target;\n    }\n    return undefined;\n}\nfunction getUniqueAlt(configs, predicateSet) {\n    let alt;\n    for (const c of configs.elements) {\n        if (predicateSet.is(c.alt) === true) {\n            if (alt === undefined) {\n                alt = c.alt;\n            }\n            else if (alt !== c.alt) {\n                return undefined;\n            }\n        }\n    }\n    return alt;\n}\nfunction newDFAState(closure) {\n    return {\n        configs: closure,\n        edges: {},\n        isAcceptState: false,\n        prediction: -1\n    };\n}\nfunction addDFAEdge(dfa, from, token, to) {\n    to = addDFAState(dfa, to);\n    from.edges[token.tokenTypeIdx] = to;\n    return to;\n}\nfunction addDFAState(dfa, state) {\n    if (state === DFA_ERROR) {\n        return state;\n    }\n    // Repetitions have the same config set\n    // Therefore, storing the key of the config in a map allows us to create a loop in our DFA\n    const mapKey = state.configs.key;\n    const existing = dfa.states[mapKey];\n    if (existing !== undefined) {\n        return existing;\n    }\n    state.configs.finalize();\n    dfa.states[mapKey] = state;\n    return state;\n}\nfunction computeStartState(atnState) {\n    const configs = new ATNConfigSet();\n    const numberOfTransitions = atnState.transitions.length;\n    for (let i = 0; i < numberOfTransitions; i++) {\n        const target = atnState.transitions[i].target;\n        const config = {\n            state: target,\n            alt: i,\n            stack: []\n        };\n        closure(config, configs);\n    }\n    return configs;\n}\nfunction closure(config, configs) {\n    const p = config.state;\n    if (p.type === ATN_RULE_STOP) {\n        if (config.stack.length > 0) {\n            const atnStack = [...config.stack];\n            const followState = atnStack.pop();\n            const followConfig = {\n                state: followState,\n                alt: config.alt,\n                stack: atnStack\n            };\n            closure(followConfig, configs);\n        }\n        else {\n            // Dipping into outer context, simply add the config\n            // This will stop computation once every config is at the rule stop state\n            configs.add(config);\n        }\n        return;\n    }\n    if (!p.epsilonOnlyTransitions) {\n        configs.add(config);\n    }\n    const transitionLength = p.transitions.length;\n    for (let i = 0; i < transitionLength; i++) {\n        const transition = p.transitions[i];\n        const c = getEpsilonTarget(config, transition);\n        if (c !== undefined) {\n            closure(c, configs);\n        }\n    }\n}\nfunction getEpsilonTarget(config, transition) {\n    if (transition instanceof EpsilonTransition) {\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack: config.stack\n        };\n    }\n    else if (transition instanceof RuleTransition) {\n        const stack = [...config.stack, transition.followState];\n        return {\n            state: transition.target,\n            alt: config.alt,\n            stack\n        };\n    }\n    return undefined;\n}\nfunction hasConfigInRuleStopState(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type === ATN_RULE_STOP) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction allConfigsInRuleStopStates(configs) {\n    for (const c of configs.elements) {\n        if (c.state.type !== ATN_RULE_STOP) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction hasConflictTerminatingPrediction(configs) {\n    if (allConfigsInRuleStopStates(configs)) {\n        return true;\n    }\n    const altSets = getConflictingAltSets(configs.elements);\n    const heuristic = hasConflictingAltSet(altSets) && !hasStateAssociatedWithOneAlt(altSets);\n    return heuristic;\n}\nfunction getConflictingAltSets(configs) {\n    const configToAlts = new Map();\n    for (const c of configs) {\n        const key = getATNConfigKey(c, false);\n        let alts = configToAlts.get(key);\n        if (alts === undefined) {\n            alts = {};\n            configToAlts.set(key, alts);\n        }\n        alts[c.alt] = true;\n    }\n    return configToAlts;\n}\nfunction hasConflictingAltSet(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length > 1) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction hasStateAssociatedWithOneAlt(altSets) {\n    for (const value of Array.from(altSets.values())) {\n        if (Object.keys(value).length === 1) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=all-star-lookahead.js.map","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var DocumentUri;\n(function (DocumentUri) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    DocumentUri.is = is;\n})(DocumentUri || (DocumentUri = {}));\nexport var URI;\n(function (URI) {\n    function is(value) {\n        return typeof value === 'string';\n    }\n    URI.is = is;\n})(URI || (URI = {}));\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && integer.MIN_VALUE <= value && value <= integer.MAX_VALUE;\n    }\n    integer.is = is;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n    function is(value) {\n        return typeof value === 'number' && uinteger.MIN_VALUE <= value && value <= uinteger.MAX_VALUE;\n    }\n    uinteger.is = is;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * {@link Position} literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line, character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Position} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * {@link Range} literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Range} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * {@link Location} literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri, range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Location} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * {@link LocationLink} literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link LocationLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && Range.is(candidate.targetSelectionRange)\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link Color} literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red,\n            green,\n            blue,\n            alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Color} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * {@link ColorInformation} literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range,\n            color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * {@link ColorPresentation} literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label,\n            textEdit,\n            additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ColorInformation} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * A set of predefined range kinds.\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind.Comment = 'comment';\n    /**\n     * Folding range for an import or include\n     */\n    FoldingRangeKind.Imports = 'imports';\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind.Region = 'region';\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * {@link FoldingRange} literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\n        const result = {\n            startLine,\n            endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        if (Is.defined(collapsedText)) {\n            result.collapsedText = collapsedText;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FoldingRange} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * {@link DiagnosticRelatedInformation} literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location,\n            message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DiagnosticRelatedInformation} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * {@link Diagnostic} literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        let result = { range, message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Diagnostic} interface.\n     */\n    function is(value) {\n        var _a;\n        let candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * {@link Command} literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command, ...args) {\n        let result = { title, command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link Command} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range, newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates an insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        const result = { label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate);\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        const candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument, edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'create',\n            uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        let result = {\n            kind: 'rename',\n            oldUri,\n            newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        let result = {\n            kind: 'delete',\n            uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every((change) => {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nclass TextEditChangeImpl {\n    constructor(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    insert(position, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    replace(range, newText, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    delete(range, annotation) {\n        let edit;\n        let id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    add(edit) {\n        this.edits.push(edit);\n    }\n    all() {\n        return this.edits;\n    }\n    clear() {\n        this.edits.splice(0, this.edits.length);\n    }\n    assertChangeAnnotations(value) {\n        if (value === undefined) {\n            throw new Error(`Text edit change is not configured to manage change annotations.`);\n        }\n    }\n}\n/**\n * A helper class\n */\nclass ChangeAnnotations {\n    constructor(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    all() {\n        return this._annotations;\n    }\n    get size() {\n        return this._size;\n    }\n    manage(idOrAnnotation, annotation) {\n        let id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(`Id ${id} is already in use.`);\n        }\n        if (annotation === undefined) {\n            throw new Error(`No annotation provided for id ${id}`);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    }\n    nextId() {\n        this._counter++;\n        return this._counter.toString();\n    }\n}\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nexport class WorkspaceChange {\n    constructor(workspaceEdit) {\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach((change) => {\n                    if (TextDocumentEdit.is(change)) {\n                        const textEditChange = new TextEditChangeImpl(change.edits, this._changeAnnotations);\n                        this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach((key) => {\n                    const textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    /**\n     * Returns the underlying {@link WorkspaceEdit} literal\n     * use to be returned from a workspace edit operation like rename.\n     */\n    get edit() {\n        this.initDocumentChanges();\n        if (this._changeAnnotations !== undefined) {\n            if (this._changeAnnotations.size === 0) {\n                this._workspaceEdit.changeAnnotations = undefined;\n            }\n            else {\n                this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n            }\n        }\n        return this._workspaceEdit;\n    }\n    getTextEditChange(key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            const textDocument = { uri: key.uri, version: key.version };\n            let result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                const edits = [];\n                const textDocumentEdit = {\n                    textDocument,\n                    edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            let result = this._textEditChanges[key];\n            if (!result) {\n                let edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    }\n    initDocumentChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    }\n    initChanges() {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    }\n    createFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    renameFile(oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n    deleteFile(uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        let annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        let operation;\n        let id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    }\n}\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * {@link TextDocumentIdentifier} literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link VersionedTextDocumentIdentifier} literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link VersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * {@link OptionalVersionedTextDocumentIdentifier} literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param version The document's version.\n     */\n    function create(uri, version) {\n        return { uri, version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link OptionalVersionedTextDocumentIdentifier} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * {@link TextDocumentItem} literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri, languageId, version, text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link TextDocumentItem} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n    /**\n     * Checks whether the given value is a value of the {@link MarkupKind} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the {@link MarkupContent} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText, insert, replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InsertReplaceEdit} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\nexport var CompletionItemLabelDetails;\n(function (CompletionItemLabelDetails) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (Is.string(candidate.detail) || candidate.detail === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    CompletionItemLabelDetails.is = is;\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the {@link MarkedString} type.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the {@link Hover} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * {@link ParameterInformation} literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label, documentation } : { label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * {@link SignatureInformation} literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation, ...parameters) {\n        let result = { label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * {@link DocumentHighlight} literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     * @param kind The highlight kind\n     */\n    function create(range, kind) {\n        let result = { range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n *\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        let result = {\n            name,\n            kind,\n            location: { uri, range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var WorkspaceSymbol;\n(function (WorkspaceSymbol) {\n    /**\n     * Create a new workspace symbol.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param uri The resource of the location of the symbol.\n     * @param range An options range of the location.\n     * @returns A WorkspaceSymbol.\n     */\n    function create(name, kind, uri, range) {\n        return range !== undefined\n            ? { name, kind, location: { uri, range } }\n            : { name, kind, location: { uri } };\n    }\n    WorkspaceSymbol.create = create;\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        let result = {\n            name,\n            detail,\n            kind,\n            range,\n            selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentSymbol} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The reason why code actions were requested.\n *\n * @since 3.17.0\n */\nexport var CodeActionTriggerKind;\n(function (CodeActionTriggerKind) {\n    /**\n     * Code actions were explicitly requested by the user or by an extension.\n     */\n    CodeActionTriggerKind.Invoked = 1;\n    /**\n     * Code actions were requested automatically.\n     *\n     * This typically happens when current selection in a file changes, but can\n     * also be triggered when file content changes.\n     */\n    CodeActionTriggerKind.Automatic = 2;\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * {@link CodeActionContext} literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only, triggerKind) {\n        let result = { diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        if (triggerKind !== undefined && triggerKind !== null) {\n            result.triggerKind = triggerKind;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeActionContext} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is)\n            && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string))\n            && (candidate.triggerKind === undefined || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        let result = { title };\n        let checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * {@link CodeLens} literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        let result = { range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link CodeLens} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * {@link FormattingOptions} literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize, insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link FormattingOptions} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * {@link DocumentLink} literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range, target, data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link DocumentLink} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range, parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        let candidate = value;\n        return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\n/**\n * A set of predefined token types. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenTypes;\n(function (SemanticTokenTypes) {\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\n    /**\n     * Represents a generic type. Acts as a fallback for types which can't be mapped to\n     * a specific type like class or enum.\n     */\n    SemanticTokenTypes[\"type\"] = \"type\";\n    SemanticTokenTypes[\"class\"] = \"class\";\n    SemanticTokenTypes[\"enum\"] = \"enum\";\n    SemanticTokenTypes[\"interface\"] = \"interface\";\n    SemanticTokenTypes[\"struct\"] = \"struct\";\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\n    SemanticTokenTypes[\"variable\"] = \"variable\";\n    SemanticTokenTypes[\"property\"] = \"property\";\n    SemanticTokenTypes[\"enumMember\"] = \"enumMember\";\n    SemanticTokenTypes[\"event\"] = \"event\";\n    SemanticTokenTypes[\"function\"] = \"function\";\n    SemanticTokenTypes[\"method\"] = \"method\";\n    SemanticTokenTypes[\"macro\"] = \"macro\";\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\n    SemanticTokenTypes[\"modifier\"] = \"modifier\";\n    SemanticTokenTypes[\"comment\"] = \"comment\";\n    SemanticTokenTypes[\"string\"] = \"string\";\n    SemanticTokenTypes[\"number\"] = \"number\";\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\n    SemanticTokenTypes[\"operator\"] = \"operator\";\n    /**\n     * @since 3.17.0\n     */\n    SemanticTokenTypes[\"decorator\"] = \"decorator\";\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\n/**\n * A set of predefined token modifiers. This set is not fixed\n * an clients can specify additional token types via the\n * corresponding client capabilities.\n *\n * @since 3.16.0\n */\nexport var SemanticTokenModifiers;\n(function (SemanticTokenModifiers) {\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\n    SemanticTokenModifiers[\"static\"] = \"static\";\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\n    SemanticTokenModifiers[\"async\"] = \"async\";\n    SemanticTokenModifiers[\"modification\"] = \"modification\";\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\n    SemanticTokenModifiers[\"defaultLibrary\"] = \"defaultLibrary\";\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\n/**\n * @since 3.16.0\n */\nexport var SemanticTokens;\n(function (SemanticTokens) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\n    }\n    SemanticTokens.is = is;\n})(SemanticTokens || (SemanticTokens = {}));\n/**\n * The InlineValueText namespace provides functions to deal with InlineValueTexts.\n *\n * @since 3.17.0\n */\nexport var InlineValueText;\n(function (InlineValueText) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, text) {\n        return { range, text };\n    }\n    InlineValueText.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\n    }\n    InlineValueText.is = is;\n})(InlineValueText || (InlineValueText = {}));\n/**\n * The InlineValueVariableLookup namespace provides functions to deal with InlineValueVariableLookups.\n *\n * @since 3.17.0\n */\nexport var InlineValueVariableLookup;\n(function (InlineValueVariableLookup) {\n    /**\n     * Creates a new InlineValueText literal.\n     */\n    function create(range, variableName, caseSensitiveLookup) {\n        return { range, variableName, caseSensitiveLookup };\n    }\n    InlineValueVariableLookup.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup)\n            && (Is.string(candidate.variableName) || candidate.variableName === undefined);\n    }\n    InlineValueVariableLookup.is = is;\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\n/**\n * The InlineValueEvaluatableExpression namespace provides functions to deal with InlineValueEvaluatableExpression.\n *\n * @since 3.17.0\n */\nexport var InlineValueEvaluatableExpression;\n(function (InlineValueEvaluatableExpression) {\n    /**\n     * Creates a new InlineValueEvaluatableExpression literal.\n     */\n    function create(range, expression) {\n        return { range, expression };\n    }\n    InlineValueEvaluatableExpression.create = create;\n    function is(value) {\n        const candidate = value;\n        return candidate !== undefined && candidate !== null && Range.is(candidate.range)\n            && (Is.string(candidate.expression) || candidate.expression === undefined);\n    }\n    InlineValueEvaluatableExpression.is = is;\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\n/**\n * The InlineValueContext namespace provides helper functions to work with\n * {@link InlineValueContext} literals.\n *\n * @since 3.17.0\n */\nexport var InlineValueContext;\n(function (InlineValueContext) {\n    /**\n     * Creates a new InlineValueContext literal.\n     */\n    function create(frameId, stoppedLocation) {\n        return { frameId, stoppedLocation };\n    }\n    InlineValueContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link InlineValueContext} interface.\n     */\n    function is(value) {\n        const candidate = value;\n        return Is.defined(candidate) && Range.is(value.stoppedLocation);\n    }\n    InlineValueContext.is = is;\n})(InlineValueContext || (InlineValueContext = {}));\n/**\n * Inlay hint kinds.\n *\n * @since 3.17.0\n */\nexport var InlayHintKind;\n(function (InlayHintKind) {\n    /**\n     * An inlay hint that for a type annotation.\n     */\n    InlayHintKind.Type = 1;\n    /**\n     * An inlay hint that is for a parameter.\n     */\n    InlayHintKind.Parameter = 2;\n    function is(value) {\n        return value === 1 || value === 2;\n    }\n    InlayHintKind.is = is;\n})(InlayHintKind || (InlayHintKind = {}));\nexport var InlayHintLabelPart;\n(function (InlayHintLabelPart) {\n    function create(value) {\n        return { value };\n    }\n    InlayHintLabelPart.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.location === undefined || Location.is(candidate.location))\n            && (candidate.command === undefined || Command.is(candidate.command));\n    }\n    InlayHintLabelPart.is = is;\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\nexport var InlayHint;\n(function (InlayHint) {\n    function create(position, label, kind) {\n        const result = { position, label };\n        if (kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    InlayHint.create = create;\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.position)\n            && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is))\n            && (candidate.kind === undefined || InlayHintKind.is(candidate.kind))\n            && (candidate.textEdits === undefined) || Is.typedArray(candidate.textEdits, TextEdit.is)\n            && (candidate.tooltip === undefined || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip))\n            && (candidate.paddingLeft === undefined || Is.boolean(candidate.paddingLeft))\n            && (candidate.paddingRight === undefined || Is.boolean(candidate.paddingRight));\n    }\n    InlayHint.is = is;\n})(InlayHint || (InlayHint = {}));\nexport var StringValue;\n(function (StringValue) {\n    function createSnippet(value) {\n        return { kind: 'snippet', value };\n    }\n    StringValue.createSnippet = createSnippet;\n})(StringValue || (StringValue = {}));\nexport var InlineCompletionItem;\n(function (InlineCompletionItem) {\n    function create(insertText, filterText, range, command) {\n        return { insertText, filterText, range, command };\n    }\n    InlineCompletionItem.create = create;\n})(InlineCompletionItem || (InlineCompletionItem = {}));\nexport var InlineCompletionList;\n(function (InlineCompletionList) {\n    function create(items) {\n        return { items };\n    }\n    InlineCompletionList.create = create;\n})(InlineCompletionList || (InlineCompletionList = {}));\n/**\n * Describes how an {@link InlineCompletionItemProvider inline completion provider} was triggered.\n *\n * @since 3.18.0\n * @proposed\n */\nexport var InlineCompletionTriggerKind;\n(function (InlineCompletionTriggerKind) {\n    /**\n     * Completion was triggered explicitly by a user gesture.\n     */\n    InlineCompletionTriggerKind.Invoked = 0;\n    /**\n     * Completion was triggered automatically while editing.\n     */\n    InlineCompletionTriggerKind.Automatic = 1;\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\nexport var SelectedCompletionInfo;\n(function (SelectedCompletionInfo) {\n    function create(range, text) {\n        return { range, text };\n    }\n    SelectedCompletionInfo.create = create;\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\nexport var InlineCompletionContext;\n(function (InlineCompletionContext) {\n    function create(triggerKind, selectedCompletionInfo) {\n        return { triggerKind, selectedCompletionInfo };\n    }\n    InlineCompletionContext.create = create;\n})(InlineCompletionContext || (InlineCompletionContext = {}));\nexport var WorkspaceFolder;\n(function (WorkspaceFolder) {\n    function is(value) {\n        const candidate = value;\n        return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\n    }\n    WorkspaceFolder.is = is;\n})(WorkspaceFolder || (WorkspaceFolder = {}));\nexport const EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId The document's language Id.\n     * @param version The document's version.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the {@link ITextDocument} interface.\n     */\n    function is(value) {\n        let candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        let text = document.getText();\n        let sortedEdits = mergeSort(edits, (a, b) => {\n            let diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = text.length;\n        for (let i = sortedEdits.length - 1; i >= 0; i--) {\n            let e = sortedEdits[i];\n            let startOffset = document.offsetAt(e.range.start);\n            let endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        const p = (data.length / 2) | 0;\n        const left = data.slice(0, p);\n        const right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        let leftIdx = 0;\n        let rightIdx = 0;\n        let i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            let ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            let start = this.offsetAt(range.start);\n            let end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            let lineOffsets = [];\n            let text = this._content;\n            let isLineStart = true;\n            for (let i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                let ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        let lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            let mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        let line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    }\n    offsetAt(position) {\n        let lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        let lineOffset = lineOffsets[position.line];\n        let nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n}\nvar Is;\n(function (Is) {\n    const toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position } from 'vscode-languageserver-types';\nimport { isCompositeCstNode } from '../syntax-tree.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nexport class CstNodeBuilder {\n    constructor() {\n        this.nodeStack = [];\n    }\n    get current() {\n        return this.nodeStack[this.nodeStack.length - 1];\n    }\n    buildRootNode(input) {\n        this.rootNode = new RootCstNodeImpl(input);\n        this.rootNode.root = this.rootNode;\n        this.nodeStack = [this.rootNode];\n        return this.rootNode;\n    }\n    buildCompositeNode(feature) {\n        const compositeNode = new CompositeCstNodeImpl();\n        compositeNode.grammarSource = feature;\n        compositeNode.root = this.rootNode;\n        this.current.content.push(compositeNode);\n        this.nodeStack.push(compositeNode);\n        return compositeNode;\n    }\n    buildLeafNode(token, feature) {\n        const leafNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, false);\n        leafNode.grammarSource = feature;\n        leafNode.root = this.rootNode;\n        this.current.content.push(leafNode);\n        return leafNode;\n    }\n    removeNode(node) {\n        const parent = node.container;\n        if (parent) {\n            const index = parent.content.indexOf(node);\n            if (index >= 0) {\n                parent.content.splice(index, 1);\n            }\n        }\n    }\n    construct(item) {\n        const current = this.current;\n        // The specified item could be a datatype ($type is symbol) or a fragment ($type is undefined)\n        // Only if the $type is a string, we actually assign the element\n        if (typeof item.$type === 'string') {\n            this.current.astNode = item;\n        }\n        item.$cstNode = current;\n        const node = this.nodeStack.pop();\n        // Empty composite nodes are not valid\n        // Simply remove the node from the tree\n        if ((node === null || node === void 0 ? void 0 : node.content.length) === 0) {\n            this.removeNode(node);\n        }\n    }\n    addHiddenTokens(hiddenTokens) {\n        for (const token of hiddenTokens) {\n            const hiddenNode = new LeafCstNodeImpl(token.startOffset, token.image.length, tokenToRange(token), token.tokenType, true);\n            hiddenNode.root = this.rootNode;\n            this.addHiddenToken(this.rootNode, hiddenNode);\n        }\n    }\n    addHiddenToken(node, token) {\n        const { offset: tokenStart, end: tokenEnd } = token;\n        for (let i = 0; i < node.content.length; i++) {\n            const child = node.content[i];\n            const { offset: childStart, end: childEnd } = child;\n            if (isCompositeCstNode(child) && tokenStart > childStart && tokenEnd < childEnd) {\n                this.addHiddenToken(child, token);\n                return;\n            }\n            else if (tokenEnd <= childStart) {\n                node.content.splice(i, 0, token);\n                return;\n            }\n        }\n        // We know that we haven't found a suited position for the token\n        // So we simply add it to the end of the current node\n        node.content.push(token);\n    }\n}\nexport class AbstractCstNode {\n    /** @deprecated use `container` instead. */\n    get parent() {\n        return this.container;\n    }\n    /** @deprecated use `grammarSource` instead. */\n    get feature() {\n        return this.grammarSource;\n    }\n    get hidden() {\n        return false;\n    }\n    get astNode() {\n        var _a, _b;\n        const node = typeof ((_a = this._astNode) === null || _a === void 0 ? void 0 : _a.$type) === 'string' ? this._astNode : (_b = this.container) === null || _b === void 0 ? void 0 : _b.astNode;\n        if (!node) {\n            throw new Error('This node has no associated AST element');\n        }\n        return node;\n    }\n    set astNode(value) {\n        this._astNode = value;\n    }\n    /** @deprecated use `astNode` instead. */\n    get element() {\n        return this.astNode;\n    }\n    get text() {\n        return this.root.fullText.substring(this.offset, this.end);\n    }\n}\nexport class LeafCstNodeImpl extends AbstractCstNode {\n    get offset() {\n        return this._offset;\n    }\n    get length() {\n        return this._length;\n    }\n    get end() {\n        return this._offset + this._length;\n    }\n    get hidden() {\n        return this._hidden;\n    }\n    get tokenType() {\n        return this._tokenType;\n    }\n    get range() {\n        return this._range;\n    }\n    constructor(offset, length, range, tokenType, hidden = false) {\n        super();\n        this._hidden = hidden;\n        this._offset = offset;\n        this._tokenType = tokenType;\n        this._length = length;\n        this._range = range;\n    }\n}\nexport class CompositeCstNodeImpl extends AbstractCstNode {\n    constructor() {\n        super(...arguments);\n        this.content = new CstNodeContainer(this);\n    }\n    /** @deprecated use `content` instead. */\n    get children() {\n        return this.content;\n    }\n    get offset() {\n        var _a, _b;\n        return (_b = (_a = this.firstNonHiddenNode) === null || _a === void 0 ? void 0 : _a.offset) !== null && _b !== void 0 ? _b : 0;\n    }\n    get length() {\n        return this.end - this.offset;\n    }\n    get end() {\n        var _a, _b;\n        return (_b = (_a = this.lastNonHiddenNode) === null || _a === void 0 ? void 0 : _a.end) !== null && _b !== void 0 ? _b : 0;\n    }\n    get range() {\n        const firstNode = this.firstNonHiddenNode;\n        const lastNode = this.lastNonHiddenNode;\n        if (firstNode && lastNode) {\n            if (this._rangeCache === undefined) {\n                const { range: firstRange } = firstNode;\n                const { range: lastRange } = lastNode;\n                this._rangeCache = { start: firstRange.start, end: lastRange.end.line < firstRange.start.line ? firstRange.start : lastRange.end };\n            }\n            return this._rangeCache;\n        }\n        else {\n            return { start: Position.create(0, 0), end: Position.create(0, 0) };\n        }\n    }\n    get firstNonHiddenNode() {\n        for (const child of this.content) {\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[0];\n    }\n    get lastNonHiddenNode() {\n        for (let i = this.content.length - 1; i >= 0; i--) {\n            const child = this.content[i];\n            if (!child.hidden) {\n                return child;\n            }\n        }\n        return this.content[this.content.length - 1];\n    }\n}\nclass CstNodeContainer extends Array {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        Object.setPrototypeOf(this, CstNodeContainer.prototype);\n    }\n    push(...items) {\n        this.addParents(items);\n        return super.push(...items);\n    }\n    unshift(...items) {\n        this.addParents(items);\n        return super.unshift(...items);\n    }\n    splice(start, count, ...items) {\n        this.addParents(items);\n        return super.splice(start, count, ...items);\n    }\n    addParents(items) {\n        for (const item of items) {\n            item.container = this.parent;\n        }\n    }\n}\nexport class RootCstNodeImpl extends CompositeCstNodeImpl {\n    get text() {\n        return this._text.substring(this.offset, this.end);\n    }\n    get fullText() {\n        return this._text;\n    }\n    constructor(input) {\n        super();\n        this._text = '';\n        this._text = input !== null && input !== void 0 ? input : '';\n    }\n}\n//# sourceMappingURL=cst-node-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { defaultParserErrorProvider, EmbeddedActionsParser, LLkLookaheadStrategy } from 'chevrotain';\nimport { LLStarLookaheadStrategy } from 'chevrotain-allstar';\nimport { isAssignment, isCrossReference, isKeyword } from '../languages/generated/ast.js';\nimport { getTypeName, isDataTypeRule } from '../utils/grammar-utils.js';\nimport { assignMandatoryProperties, getContainerOfType, linkContentToContainer } from '../utils/ast-utils.js';\nimport { CstNodeBuilder } from './cst-node-builder.js';\nexport const DatatypeSymbol = Symbol('Datatype');\nfunction isDataTypeNode(node) {\n    return node.$type === DatatypeSymbol;\n}\nconst ruleSuffix = '\\u200B';\nconst withRuleSuffix = (name) => name.endsWith(ruleSuffix) ? name : name + ruleSuffix;\nexport class AbstractLangiumParser {\n    constructor(services) {\n        this._unorderedGroups = new Map();\n        this.lexer = services.parser.Lexer;\n        const tokens = this.lexer.definition;\n        this.wrapper = new ChevrotainWrapper(tokens, Object.assign(Object.assign({}, services.parser.ParserConfig), { errorMessageProvider: services.parser.ParserErrorMessageProvider }));\n    }\n    alternatives(idx, choices) {\n        this.wrapper.wrapOr(idx, choices);\n    }\n    optional(idx, callback) {\n        this.wrapper.wrapOption(idx, callback);\n    }\n    many(idx, callback) {\n        this.wrapper.wrapMany(idx, callback);\n    }\n    atLeastOne(idx, callback) {\n        this.wrapper.wrapAtLeastOne(idx, callback);\n    }\n    isRecording() {\n        return this.wrapper.IS_RECORDING;\n    }\n    get unorderedGroups() {\n        return this._unorderedGroups;\n    }\n    getRuleStack() {\n        return this.wrapper.RULE_STACK;\n    }\n    finalize() {\n        this.wrapper.wrapSelfAnalysis();\n    }\n}\nexport class LangiumParser extends AbstractLangiumParser {\n    get current() {\n        return this.stack[this.stack.length - 1];\n    }\n    constructor(services) {\n        super(services);\n        this.nodeBuilder = new CstNodeBuilder();\n        this.stack = [];\n        this.assignmentMap = new Map();\n        this.linker = services.references.Linker;\n        this.converter = services.parser.ValueConverter;\n        this.astReflection = services.shared.AstReflection;\n    }\n    rule(rule, impl) {\n        const type = rule.fragment ? undefined : isDataTypeRule(rule) ? DatatypeSymbol : getTypeName(rule);\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(type, impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    parse(input) {\n        this.nodeBuilder.buildRootNode(input);\n        const lexerResult = this.lexer.tokenize(input);\n        this.wrapper.input = lexerResult.tokens;\n        const result = this.mainRule.call(this.wrapper, {});\n        this.nodeBuilder.addHiddenTokens(lexerResult.hidden);\n        this.unorderedGroups.clear();\n        return {\n            value: result,\n            lexerErrors: lexerResult.errors,\n            parserErrors: this.wrapper.errors\n        };\n    }\n    startImplementation($type, implementation) {\n        return (args) => {\n            if (!this.isRecording()) {\n                const node = { $type };\n                this.stack.push(node);\n                if ($type === DatatypeSymbol) {\n                    node.value = '';\n                }\n            }\n            let result;\n            try {\n                result = implementation(args);\n            }\n            catch (err) {\n                result = undefined;\n            }\n            if (!this.isRecording() && result === undefined) {\n                result = this.construct();\n            }\n            return result;\n        };\n    }\n    consume(idx, tokenType, feature) {\n        const token = this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording() && this.isValidToken(token)) {\n            const leafNode = this.nodeBuilder.buildLeafNode(token, feature);\n            const { assignment, isCrossRef } = this.getAssignment(feature);\n            const current = this.current;\n            if (assignment) {\n                const convertedValue = isKeyword(feature) ? token.image : this.converter.convert(token.image, leafNode);\n                this.assign(assignment.operator, assignment.feature, convertedValue, leafNode, isCrossRef);\n            }\n            else if (isDataTypeNode(current)) {\n                let text = token.image;\n                if (!isKeyword(feature)) {\n                    text = this.converter.convert(text, leafNode).toString();\n                }\n                current.value += text;\n            }\n        }\n    }\n    /**\n     * Most consumed parser tokens are valid. However there are two cases in which they are not valid:\n     *\n     * 1. They were inserted during error recovery by the parser. These tokens don't really exist and should not be further processed\n     * 2. They contain invalid token ranges. This might include the special EOF token, or other tokens produced by invalid token builders.\n     */\n    isValidToken(token) {\n        return !token.isInsertedInRecovery && !isNaN(token.startOffset) && typeof token.endOffset === 'number' && !isNaN(token.endOffset);\n    }\n    subrule(idx, rule, feature, args) {\n        let cstNode;\n        if (!this.isRecording()) {\n            cstNode = this.nodeBuilder.buildCompositeNode(feature);\n        }\n        const subruleResult = this.wrapper.wrapSubrule(idx, rule, args);\n        if (!this.isRecording() && cstNode && cstNode.length > 0) {\n            this.performSubruleAssignment(subruleResult, feature, cstNode);\n        }\n    }\n    performSubruleAssignment(result, feature, cstNode) {\n        const { assignment, isCrossRef } = this.getAssignment(feature);\n        if (assignment) {\n            this.assign(assignment.operator, assignment.feature, result, cstNode, isCrossRef);\n        }\n        else if (!assignment) {\n            // If we call a subrule without an assignment we either:\n            // 1. append the result of the subrule (data type rule)\n            // 2. override the current object with the newly parsed object\n            // If the current element is an AST node and the result of the subrule\n            // is a data type rule, we can safely discard the results.\n            const current = this.current;\n            if (isDataTypeNode(current)) {\n                current.value += result.toString();\n            }\n            else if (typeof result === 'object' && result) {\n                const resultKind = result.$type;\n                const object = this.assignWithoutOverride(result, current);\n                if (resultKind) {\n                    object.$type = resultKind;\n                }\n                const newItem = object;\n                this.stack.pop();\n                this.stack.push(newItem);\n            }\n        }\n    }\n    action($type, action) {\n        if (!this.isRecording()) {\n            let last = this.current;\n            // This branch is used for left recursive grammar rules.\n            // Those don't call `construct` before another action.\n            // Therefore, we need to call it here.\n            if (!last.$cstNode && action.feature && action.operator) {\n                last = this.construct(false);\n                const feature = last.$cstNode.feature;\n                this.nodeBuilder.buildCompositeNode(feature);\n            }\n            const newItem = { $type };\n            this.stack.pop();\n            this.stack.push(newItem);\n            if (action.feature && action.operator) {\n                this.assign(action.operator, action.feature, last, last.$cstNode, false);\n            }\n        }\n    }\n    construct(pop = true) {\n        if (this.isRecording()) {\n            return undefined;\n        }\n        const obj = this.current;\n        linkContentToContainer(obj);\n        this.nodeBuilder.construct(obj);\n        if (pop) {\n            this.stack.pop();\n        }\n        if (isDataTypeNode(obj)) {\n            return this.converter.convert(obj.value, obj.$cstNode);\n        }\n        else {\n            assignMandatoryProperties(this.astReflection, obj);\n        }\n        return obj;\n    }\n    getAssignment(feature) {\n        if (!this.assignmentMap.has(feature)) {\n            const assignment = getContainerOfType(feature, isAssignment);\n            this.assignmentMap.set(feature, {\n                assignment: assignment,\n                isCrossRef: assignment ? isCrossReference(assignment.terminal) : false\n            });\n        }\n        return this.assignmentMap.get(feature);\n    }\n    assign(operator, feature, value, cstNode, isCrossRef) {\n        const obj = this.current;\n        let item;\n        if (isCrossRef && typeof value === 'string') {\n            item = this.linker.buildReference(obj, feature, cstNode, value);\n        }\n        else {\n            item = value;\n        }\n        switch (operator) {\n            case '=': {\n                obj[feature] = item;\n                break;\n            }\n            case '?=': {\n                obj[feature] = true;\n                break;\n            }\n            case '+=': {\n                if (!Array.isArray(obj[feature])) {\n                    obj[feature] = [];\n                }\n                obj[feature].push(item);\n            }\n        }\n    }\n    assignWithoutOverride(target, source) {\n        for (const [name, existingValue] of Object.entries(source)) {\n            const newValue = target[name];\n            if (newValue === undefined) {\n                target[name] = existingValue;\n            }\n            else if (Array.isArray(newValue) && Array.isArray(existingValue)) {\n                existingValue.push(...newValue);\n                target[name] = existingValue;\n            }\n        }\n        return target;\n    }\n    get definitionErrors() {\n        return this.wrapper.definitionErrors;\n    }\n}\nexport class AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage(options) {\n        return defaultParserErrorProvider.buildMismatchTokenMessage(options);\n    }\n    buildNotAllInputParsedMessage(options) {\n        return defaultParserErrorProvider.buildNotAllInputParsedMessage(options);\n    }\n    buildNoViableAltMessage(options) {\n        return defaultParserErrorProvider.buildNoViableAltMessage(options);\n    }\n    buildEarlyExitMessage(options) {\n        return defaultParserErrorProvider.buildEarlyExitMessage(options);\n    }\n}\nexport class LangiumParserErrorMessageProvider extends AbstractParserErrorMessageProvider {\n    buildMismatchTokenMessage({ expected, actual }) {\n        const expectedMsg = expected.LABEL\n            ? '`' + expected.LABEL + '`'\n            : expected.name.endsWith(':KW')\n                ? `keyword '${expected.name.substring(0, expected.name.length - 3)}'`\n                : `token of type '${expected.name}'`;\n        return `Expecting ${expectedMsg} but found \\`${actual.image}\\`.`;\n    }\n    buildNotAllInputParsedMessage({ firstRedundant }) {\n        return `Expecting end of file but found \\`${firstRedundant.image}\\`.`;\n    }\n}\nexport class LangiumCompletionParser extends AbstractLangiumParser {\n    constructor() {\n        super(...arguments);\n        this.tokens = [];\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    action() {\n        // NOOP\n    }\n    construct() {\n        // NOOP\n        return undefined;\n    }\n    parse(input) {\n        this.resetState();\n        const tokens = this.lexer.tokenize(input);\n        this.tokens = tokens.tokens;\n        this.wrapper.input = [...this.tokens];\n        this.mainRule.call(this.wrapper, {});\n        this.unorderedGroups.clear();\n        return {\n            tokens: this.tokens,\n            elementStack: [...this.lastElementStack],\n            tokenIndex: this.nextTokenIndex\n        };\n    }\n    rule(rule, impl) {\n        const ruleMethod = this.wrapper.DEFINE_RULE(withRuleSuffix(rule.name), this.startImplementation(impl).bind(this));\n        if (rule.entry) {\n            this.mainRule = ruleMethod;\n        }\n        return ruleMethod;\n    }\n    resetState() {\n        this.elementStack = [];\n        this.lastElementStack = [];\n        this.nextTokenIndex = 0;\n        this.stackSize = 0;\n    }\n    startImplementation(implementation) {\n        return (args) => {\n            const size = this.keepStackSize();\n            try {\n                implementation(args);\n            }\n            finally {\n                this.resetStackSize(size);\n            }\n        };\n    }\n    removeUnexpectedElements() {\n        this.elementStack.splice(this.stackSize);\n    }\n    keepStackSize() {\n        const size = this.elementStack.length;\n        this.stackSize = size;\n        return size;\n    }\n    resetStackSize(size) {\n        this.removeUnexpectedElements();\n        this.stackSize = size;\n    }\n    consume(idx, tokenType, feature) {\n        this.wrapper.wrapConsume(idx, tokenType);\n        if (!this.isRecording()) {\n            this.lastElementStack = [...this.elementStack, feature];\n            this.nextTokenIndex = this.currIdx + 1;\n        }\n    }\n    subrule(idx, rule, feature, args) {\n        this.before(feature);\n        this.wrapper.wrapSubrule(idx, rule, args);\n        this.after(feature);\n    }\n    before(element) {\n        if (!this.isRecording()) {\n            this.elementStack.push(element);\n        }\n    }\n    after(element) {\n        if (!this.isRecording()) {\n            const index = this.elementStack.lastIndexOf(element);\n            if (index >= 0) {\n                this.elementStack.splice(index);\n            }\n        }\n    }\n    get currIdx() {\n        return this.wrapper.currIdx;\n    }\n}\nconst defaultConfig = {\n    recoveryEnabled: true,\n    nodeLocationTracking: 'full',\n    skipValidations: true,\n    errorMessageProvider: new LangiumParserErrorMessageProvider()\n};\n/**\n * This class wraps the embedded actions parser of chevrotain and exposes protected methods.\n * This way, we can build the `LangiumParser` as a composition.\n */\nclass ChevrotainWrapper extends EmbeddedActionsParser {\n    constructor(tokens, config) {\n        const useDefaultLookahead = config && 'maxLookahead' in config;\n        super(tokens, Object.assign(Object.assign(Object.assign({}, defaultConfig), { lookaheadStrategy: useDefaultLookahead\n                ? new LLkLookaheadStrategy({ maxLookahead: config.maxLookahead })\n                : new LLStarLookaheadStrategy() }), config));\n    }\n    get IS_RECORDING() {\n        return this.RECORDING_PHASE;\n    }\n    DEFINE_RULE(name, impl) {\n        return this.RULE(name, impl);\n    }\n    wrapSelfAnalysis() {\n        this.performSelfAnalysis();\n    }\n    wrapConsume(idx, tokenType) {\n        return this.consume(idx, tokenType);\n    }\n    wrapSubrule(idx, rule, args) {\n        return this.subrule(idx, rule, {\n            ARGS: [args]\n        });\n    }\n    wrapOr(idx, choices) {\n        this.or(idx, choices);\n    }\n    wrapOption(idx, callback) {\n        this.option(idx, callback);\n    }\n    wrapMany(idx, callback) {\n        this.many(idx, callback);\n    }\n    wrapAtLeastOne(idx, callback) {\n        this.atLeastOne(idx, callback);\n    }\n}\n//# sourceMappingURL=langium-parser.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_ALT, EOF } from 'chevrotain';\nimport { isAction, isAlternatives, isEndOfFile, isAssignment, isConjunction, isCrossReference, isDisjunction, isGroup, isKeyword, isNegation, isParameterReference, isParserRule, isRuleCall, isTerminalRule, isUnorderedGroup, isBooleanLiteral } from '../languages/generated/ast.js';\nimport { assertUnreachable, ErrorWithLocation } from '../utils/errors.js';\nimport { stream } from '../utils/stream.js';\nimport { findNameAssignment, getAllReachableRules, getTypeName } from '../utils/grammar-utils.js';\nexport function createParser(grammar, parser, tokens) {\n    const rules = new Map();\n    const parserContext = {\n        parser,\n        tokens,\n        rules,\n        ruleNames: new Map()\n    };\n    buildRules(parserContext, grammar);\n    return parser;\n}\nfunction buildRules(parserContext, grammar) {\n    const reachable = getAllReachableRules(grammar, false);\n    const parserRules = stream(grammar.rules).filter(isParserRule).filter(rule => reachable.has(rule));\n    for (const rule of parserRules) {\n        const ctx = Object.assign(Object.assign({}, parserContext), { consume: 1, optional: 1, subrule: 1, many: 1, or: 1 });\n        ctx.rules.set(rule.name, parserContext.parser.rule(rule, buildElement(ctx, rule.definition)));\n    }\n}\nfunction buildElement(ctx, element, ignoreGuard = false) {\n    let method;\n    if (isKeyword(element)) {\n        method = buildKeyword(ctx, element);\n    }\n    else if (isAction(element)) {\n        method = buildAction(ctx, element);\n    }\n    else if (isAssignment(element)) {\n        method = buildElement(ctx, element.terminal);\n    }\n    else if (isCrossReference(element)) {\n        method = buildCrossReference(ctx, element);\n    }\n    else if (isRuleCall(element)) {\n        method = buildRuleCall(ctx, element);\n    }\n    else if (isAlternatives(element)) {\n        method = buildAlternatives(ctx, element);\n    }\n    else if (isUnorderedGroup(element)) {\n        method = buildUnorderedGroup(ctx, element);\n    }\n    else if (isGroup(element)) {\n        method = buildGroup(ctx, element);\n    }\n    else if (isEndOfFile(element)) {\n        const idx = ctx.consume++;\n        method = () => ctx.parser.consume(idx, EOF, element);\n    }\n    else {\n        throw new ErrorWithLocation(element.$cstNode, `Unexpected element type: ${element.$type}`);\n    }\n    return wrap(ctx, ignoreGuard ? undefined : getGuardCondition(element), method, element.cardinality);\n}\nfunction buildAction(ctx, action) {\n    const actionType = getTypeName(action);\n    return () => ctx.parser.action(actionType, action);\n}\nfunction buildRuleCall(ctx, ruleCall) {\n    const rule = ruleCall.rule.ref;\n    if (isParserRule(rule)) {\n        const idx = ctx.subrule++;\n        const predicate = ruleCall.arguments.length > 0 ? buildRuleCallPredicate(rule, ruleCall.arguments) : () => ({});\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, rule), ruleCall, predicate(args));\n    }\n    else if (isTerminalRule(rule)) {\n        const idx = ctx.consume++;\n        const method = getToken(ctx, rule.name);\n        return () => ctx.parser.consume(idx, method, ruleCall);\n    }\n    else if (!rule) {\n        throw new ErrorWithLocation(ruleCall.$cstNode, `Undefined rule type: ${ruleCall.$type}`);\n    }\n    else {\n        assertUnreachable(rule);\n    }\n}\nfunction buildRuleCallPredicate(rule, namedArgs) {\n    const predicates = namedArgs.map(e => buildPredicate(e.value));\n    return (args) => {\n        const ruleArgs = {};\n        for (let i = 0; i < predicates.length; i++) {\n            const ruleTarget = rule.parameters[i];\n            const predicate = predicates[i];\n            ruleArgs[ruleTarget.name] = predicate(args);\n        }\n        return ruleArgs;\n    };\n}\nfunction buildPredicate(condition) {\n    if (isDisjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) || right(args));\n    }\n    else if (isConjunction(condition)) {\n        const left = buildPredicate(condition.left);\n        const right = buildPredicate(condition.right);\n        return (args) => (left(args) && right(args));\n    }\n    else if (isNegation(condition)) {\n        const value = buildPredicate(condition.value);\n        return (args) => !value(args);\n    }\n    else if (isParameterReference(condition)) {\n        const name = condition.parameter.ref.name;\n        return (args) => args !== undefined && args[name] === true;\n    }\n    else if (isBooleanLiteral(condition)) {\n        const value = Boolean(condition.true);\n        return () => value;\n    }\n    assertUnreachable(condition);\n}\nfunction buildAlternatives(ctx, alternatives) {\n    if (alternatives.elements.length === 1) {\n        return buildElement(ctx, alternatives.elements[0]);\n    }\n    else {\n        const methods = [];\n        for (const element of alternatives.elements) {\n            const predicatedMethod = {\n                // Since we handle the guard condition in the alternative already\n                // We can ignore the group guard condition inside\n                ALT: buildElement(ctx, element, true)\n            };\n            const guard = getGuardCondition(element);\n            if (guard) {\n                predicatedMethod.GATE = buildPredicate(guard);\n            }\n            methods.push(predicatedMethod);\n        }\n        const idx = ctx.or++;\n        return (args) => ctx.parser.alternatives(idx, methods.map(method => {\n            const alt = {\n                ALT: () => method.ALT(args)\n            };\n            const gate = method.GATE;\n            if (gate) {\n                alt.GATE = () => gate(args);\n            }\n            return alt;\n        }));\n    }\n}\nfunction buildUnorderedGroup(ctx, group) {\n    if (group.elements.length === 1) {\n        return buildElement(ctx, group.elements[0]);\n    }\n    const methods = [];\n    for (const element of group.elements) {\n        const predicatedMethod = {\n            // Since we handle the guard condition in the alternative already\n            // We can ignore the group guard condition inside\n            ALT: buildElement(ctx, element, true)\n        };\n        const guard = getGuardCondition(element);\n        if (guard) {\n            predicatedMethod.GATE = buildPredicate(guard);\n        }\n        methods.push(predicatedMethod);\n    }\n    const orIdx = ctx.or++;\n    const idFunc = (groupIdx, lParser) => {\n        const stackId = lParser.getRuleStack().join('-');\n        return `uGroup_${groupIdx}_${stackId}`;\n    };\n    const alternatives = (args) => ctx.parser.alternatives(orIdx, methods.map((method, idx) => {\n        const alt = { ALT: () => true };\n        const parser = ctx.parser;\n        alt.ALT = () => {\n            method.ALT(args);\n            if (!parser.isRecording()) {\n                const key = idFunc(orIdx, parser);\n                if (!parser.unorderedGroups.get(key)) {\n                    // init after clear state\n                    parser.unorderedGroups.set(key, []);\n                }\n                const groupState = parser.unorderedGroups.get(key);\n                if (typeof (groupState === null || groupState === void 0 ? void 0 : groupState[idx]) === 'undefined') {\n                    // Not accessed yet\n                    groupState[idx] = true;\n                }\n            }\n        };\n        const gate = method.GATE;\n        if (gate) {\n            alt.GATE = () => gate(args);\n        }\n        else {\n            alt.GATE = () => {\n                const trackedAlternatives = parser.unorderedGroups.get(idFunc(orIdx, parser));\n                const allow = !(trackedAlternatives === null || trackedAlternatives === void 0 ? void 0 : trackedAlternatives[idx]);\n                return allow;\n            };\n        }\n        return alt;\n    }));\n    const wrapped = wrap(ctx, getGuardCondition(group), alternatives, '*');\n    return (args) => {\n        wrapped(args);\n        if (!ctx.parser.isRecording()) {\n            ctx.parser.unorderedGroups.delete(idFunc(orIdx, ctx.parser));\n        }\n    };\n}\nfunction buildGroup(ctx, group) {\n    const methods = group.elements.map(e => buildElement(ctx, e));\n    return (args) => methods.forEach(method => method(args));\n}\nfunction getGuardCondition(element) {\n    if (isGroup(element)) {\n        return element.guardCondition;\n    }\n    return undefined;\n}\nfunction buildCrossReference(ctx, crossRef, terminal = crossRef.terminal) {\n    if (!terminal) {\n        if (!crossRef.type.ref) {\n            throw new Error('Could not resolve reference to type: ' + crossRef.type.$refText);\n        }\n        const assignment = findNameAssignment(crossRef.type.ref);\n        const assignTerminal = assignment === null || assignment === void 0 ? void 0 : assignment.terminal;\n        if (!assignTerminal) {\n            throw new Error('Could not find name assignment for type: ' + getTypeName(crossRef.type.ref));\n        }\n        return buildCrossReference(ctx, crossRef, assignTerminal);\n    }\n    else if (isRuleCall(terminal) && isParserRule(terminal.rule.ref)) {\n        const idx = ctx.subrule++;\n        return (args) => ctx.parser.subrule(idx, getRule(ctx, terminal.rule.ref), crossRef, args);\n    }\n    else if (isRuleCall(terminal) && isTerminalRule(terminal.rule.ref)) {\n        const idx = ctx.consume++;\n        const terminalRule = getToken(ctx, terminal.rule.ref.name);\n        return () => ctx.parser.consume(idx, terminalRule, crossRef);\n    }\n    else if (isKeyword(terminal)) {\n        const idx = ctx.consume++;\n        const keyword = getToken(ctx, terminal.value);\n        return () => ctx.parser.consume(idx, keyword, crossRef);\n    }\n    else {\n        throw new Error('Could not build cross reference parser');\n    }\n}\nfunction buildKeyword(ctx, keyword) {\n    const idx = ctx.consume++;\n    const token = ctx.tokens[keyword.value];\n    if (!token) {\n        throw new Error('Could not find token for keyword: ' + keyword.value);\n    }\n    return () => ctx.parser.consume(idx, token, keyword);\n}\nfunction wrap(ctx, guard, method, cardinality) {\n    const gate = guard && buildPredicate(guard);\n    if (!cardinality) {\n        if (gate) {\n            const idx = ctx.or++;\n            return (args) => ctx.parser.alternatives(idx, [\n                {\n                    ALT: () => method(args),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return method;\n        }\n    }\n    if (cardinality === '*') {\n        const idx = ctx.many++;\n        return (args) => ctx.parser.many(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else if (cardinality === '+') {\n        const idx = ctx.many++;\n        if (gate) {\n            const orIdx = ctx.or++;\n            // In the case of a guard condition for the `+` group\n            // We combine it with an empty alternative\n            // If the condition returns true, it needs to parse at least a single iteration\n            // If its false, it is not allowed to parse anything\n            return (args) => ctx.parser.alternatives(orIdx, [\n                {\n                    ALT: () => ctx.parser.atLeastOne(idx, {\n                        DEF: () => method(args)\n                    }),\n                    GATE: () => gate(args)\n                },\n                {\n                    ALT: EMPTY_ALT(),\n                    GATE: () => !gate(args)\n                }\n            ]);\n        }\n        else {\n            return (args) => ctx.parser.atLeastOne(idx, {\n                DEF: () => method(args),\n            });\n        }\n    }\n    else if (cardinality === '?') {\n        const idx = ctx.optional++;\n        return (args) => ctx.parser.optional(idx, {\n            DEF: () => method(args),\n            GATE: gate ? () => gate(args) : undefined\n        });\n    }\n    else {\n        assertUnreachable(cardinality);\n    }\n}\nfunction getRule(ctx, element) {\n    const name = getRuleName(ctx, element);\n    const rule = ctx.rules.get(name);\n    if (!rule)\n        throw new Error(`Rule \"${name}\" not found.\"`);\n    return rule;\n}\nfunction getRuleName(ctx, element) {\n    if (isParserRule(element)) {\n        return element.name;\n    }\n    else if (ctx.ruleNames.has(element)) {\n        return ctx.ruleNames.get(element);\n    }\n    else {\n        let item = element;\n        let parent = item.$container;\n        let ruleName = element.$type;\n        while (!isParserRule(parent)) {\n            if (isGroup(parent) || isAlternatives(parent) || isUnorderedGroup(parent)) {\n                const index = parent.elements.indexOf(item);\n                ruleName = index.toString() + ':' + ruleName;\n            }\n            item = parent;\n            parent = parent.$container;\n        }\n        const rule = parent;\n        ruleName = rule.name + ':' + ruleName;\n        ctx.ruleNames.set(element, ruleName);\n        return ruleName;\n    }\n}\nfunction getToken(ctx, name) {\n    const token = ctx.tokens[name];\n    if (!token)\n        throw new Error(`Token \"${name}\" not found.\"`);\n    return token;\n}\n//# sourceMappingURL=parser-builder-base.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer } from 'chevrotain';\nimport { isKeyword, isParserRule, isTerminalRule } from '../languages/generated/ast.js';\nimport { streamAllContents } from '../utils/ast-utils.js';\nimport { getAllReachableRules, terminalRegex } from '../utils/grammar-utils.js';\nimport { getCaseInsensitivePattern, isWhitespace, partialMatches } from '../utils/regexp-utils.js';\nimport { stream } from '../utils/stream.js';\nexport class DefaultTokenBuilder {\n    buildTokens(grammar, options) {\n        const reachableRules = stream(getAllReachableRules(grammar, false));\n        const terminalTokens = this.buildTerminalTokens(reachableRules);\n        const tokens = this.buildKeywordTokens(reachableRules, terminalTokens, options);\n        terminalTokens.forEach(terminalToken => {\n            const pattern = terminalToken.PATTERN;\n            if (typeof pattern === 'object' && pattern && 'test' in pattern && isWhitespace(pattern)) {\n                tokens.unshift(terminalToken);\n            }\n            else {\n                tokens.push(terminalToken);\n            }\n        });\n        // We don't need to add the EOF token explicitly.\n        // It is automatically available at the end of the token stream.\n        return tokens;\n    }\n    buildTerminalTokens(rules) {\n        return rules.filter(isTerminalRule).filter(e => !e.fragment)\n            .map(terminal => this.buildTerminalToken(terminal)).toArray();\n    }\n    buildTerminalToken(terminal) {\n        const regex = terminalRegex(terminal);\n        const pattern = this.requiresCustomPattern(regex) ? this.regexPatternFunction(regex) : regex;\n        const tokenType = {\n            name: terminal.name,\n            PATTERN: pattern,\n            LINE_BREAKS: true\n        };\n        if (terminal.hidden) {\n            // Only skip tokens that are able to accept whitespace\n            tokenType.GROUP = isWhitespace(regex) ? Lexer.SKIPPED : 'hidden';\n        }\n        return tokenType;\n    }\n    requiresCustomPattern(regex) {\n        if (regex.flags.includes('u')) {\n            // Unicode regexes are not supported by Chevrotain.\n            return true;\n        }\n        else if (regex.source.includes('?<=') || regex.source.includes('?<!')) {\n            // Negative and positive lookbehind are not supported by Chevrotain yet.\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    regexPatternFunction(regex) {\n        const stickyRegex = new RegExp(regex, regex.flags + 'y');\n        return (text, offset) => {\n            stickyRegex.lastIndex = offset;\n            const execResult = stickyRegex.exec(text);\n            return execResult;\n        };\n    }\n    buildKeywordTokens(rules, terminalTokens, options) {\n        return rules\n            // We filter by parser rules, since keywords in terminal rules get transformed into regex and are not actual tokens\n            .filter(isParserRule)\n            .flatMap(rule => streamAllContents(rule).filter(isKeyword))\n            .distinct(e => e.value).toArray()\n            // Sort keywords by descending length\n            .sort((a, b) => b.value.length - a.value.length)\n            .map(keyword => this.buildKeywordToken(keyword, terminalTokens, Boolean(options === null || options === void 0 ? void 0 : options.caseInsensitive)));\n    }\n    buildKeywordToken(keyword, terminalTokens, caseInsensitive) {\n        return {\n            name: keyword.value,\n            PATTERN: this.buildKeywordPattern(keyword, caseInsensitive),\n            LONGER_ALT: this.findLongerAlt(keyword, terminalTokens)\n        };\n    }\n    buildKeywordPattern(keyword, caseInsensitive) {\n        return caseInsensitive ?\n            new RegExp(getCaseInsensitivePattern(keyword.value)) :\n            keyword.value;\n    }\n    findLongerAlt(keyword, terminalTokens) {\n        return terminalTokens.reduce((longerAlts, token) => {\n            const pattern = token === null || token === void 0 ? void 0 : token.PATTERN;\n            if ((pattern === null || pattern === void 0 ? void 0 : pattern.source) && partialMatches('^' + pattern.source + '$', keyword.value)) {\n                longerAlts.push(token);\n            }\n            return longerAlts;\n        }, []);\n    }\n}\n//# sourceMappingURL=token-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isCrossReference, isRuleCall } from '../languages/generated/ast.js';\nimport { getCrossReferenceTerminal, getRuleType } from '../utils/grammar-utils.js';\nexport class DefaultValueConverter {\n    convert(input, cstNode) {\n        let feature = cstNode.grammarSource;\n        if (isCrossReference(feature)) {\n            feature = getCrossReferenceTerminal(feature);\n        }\n        if (isRuleCall(feature)) {\n            const rule = feature.rule.ref;\n            if (!rule) {\n                throw new Error('This cst node was not parsed by a rule.');\n            }\n            return this.runConverter(rule, input, cstNode);\n        }\n        return input;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    runConverter(rule, input, cstNode) {\n        var _a;\n        switch (rule.name.toUpperCase()) {\n            case 'INT': return ValueConverter.convertInt(input);\n            case 'STRING': return ValueConverter.convertString(input);\n            case 'ID': return ValueConverter.convertID(input);\n        }\n        switch ((_a = getRuleType(rule)) === null || _a === void 0 ? void 0 : _a.toLowerCase()) {\n            case 'number': return ValueConverter.convertNumber(input);\n            case 'boolean': return ValueConverter.convertBoolean(input);\n            case 'bigint': return ValueConverter.convertBigint(input);\n            case 'date': return ValueConverter.convertDate(input);\n            default: return input;\n        }\n    }\n}\nexport var ValueConverter;\n(function (ValueConverter) {\n    function convertString(input) {\n        let result = '';\n        for (let i = 1; i < input.length - 1; i++) {\n            const c = input.charAt(i);\n            if (c === '\\\\') {\n                const c1 = input.charAt(++i);\n                result += convertEscapeCharacter(c1);\n            }\n            else {\n                result += c;\n            }\n        }\n        return result;\n    }\n    ValueConverter.convertString = convertString;\n    function convertEscapeCharacter(char) {\n        switch (char) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            case '0': return '\\0';\n            default: return char;\n        }\n    }\n    function convertID(input) {\n        if (input.charAt(0) === '^') {\n            return input.substring(1);\n        }\n        else {\n            return input;\n        }\n    }\n    ValueConverter.convertID = convertID;\n    function convertInt(input) {\n        return parseInt(input);\n    }\n    ValueConverter.convertInt = convertInt;\n    function convertBigint(input) {\n        return BigInt(input);\n    }\n    ValueConverter.convertBigint = convertBigint;\n    function convertDate(input) {\n        return new Date(input);\n    }\n    ValueConverter.convertDate = convertDate;\n    function convertNumber(input) {\n        return Number(input);\n    }\n    ValueConverter.convertNumber = convertNumber;\n    function convertBoolean(input) {\n        return input.toLowerCase() === 'true';\n    }\n    ValueConverter.convertBoolean = convertBoolean;\n})(ValueConverter || (ValueConverter = {}));\n//# sourceMappingURL=value-converter.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\n/**\n * Delays the execution of the current code to the next tick of the event loop.\n * Don't call this method directly in a tight loop to prevent too many promises from being created.\n */\nexport function delayNextTick() {\n    return new Promise(resolve => {\n        // In case we are running in a non-node environment, `setImmediate` isn't available.\n        // Using `setTimeout` of the browser API accomplishes the same result.\n        if (typeof setImmediate === 'undefined') {\n            setTimeout(resolve, 0);\n        }\n        else {\n            setImmediate(resolve);\n        }\n    });\n}\nlet lastTick = 0;\nlet globalInterruptionPeriod = 10;\n/**\n * Reset the global interruption period and create a cancellation token source.\n */\nexport function startCancelableOperation() {\n    lastTick = Date.now();\n    return new CancellationTokenSource();\n}\n/**\n * Change the period duration for `interruptAndCheck` to the given number of milliseconds.\n * The default value is 10ms.\n */\nexport function setInterruptionPeriod(period) {\n    globalInterruptionPeriod = period;\n}\n/**\n * This symbol may be thrown in an asynchronous context by any Langium service that receives\n * a `CancellationToken`. This means that the promise returned by such a service is rejected with\n * this symbol as rejection reason.\n */\nexport const OperationCancelled = Symbol('OperationCancelled');\n/**\n * Use this in a `catch` block to check whether the thrown object indicates that the operation\n * has been cancelled.\n */\nexport function isOperationCancelled(err) {\n    return err === OperationCancelled;\n}\n/**\n * This function does two things:\n *  1. Check the elapsed time since the last call to this function or to `startCancelableOperation`. If the predefined\n *     period (configured with `setInterruptionPeriod`) is exceeded, execution is delayed with `delayNextTick`.\n *  2. If the predefined period is not met yet or execution is resumed after an interruption, the given cancellation\n *     token is checked, and if cancellation is requested, `OperationCanceled` is thrown.\n *\n * All services in Langium that receive a `CancellationToken` may potentially call this function, so the\n * `CancellationToken` must be caught (with an `async` try-catch block or a `catch` callback attached to\n * the promise) to avoid that event being exposed as an error.\n */\nexport async function interruptAndCheck(token) {\n    if (token === CancellationToken.None) {\n        // Early exit in case cancellation was disabled by the caller\n        return;\n    }\n    const current = Date.now();\n    if (current - lastTick >= globalInterruptionPeriod) {\n        lastTick = current;\n        await delayNextTick();\n    }\n    if (token.isCancellationRequested) {\n        throw OperationCancelled;\n    }\n}\n/**\n * Simple implementation of the deferred pattern.\n * An object that exposes a promise and functions to resolve and reject it.\n */\nexport class Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = (arg) => {\n                resolve(arg);\n                return this;\n            };\n            this.reject = (err) => {\n                reject(err);\n                return this;\n            };\n        });\n    }\n}\n//# sourceMappingURL=promise-utils.js.map","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nclass FullTextDocument {\n    constructor(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    get uri() {\n        return this._uri;\n    }\n    get languageId() {\n        return this._languageId;\n    }\n    get version() {\n        return this._version;\n    }\n    getText(range) {\n        if (range) {\n            const start = this.offsetAt(range.start);\n            const end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    }\n    update(changes, version) {\n        for (const change of changes) {\n            if (FullTextDocument.isIncremental(change)) {\n                // makes sure start is before end\n                const range = getWellformedRange(change.range);\n                // update content\n                const startOffset = this.offsetAt(range.start);\n                const endOffset = this.offsetAt(range.end);\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\n                // update the offsets\n                const startLine = Math.max(range.start.line, 0);\n                const endLine = Math.max(range.end.line, 0);\n                let lineOffsets = this._lineOffsets;\n                const addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\n                if (endLine - startLine === addedLineOffsets.length) {\n                    for (let i = 0, len = addedLineOffsets.length; i < len; i++) {\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\n                    }\n                }\n                else {\n                    if (addedLineOffsets.length < 10000) {\n                        lineOffsets.splice(startLine + 1, endLine - startLine, ...addedLineOffsets);\n                    }\n                    else { // avoid too many arguments for splice\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\n                    }\n                }\n                const diff = change.text.length - (endOffset - startOffset);\n                if (diff !== 0) {\n                    for (let i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\n                        lineOffsets[i] = lineOffsets[i] + diff;\n                    }\n                }\n            }\n            else if (FullTextDocument.isFull(change)) {\n                this._content = change.text;\n                this._lineOffsets = undefined;\n            }\n            else {\n                throw new Error('Unknown change event received');\n            }\n        }\n        this._version = version;\n    }\n    getLineOffsets() {\n        if (this._lineOffsets === undefined) {\n            this._lineOffsets = computeLineOffsets(this._content, true);\n        }\n        return this._lineOffsets;\n    }\n    positionAt(offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        const lineOffsets = this.getLineOffsets();\n        let low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return { line: 0, character: offset };\n        }\n        while (low < high) {\n            const mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        const line = low - 1;\n        offset = this.ensureBeforeEOL(offset, lineOffsets[line]);\n        return { line, character: offset - lineOffsets[line] };\n    }\n    offsetAt(position) {\n        const lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        const lineOffset = lineOffsets[position.line];\n        if (position.character <= 0) {\n            return lineOffset;\n        }\n        const nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        const offset = Math.min(lineOffset + position.character, nextLineOffset);\n        return this.ensureBeforeEOL(offset, lineOffset);\n    }\n    ensureBeforeEOL(offset, lineOffset) {\n        while (offset > lineOffset && isEOL(this._content.charCodeAt(offset - 1))) {\n            offset--;\n        }\n        return offset;\n    }\n    get lineCount() {\n        return this.getLineOffsets().length;\n    }\n    static isIncremental(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\n    }\n    static isFull(event) {\n        const candidate = event;\n        return candidate !== undefined && candidate !== null &&\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\n    }\n}\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new text document.\n     *\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param version The document's initial version number.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Updates a TextDocument by modifying its content.\n     *\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\n     * @param changes the changes to apply to the document.\n     * @param version the changes version for the document.\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\n     *\n     */\n    function update(document, changes, version) {\n        if (document instanceof FullTextDocument) {\n            document.update(changes, version);\n            return document;\n        }\n        else {\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\n        }\n    }\n    TextDocument.update = update;\n    function applyEdits(document, edits) {\n        const text = document.getText();\n        const sortedEdits = mergeSort(edits.map(getWellformedEdit), (a, b) => {\n            const diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        let lastModifiedOffset = 0;\n        const spans = [];\n        for (const e of sortedEdits) {\n            const startOffset = document.offsetAt(e.range.start);\n            if (startOffset < lastModifiedOffset) {\n                throw new Error('Overlapping edit');\n            }\n            else if (startOffset > lastModifiedOffset) {\n                spans.push(text.substring(lastModifiedOffset, startOffset));\n            }\n            if (e.newText.length) {\n                spans.push(e.newText);\n            }\n            lastModifiedOffset = document.offsetAt(e.range.end);\n        }\n        spans.push(text.substr(lastModifiedOffset));\n        return spans.join('');\n    }\n    TextDocument.applyEdits = applyEdits;\n})(TextDocument || (TextDocument = {}));\nfunction mergeSort(data, compare) {\n    if (data.length <= 1) {\n        // sorted\n        return data;\n    }\n    const p = (data.length / 2) | 0;\n    const left = data.slice(0, p);\n    const right = data.slice(p);\n    mergeSort(left, compare);\n    mergeSort(right, compare);\n    let leftIdx = 0;\n    let rightIdx = 0;\n    let i = 0;\n    while (leftIdx < left.length && rightIdx < right.length) {\n        const ret = compare(left[leftIdx], right[rightIdx]);\n        if (ret <= 0) {\n            // smaller_equal -> take left to preserve order\n            data[i++] = left[leftIdx++];\n        }\n        else {\n            // greater -> take right\n            data[i++] = right[rightIdx++];\n        }\n    }\n    while (leftIdx < left.length) {\n        data[i++] = left[leftIdx++];\n    }\n    while (rightIdx < right.length) {\n        data[i++] = right[rightIdx++];\n    }\n    return data;\n}\nfunction computeLineOffsets(text, isAtLineStart, textOffset = 0) {\n    const result = isAtLineStart ? [textOffset] : [];\n    for (let i = 0; i < text.length; i++) {\n        const ch = text.charCodeAt(i);\n        if (isEOL(ch)) {\n            if (ch === 13 /* CharCode.CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* CharCode.LineFeed */) {\n                i++;\n            }\n            result.push(textOffset + i + 1);\n        }\n    }\n    return result;\n}\nfunction isEOL(char) {\n    return char === 13 /* CharCode.CarriageReturn */ || char === 10 /* CharCode.LineFeed */;\n}\nfunction getWellformedRange(range) {\n    const start = range.start;\n    const end = range.end;\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\n        return { start: end, end: start };\n    }\n    return range;\n}\nfunction getWellformedEdit(textEdit) {\n    const range = getWellformedRange(textEdit.range);\n    if (range !== textEdit.range) {\n        return { newText: textEdit.newText, range };\n    }\n    return textEdit;\n}\n","var LIB;(()=>{\"use strict\";var t={470:t=>{function e(t){if(\"string\"!=typeof t)throw new TypeError(\"Path must be a string. Received \"+JSON.stringify(t))}function r(t,e){for(var r,n=\"\",i=0,o=-1,s=0,h=0;h<=t.length;++h){if(h<t.length)r=t.charCodeAt(h);else{if(47===r)break;r=47}if(47===r){if(o===h-1||1===s);else if(o!==h-1&&2===s){if(n.length<2||2!==i||46!==n.charCodeAt(n.length-1)||46!==n.charCodeAt(n.length-2))if(n.length>2){var a=n.lastIndexOf(\"/\");if(a!==n.length-1){-1===a?(n=\"\",i=0):i=(n=n.slice(0,a)).length-1-n.lastIndexOf(\"/\"),o=h,s=0;continue}}else if(2===n.length||1===n.length){n=\"\",i=0,o=h,s=0;continue}e&&(n.length>0?n+=\"/..\":n=\"..\",i=2)}else n.length>0?n+=\"/\"+t.slice(o+1,h):n=t.slice(o+1,h),i=h-o-1;o=h,s=0}else 46===r&&-1!==s?++s:s=-1}return n}var n={resolve:function(){for(var t,n=\"\",i=!1,o=arguments.length-1;o>=-1&&!i;o--){var s;o>=0?s=arguments[o]:(void 0===t&&(t=process.cwd()),s=t),e(s),0!==s.length&&(n=s+\"/\"+n,i=47===s.charCodeAt(0))}return n=r(n,!i),i?n.length>0?\"/\"+n:\"/\":n.length>0?n:\".\"},normalize:function(t){if(e(t),0===t.length)return\".\";var n=47===t.charCodeAt(0),i=47===t.charCodeAt(t.length-1);return 0!==(t=r(t,!n)).length||n||(t=\".\"),t.length>0&&i&&(t+=\"/\"),n?\"/\"+t:t},isAbsolute:function(t){return e(t),t.length>0&&47===t.charCodeAt(0)},join:function(){if(0===arguments.length)return\".\";for(var t,r=0;r<arguments.length;++r){var i=arguments[r];e(i),i.length>0&&(void 0===t?t=i:t+=\"/\"+i)}return void 0===t?\".\":n.normalize(t)},relative:function(t,r){if(e(t),e(r),t===r)return\"\";if((t=n.resolve(t))===(r=n.resolve(r)))return\"\";for(var i=1;i<t.length&&47===t.charCodeAt(i);++i);for(var o=t.length,s=o-i,h=1;h<r.length&&47===r.charCodeAt(h);++h);for(var a=r.length-h,c=s<a?s:a,f=-1,u=0;u<=c;++u){if(u===c){if(a>c){if(47===r.charCodeAt(h+u))return r.slice(h+u+1);if(0===u)return r.slice(h+u)}else s>c&&(47===t.charCodeAt(i+u)?f=u:0===u&&(f=0));break}var l=t.charCodeAt(i+u);if(l!==r.charCodeAt(h+u))break;47===l&&(f=u)}var g=\"\";for(u=i+f+1;u<=o;++u)u!==o&&47!==t.charCodeAt(u)||(0===g.length?g+=\"..\":g+=\"/..\");return g.length>0?g+r.slice(h+f):(h+=f,47===r.charCodeAt(h)&&++h,r.slice(h))},_makeLong:function(t){return t},dirname:function(t){if(e(t),0===t.length)return\".\";for(var r=t.charCodeAt(0),n=47===r,i=-1,o=!0,s=t.length-1;s>=1;--s)if(47===(r=t.charCodeAt(s))){if(!o){i=s;break}}else o=!1;return-1===i?n?\"/\":\".\":n&&1===i?\"//\":t.slice(0,i)},basename:function(t,r){if(void 0!==r&&\"string\"!=typeof r)throw new TypeError('\"ext\" argument must be a string');e(t);var n,i=0,o=-1,s=!0;if(void 0!==r&&r.length>0&&r.length<=t.length){if(r.length===t.length&&r===t)return\"\";var h=r.length-1,a=-1;for(n=t.length-1;n>=0;--n){var c=t.charCodeAt(n);if(47===c){if(!s){i=n+1;break}}else-1===a&&(s=!1,a=n+1),h>=0&&(c===r.charCodeAt(h)?-1==--h&&(o=n):(h=-1,o=a))}return i===o?o=a:-1===o&&(o=t.length),t.slice(i,o)}for(n=t.length-1;n>=0;--n)if(47===t.charCodeAt(n)){if(!s){i=n+1;break}}else-1===o&&(s=!1,o=n+1);return-1===o?\"\":t.slice(i,o)},extname:function(t){e(t);for(var r=-1,n=0,i=-1,o=!0,s=0,h=t.length-1;h>=0;--h){var a=t.charCodeAt(h);if(47!==a)-1===i&&(o=!1,i=h+1),46===a?-1===r?r=h:1!==s&&(s=1):-1!==r&&(s=-1);else if(!o){n=h+1;break}}return-1===r||-1===i||0===s||1===s&&r===i-1&&r===n+1?\"\":t.slice(r,i)},format:function(t){if(null===t||\"object\"!=typeof t)throw new TypeError('The \"pathObject\" argument must be of type Object. Received type '+typeof t);return function(t,e){var r=e.dir||e.root,n=e.base||(e.name||\"\")+(e.ext||\"\");return r?r===e.root?r+n:r+\"/\"+n:n}(0,t)},parse:function(t){e(t);var r={root:\"\",dir:\"\",base:\"\",ext:\"\",name:\"\"};if(0===t.length)return r;var n,i=t.charCodeAt(0),o=47===i;o?(r.root=\"/\",n=1):n=0;for(var s=-1,h=0,a=-1,c=!0,f=t.length-1,u=0;f>=n;--f)if(47!==(i=t.charCodeAt(f)))-1===a&&(c=!1,a=f+1),46===i?-1===s?s=f:1!==u&&(u=1):-1!==s&&(u=-1);else if(!c){h=f+1;break}return-1===s||-1===a||0===u||1===u&&s===a-1&&s===h+1?-1!==a&&(r.base=r.name=0===h&&o?t.slice(1,a):t.slice(h,a)):(0===h&&o?(r.name=t.slice(1,s),r.base=t.slice(1,a)):(r.name=t.slice(h,s),r.base=t.slice(h,a)),r.ext=t.slice(s,a)),h>0?r.dir=t.slice(0,h-1):o&&(r.dir=\"/\"),r},sep:\"/\",delimiter:\":\",win32:null,posix:null};n.posix=n,t.exports=n}},e={};function r(n){var i=e[n];if(void 0!==i)return i.exports;var o=e[n]={exports:{}};return t[n](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var n={};(()=>{let t;if(r.r(n),r.d(n,{URI:()=>f,Utils:()=>P}),\"object\"==typeof process)t=\"win32\"===process.platform;else if(\"object\"==typeof navigator){let e=navigator.userAgent;t=e.indexOf(\"Windows\")>=0}const e=/^\\w[\\w\\d+.-]*$/,i=/^\\//,o=/^\\/\\//;function s(t,r){if(!t.scheme&&r)throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${t.authority}\", path: \"${t.path}\", query: \"${t.query}\", fragment: \"${t.fragment}\"}`);if(t.scheme&&!e.test(t.scheme))throw new Error(\"[UriError]: Scheme contains illegal characters.\");if(t.path)if(t.authority){if(!i.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character')}else if(o.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")')}const h=\"\",a=\"/\",c=/^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;class f{static isUri(t){return t instanceof f||!!t&&\"string\"==typeof t.authority&&\"string\"==typeof t.fragment&&\"string\"==typeof t.path&&\"string\"==typeof t.query&&\"string\"==typeof t.scheme&&\"string\"==typeof t.fsPath&&\"function\"==typeof t.with&&\"function\"==typeof t.toString}scheme;authority;path;query;fragment;constructor(t,e,r,n,i,o=!1){\"object\"==typeof t?(this.scheme=t.scheme||h,this.authority=t.authority||h,this.path=t.path||h,this.query=t.query||h,this.fragment=t.fragment||h):(this.scheme=function(t,e){return t||e?t:\"file\"}(t,o),this.authority=e||h,this.path=function(t,e){switch(t){case\"https\":case\"http\":case\"file\":e?e[0]!==a&&(e=a+e):e=a}return e}(this.scheme,r||h),this.query=n||h,this.fragment=i||h,s(this,o))}get fsPath(){return m(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:r,path:n,query:i,fragment:o}=t;return void 0===e?e=this.scheme:null===e&&(e=h),void 0===r?r=this.authority:null===r&&(r=h),void 0===n?n=this.path:null===n&&(n=h),void 0===i?i=this.query:null===i&&(i=h),void 0===o?o=this.fragment:null===o&&(o=h),e===this.scheme&&r===this.authority&&n===this.path&&i===this.query&&o===this.fragment?this:new l(e,r,n,i,o)}static parse(t,e=!1){const r=c.exec(t);return r?new l(r[2]||h,C(r[4]||h),C(r[5]||h),C(r[7]||h),C(r[9]||h),e):new l(h,h,h,h,h)}static file(e){let r=h;if(t&&(e=e.replace(/\\\\/g,a)),e[0]===a&&e[1]===a){const t=e.indexOf(a,2);-1===t?(r=e.substring(2),e=a):(r=e.substring(2,t),e=e.substring(t)||a)}return new l(\"file\",r,e,h,h)}static from(t){const e=new l(t.scheme,t.authority,t.path,t.query,t.fragment);return s(e,!0),e}toString(t=!1){return y(this,t)}toJSON(){return this}static revive(t){if(t){if(t instanceof f)return t;{const e=new l(t);return e._formatted=t.external,e._fsPath=t._sep===u?t.fsPath:null,e}}return t}}const u=t?1:void 0;class l extends f{_formatted=null;_fsPath=null;get fsPath(){return this._fsPath||(this._fsPath=m(this,!1)),this._fsPath}toString(t=!1){return t?y(this,!0):(this._formatted||(this._formatted=y(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=u),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:\"%3A\",47:\"%2F\",63:\"%3F\",35:\"%23\",91:\"%5B\",93:\"%5D\",64:\"%40\",33:\"%21\",36:\"%24\",38:\"%26\",39:\"%27\",40:\"%28\",41:\"%29\",42:\"%2A\",43:\"%2B\",44:\"%2C\",59:\"%3B\",61:\"%3D\",32:\"%20\"};function d(t,e,r){let n,i=-1;for(let o=0;o<t.length;o++){const s=t.charCodeAt(o);if(s>=97&&s<=122||s>=65&&s<=90||s>=48&&s<=57||45===s||46===s||95===s||126===s||e&&47===s||r&&91===s||r&&93===s||r&&58===s)-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),void 0!==n&&(n+=t.charAt(o));else{void 0===n&&(n=t.substr(0,o));const e=g[s];void 0!==e?(-1!==i&&(n+=encodeURIComponent(t.substring(i,o)),i=-1),n+=e):-1===i&&(i=o)}}return-1!==i&&(n+=encodeURIComponent(t.substring(i))),void 0!==n?n:t}function p(t){let e;for(let r=0;r<t.length;r++){const n=t.charCodeAt(r);35===n||63===n?(void 0===e&&(e=t.substr(0,r)),e+=g[n]):void 0!==e&&(e+=t[r])}return void 0!==e?e:t}function m(e,r){let n;return n=e.authority&&e.path.length>1&&\"file\"===e.scheme?`//${e.authority}${e.path}`:47===e.path.charCodeAt(0)&&(e.path.charCodeAt(1)>=65&&e.path.charCodeAt(1)<=90||e.path.charCodeAt(1)>=97&&e.path.charCodeAt(1)<=122)&&58===e.path.charCodeAt(2)?r?e.path.substr(1):e.path[1].toLowerCase()+e.path.substr(2):e.path,t&&(n=n.replace(/\\//g,\"\\\\\")),n}function y(t,e){const r=e?p:d;let n=\"\",{scheme:i,authority:o,path:s,query:h,fragment:c}=t;if(i&&(n+=i,n+=\":\"),(o||\"file\"===i)&&(n+=a,n+=a),o){let t=o.indexOf(\"@\");if(-1!==t){const e=o.substr(0,t);o=o.substr(t+1),t=e.lastIndexOf(\":\"),-1===t?n+=r(e,!1,!1):(n+=r(e.substr(0,t),!1,!1),n+=\":\",n+=r(e.substr(t+1),!1,!0)),n+=\"@\"}o=o.toLowerCase(),t=o.lastIndexOf(\":\"),-1===t?n+=r(o,!1,!0):(n+=r(o.substr(0,t),!1,!0),n+=o.substr(t))}if(s){if(s.length>=3&&47===s.charCodeAt(0)&&58===s.charCodeAt(2)){const t=s.charCodeAt(1);t>=65&&t<=90&&(s=`/${String.fromCharCode(t+32)}:${s.substr(3)}`)}else if(s.length>=2&&58===s.charCodeAt(1)){const t=s.charCodeAt(0);t>=65&&t<=90&&(s=`${String.fromCharCode(t+32)}:${s.substr(2)}`)}n+=r(s,!0,!1)}return h&&(n+=\"?\",n+=r(h,!1,!1)),c&&(n+=\"#\",n+=e?c:d(c,!1,!1)),n}function v(t){try{return decodeURIComponent(t)}catch{return t.length>3?t.substr(0,3)+v(t.substr(3)):t}}const b=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function C(t){return t.match(b)?t.replace(b,(t=>v(t))):t}var A=r(470);const w=A.posix||A,x=\"/\";var P;!function(t){t.joinPath=function(t,...e){return t.with({path:w.join(t.path,...e)})},t.resolvePath=function(t,...e){let r=t.path,n=!1;r[0]!==x&&(r=x+r,n=!0);let i=w.resolve(r,...e);return n&&i[0]===x&&!t.authority&&(i=i.substring(1)),t.with({path:i})},t.dirname=function(t){if(0===t.path.length||t.path===x)return t;let e=w.dirname(t.path);return 1===e.length&&46===e.charCodeAt(0)&&(e=\"\"),t.with({path:e})},t.basename=function(t){return w.basename(t.path)},t.extname=function(t){return w.extname(t.path)}}(P||(P={}))})(),LIB=n})();export const{URI,Utils}=LIB;\n//# sourceMappingURL=index.mjs.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI, Utils } from 'vscode-uri';\nexport { URI };\nexport var UriUtils;\n(function (UriUtils) {\n    UriUtils.basename = Utils.basename;\n    UriUtils.dirname = Utils.dirname;\n    UriUtils.extname = Utils.extname;\n    UriUtils.joinPath = Utils.joinPath;\n    UriUtils.resolvePath = Utils.resolvePath;\n    function equals(a, b) {\n        return (a === null || a === void 0 ? void 0 : a.toString()) === (b === null || b === void 0 ? void 0 : b.toString());\n    }\n    UriUtils.equals = equals;\n    function relative(from, to) {\n        const fromPath = typeof from === 'string' ? from : from.path;\n        const toPath = typeof to === 'string' ? to : to.path;\n        const fromParts = fromPath.split('/').filter(e => e.length > 0);\n        const toParts = toPath.split('/').filter(e => e.length > 0);\n        let i = 0;\n        for (; i < fromParts.length; i++) {\n            if (fromParts[i] !== toParts[i]) {\n                break;\n            }\n        }\n        const backPart = '../'.repeat(fromParts.length - i);\n        const toPart = toParts.slice(i).join('/');\n        return backPart + toPart;\n    }\n    UriUtils.relative = relative;\n})(UriUtils || (UriUtils = {}));\n//# sourceMappingURL=uri-utils.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\n/**\n * Re-export 'TextDocument' from 'vscode-languageserver-textdocument' for convenience,\n *  including both type _and_ symbol (namespace), as we here and there also refer to the symbol,\n *  the overhead is very small, just a few kilobytes.\n * Everything else of that package (at the time contributing) is also defined\n *  in 'vscode-languageserver-protocol' or 'vscode-languageserver-types'.\n */\nexport { TextDocument } from 'vscode-languageserver-textdocument';\nimport { TextDocument } from './documents.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { URI } from '../utils/uri-utils.js';\n/**\n * A document is subject to several phases that are run in predefined order. Any state value implies that\n * smaller state values are finished as well.\n */\nexport var DocumentState;\n(function (DocumentState) {\n    /**\n     * The text content has changed and needs to be parsed again. The AST held by this outdated\n     * document instance is no longer valid.\n     */\n    DocumentState[DocumentState[\"Changed\"] = 0] = \"Changed\";\n    /**\n     * An AST has been created from the text content. The document structure can be traversed,\n     * but cross-references cannot be resolved yet. If necessary, the structure can be manipulated\n     * at this stage as a preprocessing step.\n     */\n    DocumentState[DocumentState[\"Parsed\"] = 1] = \"Parsed\";\n    /**\n     * The `IndexManager` service has processed AST nodes of this document. This means the\n     * exported symbols are available in the global scope and can be resolved from other documents.\n     */\n    DocumentState[DocumentState[\"IndexedContent\"] = 2] = \"IndexedContent\";\n    /**\n     * The `ScopeComputation` service has processed this document. This means the local symbols\n     * are stored in a MultiMap so they can be looked up by the `ScopeProvider` service.\n     * Once a document has reached this state, you may follow every reference - it will lazily\n     * resolve its `ref` property and yield either the target AST node or `undefined` in case\n     * the target is not in scope.\n     */\n    DocumentState[DocumentState[\"ComputedScopes\"] = 3] = \"ComputedScopes\";\n    /**\n     * The `Linker` service has processed this document. All outgoing references have been\n     * resolved or marked as erroneous.\n     */\n    DocumentState[DocumentState[\"Linked\"] = 4] = \"Linked\";\n    /**\n     * The `IndexManager` service has processed AST node references of this document. This is\n     * necessary to determine which documents are affected by a change in one of the workspace\n     * documents.\n     */\n    DocumentState[DocumentState[\"IndexedReferences\"] = 5] = \"IndexedReferences\";\n    /**\n     * The `DocumentValidator` service has processed this document. The language server listens\n     * to the results of this phase and sends diagnostics to the client.\n     */\n    DocumentState[DocumentState[\"Validated\"] = 6] = \"Validated\";\n})(DocumentState || (DocumentState = {}));\nexport class DefaultLangiumDocumentFactory {\n    constructor(services) {\n        this.serviceRegistry = services.ServiceRegistry;\n        this.textDocuments = services.workspace.TextDocuments;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n    }\n    async fromUri(uri, cancellationToken = CancellationToken.None) {\n        const content = await this.fileSystemProvider.readFile(uri);\n        return this.createAsync(uri, content, cancellationToken);\n    }\n    fromTextDocument(textDocument, uri, cancellationToken) {\n        uri = uri !== null && uri !== void 0 ? uri : URI.parse(textDocument.uri);\n        if (cancellationToken) {\n            return this.createAsync(uri, textDocument, cancellationToken);\n        }\n        else {\n            return this.create(uri, textDocument);\n        }\n    }\n    fromString(text, uri, cancellationToken) {\n        if (cancellationToken) {\n            return this.createAsync(uri, text, cancellationToken);\n        }\n        else {\n            return this.create(uri, text);\n        }\n    }\n    fromModel(model, uri) {\n        return this.create(uri, { $model: model });\n    }\n    create(uri, content) {\n        if (typeof content === 'string') {\n            const parseResult = this.parse(uri, content);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else if ('$model' in content) {\n            const parseResult = { value: content.$model, parserErrors: [], lexerErrors: [] };\n            return this.createLangiumDocument(parseResult, uri);\n        }\n        else {\n            const parseResult = this.parse(uri, content.getText());\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    async createAsync(uri, content, cancelToken) {\n        if (typeof content === 'string') {\n            const parseResult = await this.parseAsync(uri, content, cancelToken);\n            return this.createLangiumDocument(parseResult, uri, undefined, content);\n        }\n        else {\n            const parseResult = await this.parseAsync(uri, content.getText(), cancelToken);\n            return this.createLangiumDocument(parseResult, uri, content);\n        }\n    }\n    /**\n     * Create a LangiumDocument from a given parse result.\n     *\n     * A TextDocument is created on demand if it is not provided as argument here. Usually this\n     * should not be necessary because the main purpose of the TextDocument is to convert between\n     * text ranges and offsets, which is done solely in LSP request handling.\n     *\n     * With the introduction of {@link update} below this method is supposed to be mainly called\n     * during workspace initialization and on addition/recognition of new files, while changes in\n     * existing documents are processed via {@link update}.\n     */\n    createLangiumDocument(parseResult, uri, textDocument, text) {\n        let document;\n        if (textDocument) {\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                textDocument\n            };\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(uri, text);\n            document = {\n                parseResult,\n                uri,\n                state: DocumentState.Parsed,\n                references: [],\n                get textDocument() {\n                    return textDocumentGetter();\n                }\n            };\n        }\n        parseResult.value.$document = document;\n        return document;\n    }\n    async update(document, cancellationToken) {\n        var _a, _b;\n        // The CST full text property contains the original text that was used to create the AST.\n        const oldText = (_a = document.parseResult.value.$cstNode) === null || _a === void 0 ? void 0 : _a.root.fullText;\n        const textDocument = (_b = this.textDocuments) === null || _b === void 0 ? void 0 : _b.get(document.uri.toString());\n        const text = textDocument ? textDocument.getText() : await this.fileSystemProvider.readFile(document.uri);\n        if (textDocument) {\n            Object.defineProperty(document, 'textDocument', {\n                value: textDocument\n            });\n        }\n        else {\n            const textDocumentGetter = this.createTextDocumentGetter(document.uri, text);\n            Object.defineProperty(document, 'textDocument', {\n                get: textDocumentGetter\n            });\n        }\n        // Some of these documents can be pretty large, so parsing them again can be quite expensive.\n        // Therefore, we only parse if the text has actually changed.\n        if (oldText !== text) {\n            document.parseResult = await this.parseAsync(document.uri, text, cancellationToken);\n            document.parseResult.value.$document = document;\n        }\n        document.state = DocumentState.Parsed;\n        return document;\n    }\n    parse(uri, text) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.LangiumParser.parse(text);\n    }\n    parseAsync(uri, text, cancellationToken) {\n        const services = this.serviceRegistry.getServices(uri);\n        return services.parser.AsyncParser.parse(text, cancellationToken);\n    }\n    createTextDocumentGetter(uri, text) {\n        const serviceRegistry = this.serviceRegistry;\n        let textDoc = undefined;\n        return () => {\n            return textDoc !== null && textDoc !== void 0 ? textDoc : (textDoc = TextDocument.create(uri.toString(), serviceRegistry.getServices(uri).LanguageMetaData.languageId, 0, text !== null && text !== void 0 ? text : ''));\n        };\n    }\n}\nexport class DefaultLangiumDocuments {\n    constructor(services) {\n        this.documentMap = new Map();\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n    }\n    get all() {\n        return stream(this.documentMap.values());\n    }\n    addDocument(document) {\n        const uriString = document.uri.toString();\n        if (this.documentMap.has(uriString)) {\n            throw new Error(`A document with the URI '${uriString}' is already present.`);\n        }\n        this.documentMap.set(uriString, document);\n    }\n    getDocument(uri) {\n        const uriString = uri.toString();\n        return this.documentMap.get(uriString);\n    }\n    async getOrCreateDocument(uri, cancellationToken) {\n        let document = this.getDocument(uri);\n        if (document) {\n            return document;\n        }\n        document = await this.langiumDocumentFactory.fromUri(uri, cancellationToken);\n        this.addDocument(document);\n        return document;\n    }\n    createDocument(uri, text, cancellationToken) {\n        if (cancellationToken) {\n            return this.langiumDocumentFactory.fromString(text, uri, cancellationToken).then(document => {\n                this.addDocument(document);\n                return document;\n            });\n        }\n        else {\n            const document = this.langiumDocumentFactory.fromString(text, uri);\n            this.addDocument(document);\n            return document;\n        }\n    }\n    hasDocument(uri) {\n        return this.documentMap.has(uri.toString());\n    }\n    invalidateDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            langiumDoc.precomputedScopes = undefined;\n            langiumDoc.references = [];\n            langiumDoc.diagnostics = undefined;\n        }\n        return langiumDoc;\n    }\n    deleteDocument(uri) {\n        const uriString = uri.toString();\n        const langiumDoc = this.documentMap.get(uriString);\n        if (langiumDoc) {\n            langiumDoc.state = DocumentState.Changed;\n            this.documentMap.delete(uriString);\n        }\n        return langiumDoc;\n    }\n}\n//# sourceMappingURL=documents.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MultiMap } from '../utils/collections.js';\nimport { isOperationCancelled } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\n/**\n * Create DiagnosticData for a given diagnostic code. The result can be put into the `data` field of a DiagnosticInfo.\n */\nexport function diagnosticData(code) {\n    return { code };\n}\nexport var ValidationCategory;\n(function (ValidationCategory) {\n    ValidationCategory.all = ['fast', 'slow', 'built-in'];\n})(ValidationCategory || (ValidationCategory = {}));\n/**\n * Manages a set of `ValidationCheck`s to be applied when documents are validated.\n */\nexport class ValidationRegistry {\n    constructor(services) {\n        this.entries = new MultiMap();\n        this.reflection = services.shared.AstReflection;\n    }\n    /**\n     * Register a set of validation checks. Each value in the record can be either a single validation check (i.e. a function)\n     * or an array of validation checks.\n     *\n     * @param checksRecord Set of validation checks to register.\n     * @param category Optional category for the validation checks (defaults to `'fast'`).\n     * @param thisObj Optional object to be used as `this` when calling the validation check functions.\n     */\n    register(checksRecord, thisObj = this, category = 'fast') {\n        if (category === 'built-in') {\n            throw new Error(\"The 'built-in' category is reserved for lexer, parser, and linker errors.\");\n        }\n        for (const [type, ch] of Object.entries(checksRecord)) {\n            const callbacks = ch;\n            if (Array.isArray(callbacks)) {\n                for (const check of callbacks) {\n                    const entry = {\n                        check: this.wrapValidationException(check, thisObj),\n                        category\n                    };\n                    this.addEntry(type, entry);\n                }\n            }\n            else if (typeof callbacks === 'function') {\n                const entry = {\n                    check: this.wrapValidationException(callbacks, thisObj),\n                    category\n                };\n                this.addEntry(type, entry);\n            }\n        }\n    }\n    wrapValidationException(check, thisObj) {\n        return async (node, accept, cancelToken) => {\n            try {\n                await check.call(thisObj, node, accept, cancelToken);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    throw err;\n                }\n                console.error('An error occurred during validation:', err);\n                const message = err instanceof Error ? err.message : String(err);\n                if (err instanceof Error && err.stack) {\n                    console.error(err.stack);\n                }\n                accept('error', 'An error occurred during validation: ' + message, { node });\n            }\n        };\n    }\n    addEntry(type, entry) {\n        if (type === 'AstNode') {\n            this.entries.add('AstNode', entry);\n            return;\n        }\n        for (const subtype of this.reflection.getAllSubTypes(type)) {\n            this.entries.add(subtype, entry);\n        }\n    }\n    getChecks(type, categories) {\n        let checks = stream(this.entries.get(type))\n            .concat(this.entries.get('AstNode'));\n        if (categories) {\n            checks = checks.filter(entry => categories.includes(entry.category));\n        }\n        return checks.map(entry => entry.check);\n    }\n}\n//# sourceMappingURL=validation-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { findNodeForKeyword, findNodeForProperty } from '../utils/grammar-utils.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { tokenToRange } from '../utils/cst-utils.js';\nimport { interruptAndCheck, isOperationCancelled } from '../utils/promise-utils.js';\nimport { diagnosticData } from './validation-registry.js';\nexport class DefaultDocumentValidator {\n    constructor(services) {\n        this.validationRegistry = services.validation.ValidationRegistry;\n        this.metadata = services.LanguageMetaData;\n    }\n    async validateDocument(document, options = {}, cancelToken = CancellationToken.None) {\n        const parseResult = document.parseResult;\n        const diagnostics = [];\n        await interruptAndCheck(cancelToken);\n        if (!options.categories || options.categories.includes('built-in')) {\n            this.processLexingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterLexingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LexingError; })) {\n                return diagnostics;\n            }\n            this.processParsingErrors(parseResult, diagnostics, options);\n            if (options.stopAfterParsingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.ParsingError; })) {\n                return diagnostics;\n            }\n            this.processLinkingErrors(document, diagnostics, options);\n            if (options.stopAfterLinkingErrors && diagnostics.some(d => { var _a; return ((_a = d.data) === null || _a === void 0 ? void 0 : _a.code) === DocumentValidator.LinkingError; })) {\n                return diagnostics;\n            }\n        }\n        // Process custom validations\n        try {\n            diagnostics.push(...await this.validateAst(parseResult.value, options, cancelToken));\n        }\n        catch (err) {\n            if (isOperationCancelled(err)) {\n                throw err;\n            }\n            console.error('An error occurred during validation:', err);\n        }\n        await interruptAndCheck(cancelToken);\n        return diagnostics;\n    }\n    processLexingErrors(parseResult, diagnostics, _options) {\n        for (const lexerError of parseResult.lexerErrors) {\n            const diagnostic = {\n                severity: toDiagnosticSeverity('error'),\n                range: {\n                    start: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column - 1\n                    },\n                    end: {\n                        line: lexerError.line - 1,\n                        character: lexerError.column + lexerError.length - 1\n                    }\n                },\n                message: lexerError.message,\n                data: diagnosticData(DocumentValidator.LexingError),\n                source: this.getSource()\n            };\n            diagnostics.push(diagnostic);\n        }\n    }\n    processParsingErrors(parseResult, diagnostics, _options) {\n        for (const parserError of parseResult.parserErrors) {\n            let range = undefined;\n            // We can run into the chevrotain error recovery here\n            // The token contained in the parser error might be automatically inserted\n            // In this case every position value will be `NaN`\n            if (isNaN(parserError.token.startOffset)) {\n                // Some special parser error types contain a `previousToken`\n                // We can simply append our diagnostic to that token\n                if ('previousToken' in parserError) {\n                    const token = parserError.previousToken;\n                    if (!isNaN(token.startOffset)) {\n                        const position = { line: token.endLine - 1, character: token.endColumn };\n                        range = { start: position, end: position };\n                    }\n                    else {\n                        // No valid prev token. Might be empty document or containing only hidden tokens.\n                        // Point to document start\n                        const position = { line: 0, character: 0 };\n                        range = { start: position, end: position };\n                    }\n                }\n            }\n            else {\n                range = tokenToRange(parserError.token);\n            }\n            if (range) {\n                const diagnostic = {\n                    severity: toDiagnosticSeverity('error'),\n                    range,\n                    message: parserError.message,\n                    data: diagnosticData(DocumentValidator.ParsingError),\n                    source: this.getSource()\n                };\n                diagnostics.push(diagnostic);\n            }\n        }\n    }\n    processLinkingErrors(document, diagnostics, _options) {\n        for (const reference of document.references) {\n            const linkingError = reference.error;\n            if (linkingError) {\n                const info = {\n                    node: linkingError.container,\n                    property: linkingError.property,\n                    index: linkingError.index,\n                    data: {\n                        code: DocumentValidator.LinkingError,\n                        containerType: linkingError.container.$type,\n                        property: linkingError.property,\n                        refText: linkingError.reference.$refText\n                    }\n                };\n                diagnostics.push(this.toDiagnostic('error', linkingError.message, info));\n            }\n        }\n    }\n    async validateAst(rootNode, options, cancelToken = CancellationToken.None) {\n        const validationItems = [];\n        const acceptor = (severity, message, info) => {\n            validationItems.push(this.toDiagnostic(severity, message, info));\n        };\n        await Promise.all(streamAst(rootNode).map(async (node) => {\n            await interruptAndCheck(cancelToken);\n            const checks = this.validationRegistry.getChecks(node.$type, options.categories);\n            for (const check of checks) {\n                await check(node, acceptor, cancelToken);\n            }\n        }));\n        return validationItems;\n    }\n    toDiagnostic(severity, message, info) {\n        return {\n            message,\n            range: getDiagnosticRange(info),\n            severity: toDiagnosticSeverity(severity),\n            code: info.code,\n            codeDescription: info.codeDescription,\n            tags: info.tags,\n            relatedInformation: info.relatedInformation,\n            data: info.data,\n            source: this.getSource()\n        };\n    }\n    getSource() {\n        return this.metadata.languageId;\n    }\n}\nexport function getDiagnosticRange(info) {\n    if (info.range) {\n        return info.range;\n    }\n    let cstNode;\n    if (typeof info.property === 'string') {\n        cstNode = findNodeForProperty(info.node.$cstNode, info.property, info.index);\n    }\n    else if (typeof info.keyword === 'string') {\n        cstNode = findNodeForKeyword(info.node.$cstNode, info.keyword, info.index);\n    }\n    cstNode !== null && cstNode !== void 0 ? cstNode : (cstNode = info.node.$cstNode);\n    if (!cstNode) {\n        return {\n            start: { line: 0, character: 0 },\n            end: { line: 0, character: 0 }\n        };\n    }\n    return cstNode.range;\n}\nexport function toDiagnosticSeverity(severity) {\n    switch (severity) {\n        case 'error':\n            return 1; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Error\n        case 'warning':\n            return 2; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Warning\n        case 'info':\n            return 3; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Information\n        case 'hint':\n            return 4; // according to vscode-languageserver-types/lib/esm/main.js#DiagnosticSeverity.Hint\n        default:\n            throw new Error('Invalid diagnostic severity: ' + severity);\n    }\n}\nexport var DocumentValidator;\n(function (DocumentValidator) {\n    DocumentValidator.LexingError = 'lexing-error';\n    DocumentValidator.ParsingError = 'parsing-error';\n    DocumentValidator.LinkingError = 'linking-error';\n})(DocumentValidator || (DocumentValidator = {}));\n//# sourceMappingURL=document-validator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Disposable;\n(function (Disposable) {\n    function create(callback) {\n        return {\n            dispose: async () => await callback()\n        };\n    }\n    Disposable.create = create;\n})(Disposable || (Disposable = {}));\n//# sourceMappingURL=disposable.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isAstNode, isAstNodeDescription, isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { DocumentState } from '../workspace/documents.js';\nexport class DefaultLinker {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.langiumDocuments = () => services.shared.workspace.LangiumDocuments;\n        this.scopeProvider = services.references.ScopeProvider;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n    }\n    async link(document, cancelToken = CancellationToken.None) {\n        for (const node of streamAst(document.parseResult.value)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(node).forEach(ref => this.doLink(ref, document));\n        }\n    }\n    doLink(refInfo, document) {\n        const ref = refInfo.reference;\n        // The reference may already have been resolved lazily by accessing its `ref` property.\n        if (ref._ref === undefined) {\n            try {\n                const description = this.getCandidate(refInfo);\n                if (isLinkingError(description)) {\n                    ref._ref = description;\n                }\n                else {\n                    ref._nodeDescription = description;\n                    if (this.langiumDocuments().hasDocument(description.documentUri)) {\n                        // The target document is already loaded\n                        const linkedNode = this.loadAstNode(description);\n                        ref._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : this.createLinkingError(refInfo, description);\n                    }\n                }\n            }\n            catch (err) {\n                ref._ref = Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${ref.$refText}': ${err}` });\n            }\n        }\n        // Add the reference to the document's array of references\n        document.references.push(ref);\n    }\n    unlink(document) {\n        for (const ref of document.references) {\n            delete ref._ref;\n            delete ref._nodeDescription;\n        }\n        document.references = [];\n    }\n    getCandidate(refInfo) {\n        const scope = this.scopeProvider.getScope(refInfo);\n        const description = scope.getElement(refInfo.reference.$refText);\n        return description !== null && description !== void 0 ? description : this.createLinkingError(refInfo);\n    }\n    buildReference(node, property, refNode, refText) {\n        // See behavior description in doc of Linker, update that on changes in here.\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        const linker = this;\n        const reference = {\n            $refNode: refNode,\n            $refText: refText,\n            get ref() {\n                var _a;\n                if (isAstNode(this._ref)) {\n                    // Most frequent case: the target is already resolved.\n                    return this._ref;\n                }\n                else if (isAstNodeDescription(this._nodeDescription)) {\n                    // A candidate has been found before, but it is not loaded yet.\n                    const linkedNode = linker.loadAstNode(this._nodeDescription);\n                    this._ref = linkedNode !== null && linkedNode !== void 0 ? linkedNode : linker.createLinkingError({ reference, container: node, property }, this._nodeDescription);\n                }\n                else if (this._ref === undefined) {\n                    // The reference has not been linked yet, so do that now.\n                    const refData = linker.getLinkedNode({ reference, container: node, property });\n                    if (refData.error && getDocument(node).state < DocumentState.ComputedScopes) {\n                        // Document scope is not ready, don't set `this._ref` so linker can retry later.\n                        return undefined;\n                    }\n                    this._ref = (_a = refData.node) !== null && _a !== void 0 ? _a : refData.error;\n                    this._nodeDescription = refData.descr;\n                }\n                return isAstNode(this._ref) ? this._ref : undefined;\n            },\n            get $nodeDescription() {\n                return this._nodeDescription;\n            },\n            get error() {\n                return isLinkingError(this._ref) ? this._ref : undefined;\n            }\n        };\n        return reference;\n    }\n    getLinkedNode(refInfo) {\n        try {\n            const description = this.getCandidate(refInfo);\n            if (isLinkingError(description)) {\n                return { error: description };\n            }\n            const linkedNode = this.loadAstNode(description);\n            if (linkedNode) {\n                return { node: linkedNode, descr: description };\n            }\n            else {\n                return {\n                    descr: description,\n                    error: this.createLinkingError(refInfo, description)\n                };\n            }\n        }\n        catch (err) {\n            return {\n                error: Object.assign(Object.assign({}, refInfo), { message: `An error occurred while resolving reference to '${refInfo.reference.$refText}': ${err}` })\n            };\n        }\n    }\n    loadAstNode(nodeDescription) {\n        if (nodeDescription.node) {\n            return nodeDescription.node;\n        }\n        const doc = this.langiumDocuments().getDocument(nodeDescription.documentUri);\n        if (!doc) {\n            return undefined;\n        }\n        return this.astNodeLocator.getAstNode(doc.parseResult.value, nodeDescription.path);\n    }\n    createLinkingError(refInfo, targetDescription) {\n        // Check whether the document is sufficiently processed by the DocumentBuilder. If not, this is a hint for a bug\n        // in the language implementation.\n        const document = getDocument(refInfo.container);\n        if (document.state < DocumentState.ComputedScopes) {\n            console.warn(`Attempted reference resolution before document reached ComputedScopes state (${document.uri}).`);\n        }\n        const referenceType = this.reflection.getReferenceType(refInfo);\n        return Object.assign(Object.assign({}, refInfo), { message: `Could not resolve reference to ${referenceType} named '${refInfo.reference.$refText}'.`, targetDescription });\n    }\n}\n//# sourceMappingURL=linker.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findNodeForProperty } from '../utils/grammar-utils.js';\nexport function isNamed(node) {\n    return typeof node.name === 'string';\n}\nexport class DefaultNameProvider {\n    getName(node) {\n        if (isNamed(node)) {\n            return node.name;\n        }\n        return undefined;\n    }\n    getNameNode(node) {\n        return findNodeForProperty(node.$cstNode, 'name');\n    }\n}\n//# sourceMappingURL=name-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { findAssignment } from '../utils/grammar-utils.js';\nimport { isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isChildNode, toDocumentSegment } from '../utils/cst-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultReferences {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.index = services.shared.workspace.IndexManager;\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    findDeclaration(sourceCstNode) {\n        if (sourceCstNode) {\n            const assignment = findAssignment(sourceCstNode);\n            const nodeElem = sourceCstNode.astNode;\n            if (assignment && nodeElem) {\n                const reference = nodeElem[assignment.feature];\n                if (isReference(reference)) {\n                    return reference.ref;\n                }\n                else if (Array.isArray(reference)) {\n                    for (const ref of reference) {\n                        if (isReference(ref) && ref.$refNode\n                            && ref.$refNode.offset <= sourceCstNode.offset\n                            && ref.$refNode.end >= sourceCstNode.end) {\n                            return ref.ref;\n                        }\n                    }\n                }\n            }\n            if (nodeElem) {\n                const nameNode = this.nameProvider.getNameNode(nodeElem);\n                // Only return the targeted node in case the targeted cst node is the name node or part of it\n                if (nameNode && (nameNode === sourceCstNode || isChildNode(sourceCstNode, nameNode))) {\n                    return nodeElem;\n                }\n            }\n        }\n        return undefined;\n    }\n    findDeclarationNode(sourceCstNode) {\n        const astNode = this.findDeclaration(sourceCstNode);\n        if (astNode === null || astNode === void 0 ? void 0 : astNode.$cstNode) {\n            const targetNode = this.nameProvider.getNameNode(astNode);\n            return targetNode !== null && targetNode !== void 0 ? targetNode : astNode.$cstNode;\n        }\n        return undefined;\n    }\n    findReferences(targetNode, options) {\n        const refs = [];\n        if (options.includeDeclaration) {\n            const ref = this.getReferenceToSelf(targetNode);\n            if (ref) {\n                refs.push(ref);\n            }\n        }\n        let indexReferences = this.index.findAllReferences(targetNode, this.nodeLocator.getAstNodePath(targetNode));\n        if (options.documentUri) {\n            indexReferences = indexReferences.filter(ref => UriUtils.equals(ref.sourceUri, options.documentUri));\n        }\n        refs.push(...indexReferences);\n        return stream(refs);\n    }\n    getReferenceToSelf(targetNode) {\n        const nameNode = this.nameProvider.getNameNode(targetNode);\n        if (nameNode) {\n            const doc = getDocument(targetNode);\n            const path = this.nodeLocator.getAstNodePath(targetNode);\n            return {\n                sourceUri: doc.uri,\n                sourcePath: path,\n                targetUri: doc.uri,\n                targetPath: path,\n                segment: toDocumentSegment(nameNode),\n                local: true\n            };\n        }\n        return undefined;\n    }\n}\n//# sourceMappingURL=references.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Reduction, stream } from './stream.js';\n/**\n * A multimap is a variation of a Map that has potentially multiple values for every key.\n */\nexport class MultiMap {\n    constructor(elements) {\n        this.map = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.add(key, value);\n            }\n        }\n    }\n    /**\n     * The total number of values in the multimap.\n     */\n    get size() {\n        return Reduction.sum(stream(this.map.values()).map(a => a.length));\n    }\n    /**\n     * Clear all entries in the multimap.\n     */\n    clear() {\n        this.map.clear();\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method deletes the specific key / value pair from the multimap.\n     *  * Without a value, all values associated with the given key are deleted.\n     *\n     * @returns `true` if a value existed and has been removed, or `false` if the specified\n     *     key / value does not exist.\n     */\n    delete(key, value) {\n        if (value === undefined) {\n            return this.map.delete(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                const index = values.indexOf(value);\n                if (index >= 0) {\n                    if (values.length === 1) {\n                        this.map.delete(key);\n                    }\n                    else {\n                        values.splice(index, 1);\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n    /**\n     * Returns an array of all values associated with the given key. If no value exists,\n     * an empty array is returned.\n     *\n     * _Note:_ The returned array is assumed not to be modified. Use the `set` method to add a\n     * value and `delete` to remove a value from the multimap.\n     */\n    get(key) {\n        var _a;\n        return (_a = this.map.get(key)) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Operates differently depending on whether a `value` is given:\n     *  * With a value, this method returns `true` if the specific key / value pair is present in the multimap.\n     *  * Without a value, this method returns `true` if the given key is present in the multimap.\n     */\n    has(key, value) {\n        if (value === undefined) {\n            return this.map.has(key);\n        }\n        else {\n            const values = this.map.get(key);\n            if (values) {\n                return values.indexOf(value) >= 0;\n            }\n            return false;\n        }\n    }\n    /**\n     * Add the given key / value pair to the multimap.\n     */\n    add(key, value) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(value);\n        }\n        else {\n            this.map.set(key, [value]);\n        }\n        return this;\n    }\n    /**\n     * Add the given set of key / value pairs to the multimap.\n     */\n    addAll(key, values) {\n        if (this.map.has(key)) {\n            this.map.get(key).push(...values);\n        }\n        else {\n            this.map.set(key, Array.from(values));\n        }\n        return this;\n    }\n    /**\n     * Invokes the given callback function for every key / value pair in the multimap.\n     */\n    forEach(callbackfn) {\n        this.map.forEach((array, key) => array.forEach(value => callbackfn(value, key, this)));\n    }\n    /**\n     * Returns an iterator of key, value pairs for every entry in the map.\n     */\n    [Symbol.iterator]() {\n        return this.entries().iterator();\n    }\n    /**\n     * Returns a stream of key, value pairs for every entry in the map.\n     */\n    entries() {\n        return stream(this.map.entries())\n            .flatMap(([key, array]) => array.map(value => [key, value]));\n    }\n    /**\n     * Returns a stream of keys in the map.\n     */\n    keys() {\n        return stream(this.map.keys());\n    }\n    /**\n     * Returns a stream of values in the map.\n     */\n    values() {\n        return stream(this.map.values()).flat();\n    }\n    /**\n     * Returns a stream of key, value set pairs for every key in the map.\n     */\n    entriesGroupedByKey() {\n        return stream(this.map.entries());\n    }\n}\nexport class BiMap {\n    get size() {\n        return this.map.size;\n    }\n    constructor(elements) {\n        this.map = new Map();\n        this.inverse = new Map();\n        if (elements) {\n            for (const [key, value] of elements) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this.map.clear();\n        this.inverse.clear();\n    }\n    set(key, value) {\n        this.map.set(key, value);\n        this.inverse.set(value, key);\n        return this;\n    }\n    get(key) {\n        return this.map.get(key);\n    }\n    getKey(value) {\n        return this.inverse.get(value);\n    }\n    delete(key) {\n        const value = this.map.get(key);\n        if (value !== undefined) {\n            this.map.delete(key);\n            this.inverse.delete(value);\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=collections.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { streamAllContents, streamContents } from '../utils/ast-utils.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\n/**\n * The default scope computation creates and collectes descriptions of the AST nodes to be exported into the\n * _global_ scope from the given document. By default those are the document's root AST node and its directly\n * contained child nodes.\n *\n * Besides, it gathers all AST nodes that have a name (according to the `NameProvider` service) and includes them\n * in the local scope of their particular container nodes. As a result, for every cross-reference in the AST,\n * target elements from the same level (siblings) and further up towards the root (parents and siblings of parents)\n * are visible. Elements being nested inside lower levels (children, children of siblings and parents' siblings)\n * are _invisible_ by default, but that can be changed by customizing this service.\n */\nexport class DefaultScopeComputation {\n    constructor(services) {\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n    }\n    async computeExports(document, cancelToken = CancellationToken.None) {\n        return this.computeExportsForNode(document.parseResult.value, document, undefined, cancelToken);\n    }\n    /**\n     * Creates {@link AstNodeDescription AstNodeDescriptions} for the given {@link AstNode parentNode} and its children.\n     * The list of children to be considered is determined by the function parameter {@link children}.\n     * By default only the direct children of {@link parentNode} are visited, nested nodes are not exported.\n     *\n     * @param parentNode AST node to be exported, i.e., of which an {@link AstNodeDescription} shall be added to the returned list.\n     * @param document The document containing the AST node to be exported.\n     * @param children A function called with {@link parentNode} as single argument and returning an {@link Iterable} supplying the children to be visited, which must be directly or transitively contained in {@link parentNode}.\n     * @param cancelToken Indicates when to cancel the current operation.\n     * @throws `OperationCanceled` if a user action occurs during execution.\n     * @returns A list of {@link AstNodeDescription AstNodeDescriptions} to be published to index.\n     */\n    async computeExportsForNode(parentNode, document, children = streamContents, cancelToken = CancellationToken.None) {\n        const exports = [];\n        this.exportNode(parentNode, exports, document);\n        for (const node of children(parentNode)) {\n            await interruptAndCheck(cancelToken);\n            this.exportNode(node, exports, document);\n        }\n        return exports;\n    }\n    /**\n     * Add a single node to the list of exports if it has a name. Override this method to change how\n     * symbols are exported, e.g. by modifying their exported name.\n     */\n    exportNode(node, exports, document) {\n        const name = this.nameProvider.getName(node);\n        if (name) {\n            exports.push(this.descriptions.createDescription(node, name, document));\n        }\n    }\n    async computeLocalScopes(document, cancelToken = CancellationToken.None) {\n        const rootNode = document.parseResult.value;\n        const scopes = new MultiMap();\n        // Here we navigate the full AST - local scopes shall be available in the whole document\n        for (const node of streamAllContents(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            this.processNode(node, document, scopes);\n        }\n        return scopes;\n    }\n    /**\n     * Process a single node during scopes computation. The default implementation makes the node visible\n     * in the subtree of its container (if the node has a name). Override this method to change this,\n     * e.g. by increasing the visibility to a higher level in the AST.\n     */\n    processNode(node, document, scopes) {\n        const container = node.$container;\n        if (container) {\n            const name = this.nameProvider.getName(node);\n            if (name) {\n                scopes.add(container, this.descriptions.createDescription(node, name, document));\n            }\n        }\n    }\n}\n//# sourceMappingURL=scope-computation.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { EMPTY_STREAM, stream } from '../utils/stream.js';\n/**\n * The default scope implementation is based on a `Stream`. It has an optional _outer scope_ describing\n * the next level of elements, which are queried when a target element is not found in the stream provided\n * to this scope.\n */\nexport class StreamScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = elements;\n        this.outerScope = outerScope;\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n    }\n    getAllElements() {\n        if (this.outerScope) {\n            return this.elements.concat(this.outerScope.getAllElements());\n        }\n        else {\n            return this.elements;\n        }\n    }\n    getElement(name) {\n        const local = this.caseInsensitive\n            ? this.elements.find(e => e.name.toLowerCase() === name.toLowerCase())\n            : this.elements.find(e => e.name === name);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n}\nexport class MapScope {\n    constructor(elements, outerScope, options) {\n        var _a;\n        this.elements = new Map();\n        this.caseInsensitive = (_a = options === null || options === void 0 ? void 0 : options.caseInsensitive) !== null && _a !== void 0 ? _a : false;\n        for (const element of elements) {\n            const name = this.caseInsensitive\n                ? element.name.toLowerCase()\n                : element.name;\n            this.elements.set(name, element);\n        }\n        this.outerScope = outerScope;\n    }\n    getElement(name) {\n        const localName = this.caseInsensitive ? name.toLowerCase() : name;\n        const local = this.elements.get(localName);\n        if (local) {\n            return local;\n        }\n        if (this.outerScope) {\n            return this.outerScope.getElement(name);\n        }\n        return undefined;\n    }\n    getAllElements() {\n        let elementStream = stream(this.elements.values());\n        if (this.outerScope) {\n            elementStream = elementStream.concat(this.outerScope.getAllElements());\n        }\n        return elementStream;\n    }\n}\nexport const EMPTY_SCOPE = {\n    getElement() {\n        return undefined;\n    },\n    getAllElements() {\n        return EMPTY_STREAM;\n    }\n};\n//# sourceMappingURL=scope.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DisposableCache {\n    constructor() {\n        this.toDispose = [];\n        this.isDisposed = false;\n    }\n    onDispose(disposable) {\n        this.toDispose.push(disposable);\n    }\n    dispose() {\n        this.throwIfDisposed();\n        this.clear();\n        this.isDisposed = true;\n        this.toDispose.forEach(disposable => disposable.dispose());\n    }\n    throwIfDisposed() {\n        if (this.isDisposed) {\n            throw new Error('This cache has already been disposed');\n        }\n    }\n}\nexport class SimpleCache extends DisposableCache {\n    constructor() {\n        super(...arguments);\n        this.cache = new Map();\n    }\n    has(key) {\n        this.throwIfDisposed();\n        return this.cache.has(key);\n    }\n    set(key, value) {\n        this.throwIfDisposed();\n        this.cache.set(key, value);\n    }\n    get(key, provider) {\n        this.throwIfDisposed();\n        if (this.cache.has(key)) {\n            return this.cache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            this.cache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(key) {\n        this.throwIfDisposed();\n        return this.cache.delete(key);\n    }\n    clear() {\n        this.throwIfDisposed();\n        this.cache.clear();\n    }\n}\nexport class ContextCache extends DisposableCache {\n    constructor(converter) {\n        super();\n        this.cache = new Map();\n        this.converter = converter !== null && converter !== void 0 ? converter : (value => value);\n    }\n    has(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).has(key);\n    }\n    set(contextKey, key, value) {\n        this.throwIfDisposed();\n        this.cacheForContext(contextKey).set(key, value);\n    }\n    get(contextKey, key, provider) {\n        this.throwIfDisposed();\n        const contextCache = this.cacheForContext(contextKey);\n        if (contextCache.has(key)) {\n            return contextCache.get(key);\n        }\n        else if (provider) {\n            const value = provider();\n            contextCache.set(key, value);\n            return value;\n        }\n        else {\n            return undefined;\n        }\n    }\n    delete(contextKey, key) {\n        this.throwIfDisposed();\n        return this.cacheForContext(contextKey).delete(key);\n    }\n    clear(contextKey) {\n        this.throwIfDisposed();\n        if (contextKey) {\n            const mapKey = this.converter(contextKey);\n            this.cache.delete(mapKey);\n        }\n        else {\n            this.cache.clear();\n        }\n    }\n    cacheForContext(contextKey) {\n        const mapKey = this.converter(contextKey);\n        let documentCache = this.cache.get(mapKey);\n        if (!documentCache) {\n            documentCache = new Map();\n            this.cache.set(mapKey, documentCache);\n        }\n        return documentCache;\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to a document.\n * If this document is changed or deleted, all associated key/value pairs are deleted.\n */\nexport class DocumentCache extends ContextCache {\n    constructor(sharedServices) {\n        super(uri => uri.toString());\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate((changed, deleted) => {\n            const allUris = changed.concat(deleted);\n            for (const uri of allUris) {\n                this.clear(uri);\n            }\n        }));\n    }\n}\n/**\n * Every key/value pair in this cache is scoped to the whole workspace.\n * If any document in the workspace changes, the whole cache is evicted.\n */\nexport class WorkspaceCache extends SimpleCache {\n    constructor(sharedServices) {\n        super();\n        this.onDispose(sharedServices.workspace.DocumentBuilder.onUpdate(() => {\n            this.clear();\n        }));\n    }\n}\n//# sourceMappingURL=caching.js.map","/******************************************************************************\n * Copyright 2021-2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { MapScope, StreamScope } from './scope.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { WorkspaceCache } from '../utils/caching.js';\nexport class DefaultScopeProvider {\n    constructor(services) {\n        this.reflection = services.shared.AstReflection;\n        this.nameProvider = services.references.NameProvider;\n        this.descriptions = services.workspace.AstNodeDescriptionProvider;\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.globalScopeCache = new WorkspaceCache(services.shared);\n    }\n    getScope(context) {\n        const scopes = [];\n        const referenceType = this.reflection.getReferenceType(context);\n        const precomputed = getDocument(context.container).precomputedScopes;\n        if (precomputed) {\n            let currentNode = context.container;\n            do {\n                const allDescriptions = precomputed.get(currentNode);\n                if (allDescriptions.length > 0) {\n                    scopes.push(stream(allDescriptions).filter(desc => this.reflection.isSubtype(desc.type, referenceType)));\n                }\n                currentNode = currentNode.$container;\n            } while (currentNode);\n        }\n        let result = this.getGlobalScope(referenceType, context);\n        for (let i = scopes.length - 1; i >= 0; i--) {\n            result = this.createScope(scopes[i], result);\n        }\n        return result;\n    }\n    /**\n     * Create a scope for the given collection of AST node descriptions.\n     */\n    createScope(elements, outerScope, options) {\n        return new StreamScope(stream(elements), outerScope, options);\n    }\n    /**\n     * Create a scope for the given collection of AST nodes, which need to be transformed into respective\n     * descriptions first. This is done using the `NameProvider` and `AstNodeDescriptionProvider` services.\n     */\n    createScopeForNodes(elements, outerScope, options) {\n        const s = stream(elements).map(e => {\n            const name = this.nameProvider.getName(e);\n            if (name) {\n                return this.descriptions.createDescription(e, name);\n            }\n            return undefined;\n        }).nonNullable();\n        return new StreamScope(s, outerScope, options);\n    }\n    /**\n     * Create a global scope filtered for the given reference type.\n     */\n    getGlobalScope(referenceType, _context) {\n        return this.globalScopeCache.get(referenceType, () => new MapScope(this.indexManager.allElements(referenceType)));\n    }\n}\n//# sourceMappingURL=scope-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { URI } from 'vscode-uri';\nimport { isAstNode, isReference } from '../syntax-tree.js';\nimport { getDocument } from '../utils/ast-utils.js';\nimport { findNodesForProperty } from '../utils/grammar-utils.js';\nexport function isAstNodeWithComment(node) {\n    return typeof node.$comment === 'string';\n}\nfunction isIntermediateReference(obj) {\n    return typeof obj === 'object' && !!obj && ('$ref' in obj || '$error' in obj);\n}\nexport class DefaultJsonSerializer {\n    constructor(services) {\n        /** The set of AstNode properties to be ignored by the serializer. */\n        this.ignoreProperties = new Set(['$container', '$containerProperty', '$containerIndex', '$document', '$cstNode']);\n        this.langiumDocuments = services.shared.workspace.LangiumDocuments;\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    serialize(node, options = {}) {\n        const specificReplacer = options === null || options === void 0 ? void 0 : options.replacer;\n        const defaultReplacer = (key, value) => this.replacer(key, value, options);\n        const replacer = specificReplacer ? (key, value) => specificReplacer(key, value, defaultReplacer) : defaultReplacer;\n        try {\n            this.currentDocument = getDocument(node);\n            return JSON.stringify(node, replacer, options === null || options === void 0 ? void 0 : options.space);\n        }\n        finally {\n            this.currentDocument = undefined;\n        }\n    }\n    deserialize(content, options = {}) {\n        const root = JSON.parse(content);\n        this.linkNode(root, root, options);\n        return root;\n    }\n    replacer(key, value, { refText, sourceText, textRegions, comments, uriConverter }) {\n        var _a, _b, _c, _d;\n        if (this.ignoreProperties.has(key)) {\n            return undefined;\n        }\n        else if (isReference(value)) {\n            const refValue = value.ref;\n            const $refText = refText ? value.$refText : undefined;\n            if (refValue) {\n                const targetDocument = getDocument(refValue);\n                let targetUri = '';\n                if (this.currentDocument && this.currentDocument !== targetDocument) {\n                    if (uriConverter) {\n                        targetUri = uriConverter(targetDocument.uri, value);\n                    }\n                    else {\n                        targetUri = targetDocument.uri.toString();\n                    }\n                }\n                const targetPath = this.astNodeLocator.getAstNodePath(refValue);\n                return {\n                    $ref: `${targetUri}#${targetPath}`,\n                    $refText\n                };\n            }\n            else {\n                return {\n                    $error: (_b = (_a = value.error) === null || _a === void 0 ? void 0 : _a.message) !== null && _b !== void 0 ? _b : 'Could not resolve reference',\n                    $refText\n                };\n            }\n        }\n        else if (isAstNode(value)) {\n            let astNode = undefined;\n            if (textRegions) {\n                astNode = this.addAstNodeRegionWithAssignmentsTo(Object.assign({}, value));\n                if ((!key || value.$document) && (astNode === null || astNode === void 0 ? void 0 : astNode.$textRegion)) {\n                    // The document URI is added to the root node of the resulting JSON tree\n                    astNode.$textRegion.documentURI = (_c = this.currentDocument) === null || _c === void 0 ? void 0 : _c.uri.toString();\n                }\n            }\n            if (sourceText && !key) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                astNode.$sourceText = (_d = value.$cstNode) === null || _d === void 0 ? void 0 : _d.text;\n            }\n            if (comments) {\n                astNode !== null && astNode !== void 0 ? astNode : (astNode = Object.assign({}, value));\n                const comment = this.commentProvider.getComment(value);\n                if (comment) {\n                    astNode.$comment = comment.replace(/\\r/g, '');\n                }\n            }\n            return astNode !== null && astNode !== void 0 ? astNode : value;\n        }\n        else {\n            return value;\n        }\n    }\n    addAstNodeRegionWithAssignmentsTo(node) {\n        const createDocumentSegment = cstNode => ({\n            offset: cstNode.offset,\n            end: cstNode.end,\n            length: cstNode.length,\n            range: cstNode.range,\n        });\n        if (node.$cstNode) {\n            const textRegion = node.$textRegion = createDocumentSegment(node.$cstNode);\n            const assignments = textRegion.assignments = {};\n            Object.keys(node).filter(key => !key.startsWith('$')).forEach(key => {\n                const propertyAssignments = findNodesForProperty(node.$cstNode, key).map(createDocumentSegment);\n                if (propertyAssignments.length !== 0) {\n                    assignments[key] = propertyAssignments;\n                }\n            });\n            return node;\n        }\n        return undefined;\n    }\n    linkNode(node, root, options, container, containerProperty, containerIndex) {\n        for (const [propertyName, item] of Object.entries(node)) {\n            if (Array.isArray(item)) {\n                for (let index = 0; index < item.length; index++) {\n                    const element = item[index];\n                    if (isIntermediateReference(element)) {\n                        item[index] = this.reviveReference(node, propertyName, root, element, options);\n                    }\n                    else if (isAstNode(element)) {\n                        this.linkNode(element, root, options, node, propertyName, index);\n                    }\n                }\n            }\n            else if (isIntermediateReference(item)) {\n                node[propertyName] = this.reviveReference(node, propertyName, root, item, options);\n            }\n            else if (isAstNode(item)) {\n                this.linkNode(item, root, options, node, propertyName);\n            }\n        }\n        const mutable = node;\n        mutable.$container = container;\n        mutable.$containerProperty = containerProperty;\n        mutable.$containerIndex = containerIndex;\n    }\n    reviveReference(container, property, root, reference, options) {\n        let refText = reference.$refText;\n        let error = reference.$error;\n        if (reference.$ref) {\n            const ref = this.getRefNode(root, reference.$ref, options.uriConverter);\n            if (isAstNode(ref)) {\n                if (!refText) {\n                    refText = this.nameProvider.getName(ref);\n                }\n                return {\n                    $refText: refText !== null && refText !== void 0 ? refText : '',\n                    ref\n                };\n            }\n            else {\n                error = ref;\n            }\n        }\n        if (error) {\n            const ref = {\n                $refText: refText !== null && refText !== void 0 ? refText : ''\n            };\n            ref.error = {\n                container,\n                property,\n                message: error,\n                reference: ref\n            };\n            return ref;\n        }\n        else {\n            return undefined;\n        }\n    }\n    getRefNode(root, uri, uriConverter) {\n        try {\n            const fragmentIndex = uri.indexOf('#');\n            if (fragmentIndex === 0) {\n                const node = this.astNodeLocator.getAstNode(root, uri.substring(1));\n                if (!node) {\n                    return 'Could not resolve path: ' + uri;\n                }\n                return node;\n            }\n            if (fragmentIndex < 0) {\n                const documentUri = uriConverter ? uriConverter(uri) : URI.parse(uri);\n                const document = this.langiumDocuments.getDocument(documentUri);\n                if (!document) {\n                    return 'Could not find document for URI: ' + uri;\n                }\n                return document.parseResult.value;\n            }\n            const documentUri = uriConverter ? uriConverter(uri.substring(0, fragmentIndex)) : URI.parse(uri.substring(0, fragmentIndex));\n            const document = this.langiumDocuments.getDocument(documentUri);\n            if (!document) {\n                return 'Could not find document for URI: ' + uri;\n            }\n            if (fragmentIndex === uri.length - 1) {\n                return document.parseResult.value;\n            }\n            const node = this.astNodeLocator.getAstNode(document.parseResult.value, uri.substring(fragmentIndex + 1));\n            if (!node) {\n                return 'Could not resolve URI: ' + uri;\n            }\n            return node;\n        }\n        catch (err) {\n            return String(err);\n        }\n    }\n}\n//# sourceMappingURL=json-serializer.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { UriUtils } from './utils/uri-utils.js';\n/**\n * Generic registry for Langium services, but capable of being used with extending service sets as well (such as the lsp-complete LangiumCoreServices set)\n */\nexport class DefaultServiceRegistry {\n    register(language) {\n        if (!this.singleton && !this.map) {\n            // This is the first language to be registered; store it as singleton.\n            this.singleton = language;\n            return;\n        }\n        if (!this.map) {\n            this.map = {};\n            if (this.singleton) {\n                // Move the previous singleton instance to the new map.\n                for (const ext of this.singleton.LanguageMetaData.fileExtensions) {\n                    this.map[ext] = this.singleton;\n                }\n                this.singleton = undefined;\n            }\n        }\n        // Store the language services in the map.\n        for (const ext of language.LanguageMetaData.fileExtensions) {\n            if (this.map[ext] !== undefined && this.map[ext] !== language) {\n                console.warn(`The file extension ${ext} is used by multiple languages. It is now assigned to '${language.LanguageMetaData.languageId}'.`);\n            }\n            this.map[ext] = language;\n        }\n    }\n    getServices(uri) {\n        if (this.singleton !== undefined) {\n            return this.singleton;\n        }\n        if (this.map === undefined) {\n            throw new Error('The service registry is empty. Use `register` to register the services of a language.');\n        }\n        const ext = UriUtils.extname(uri);\n        const services = this.map[ext];\n        if (!services) {\n            throw new Error(`The service registry contains no services for the extension '${ext}'.`);\n        }\n        return services;\n    }\n    get all() {\n        if (this.singleton !== undefined) {\n            return [this.singleton];\n        }\n        if (this.map !== undefined) {\n            return Object.values(this.map);\n        }\n        return [];\n    }\n}\n//# sourceMappingURL=service-registry.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { isLinkingError } from '../syntax-tree.js';\nimport { getDocument, streamAst, streamReferences } from '../utils/ast-utils.js';\nimport { toDocumentSegment } from '../utils/cst-utils.js';\nimport { interruptAndCheck } from '../utils/promise-utils.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultAstNodeDescriptionProvider {\n    constructor(services) {\n        this.astNodeLocator = services.workspace.AstNodeLocator;\n        this.nameProvider = services.references.NameProvider;\n    }\n    createDescription(node, name, document = getDocument(node)) {\n        name !== null && name !== void 0 ? name : (name = this.nameProvider.getName(node));\n        const path = this.astNodeLocator.getAstNodePath(node);\n        if (!name) {\n            throw new Error(`Node at path ${path} has no name.`);\n        }\n        let nameNodeSegment;\n        const nameSegmentGetter = () => { var _a; return nameNodeSegment !== null && nameNodeSegment !== void 0 ? nameNodeSegment : (nameNodeSegment = toDocumentSegment((_a = this.nameProvider.getNameNode(node)) !== null && _a !== void 0 ? _a : node.$cstNode)); };\n        return {\n            node,\n            name,\n            get nameSegment() {\n                return nameSegmentGetter();\n            },\n            selectionSegment: toDocumentSegment(node.$cstNode),\n            type: node.$type,\n            documentUri: document.uri,\n            path\n        };\n    }\n}\nexport class DefaultReferenceDescriptionProvider {\n    constructor(services) {\n        this.nodeLocator = services.workspace.AstNodeLocator;\n    }\n    async createDescriptions(document, cancelToken = CancellationToken.None) {\n        const descr = [];\n        const rootNode = document.parseResult.value;\n        for (const astNode of streamAst(rootNode)) {\n            await interruptAndCheck(cancelToken);\n            streamReferences(astNode).filter(refInfo => !isLinkingError(refInfo)).forEach(refInfo => {\n                // TODO: Consider logging a warning or throw an exception when DocumentState is < than Linked\n                const description = this.createDescription(refInfo);\n                if (description) {\n                    descr.push(description);\n                }\n            });\n        }\n        return descr;\n    }\n    createDescription(refInfo) {\n        const targetNodeDescr = refInfo.reference.$nodeDescription;\n        const refCstNode = refInfo.reference.$refNode;\n        if (!targetNodeDescr || !refCstNode) {\n            return undefined;\n        }\n        const docUri = getDocument(refInfo.container).uri;\n        return {\n            sourceUri: docUri,\n            sourcePath: this.nodeLocator.getAstNodePath(refInfo.container),\n            targetUri: targetNodeDescr.documentUri,\n            targetPath: targetNodeDescr.path,\n            segment: toDocumentSegment(refCstNode),\n            local: UriUtils.equals(targetNodeDescr.documentUri, docUri)\n        };\n    }\n}\n//# sourceMappingURL=ast-descriptions.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class DefaultAstNodeLocator {\n    constructor() {\n        this.segmentSeparator = '/';\n        this.indexSeparator = '@';\n    }\n    getAstNodePath(node) {\n        if (node.$container) {\n            const containerPath = this.getAstNodePath(node.$container);\n            const newSegment = this.getPathSegment(node);\n            const nodePath = containerPath + this.segmentSeparator + newSegment;\n            return nodePath;\n        }\n        return '';\n    }\n    getPathSegment({ $containerProperty, $containerIndex }) {\n        if (!$containerProperty) {\n            throw new Error(\"Missing '$containerProperty' in AST node.\");\n        }\n        if ($containerIndex !== undefined) {\n            return $containerProperty + this.indexSeparator + $containerIndex;\n        }\n        return $containerProperty;\n    }\n    getAstNode(node, path) {\n        const segments = path.split(this.segmentSeparator);\n        return segments.reduce((previousValue, currentValue) => {\n            if (!previousValue || currentValue.length === 0) {\n                return previousValue;\n            }\n            const propertyIndex = currentValue.indexOf(this.indexSeparator);\n            if (propertyIndex > 0) {\n                const property = currentValue.substring(0, propertyIndex);\n                const arrayIndex = parseInt(currentValue.substring(propertyIndex + 1));\n                const array = previousValue[property];\n                return array === null || array === void 0 ? void 0 : array[arrayIndex];\n            }\n            return previousValue[currentValue];\n        }, node);\n    }\n}\n//# sourceMappingURL=ast-node-locator.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred } from '../utils/promise-utils.js';\n/**\n * Base configuration provider for building up other configuration providers\n */\nexport class DefaultConfigurationProvider {\n    constructor(services) {\n        this._ready = new Deferred();\n        this.settings = {};\n        this.workspaceConfig = false;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a, _b;\n        this.workspaceConfig = (_b = (_a = params.capabilities.workspace) === null || _a === void 0 ? void 0 : _a.configuration) !== null && _b !== void 0 ? _b : false;\n    }\n    async initialized(params) {\n        if (this.workspaceConfig) {\n            if (params.register) {\n                // params.register(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const languages = this.serviceRegistry.all;\n                params.register({\n                    // Listen to configuration changes for all languages\n                    section: languages.map(lang => this.toSectionName(lang.LanguageMetaData.languageId))\n                });\n            }\n            if (params.fetchConfiguration) {\n                // params.fetchConfiguration(...) is a function to be provided by the calling language server for the sake of\n                //  decoupling this implementation from the concrete LSP implementations, specifically the LSP Connection\n                const configToUpdate = this.serviceRegistry.all.map(lang => ({\n                    // Fetch the configuration changes for all languages\n                    section: this.toSectionName(lang.LanguageMetaData.languageId)\n                }));\n                // get workspace configurations (default scope URI)\n                const configs = await params.fetchConfiguration(configToUpdate);\n                configToUpdate.forEach((conf, idx) => {\n                    this.updateSectionConfiguration(conf.section, configs[idx]);\n                });\n            }\n        }\n        this._ready.resolve();\n    }\n    /**\n     *  Updates the cached configurations using the `change` notification parameters.\n     *\n     * @param change The parameters of a change configuration notification.\n     * `settings` property of the change object could be expressed as `Record<string, Record<string, any>>`\n     */\n    updateConfiguration(change) {\n        if (!change.settings) {\n            return;\n        }\n        Object.keys(change.settings).forEach(section => {\n            this.updateSectionConfiguration(section, change.settings[section]);\n        });\n    }\n    updateSectionConfiguration(section, configuration) {\n        this.settings[section] = configuration;\n    }\n    /**\n    * Returns a configuration value stored for the given language.\n    *\n    * @param language The language id\n    * @param configuration Configuration name\n    */\n    async getConfiguration(language, configuration) {\n        await this.ready;\n        const sectionName = this.toSectionName(language);\n        if (this.settings[sectionName]) {\n            return this.settings[sectionName][configuration];\n        }\n    }\n    toSectionName(languageId) {\n        return `${languageId}`;\n    }\n}\n//# sourceMappingURL=configuration.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Disposable } from '../utils/disposable.js';\nimport { MultiMap } from '../utils/collections.js';\nimport { OperationCancelled, interruptAndCheck } from '../utils/promise-utils.js';\nimport { stream } from '../utils/stream.js';\nimport { ValidationCategory } from '../validation/validation-registry.js';\nimport { DocumentState } from './documents.js';\nexport class DefaultDocumentBuilder {\n    constructor(services) {\n        this.updateBuildOptions = {\n            // Default: run only the built-in validation checks and those in the _fast_ category (includes those without category)\n            validation: {\n                categories: ['built-in', 'fast']\n            }\n        };\n        this.updateListeners = [];\n        this.buildPhaseListeners = new MultiMap();\n        this.buildState = new Map();\n        this.documentBuildWaiters = new Map();\n        this.currentState = DocumentState.Changed;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.langiumDocumentFactory = services.workspace.LangiumDocumentFactory;\n        this.indexManager = services.workspace.IndexManager;\n        this.serviceRegistry = services.ServiceRegistry;\n    }\n    async build(documents, options = {}, cancelToken = CancellationToken.None) {\n        var _a, _b;\n        for (const document of documents) {\n            const key = document.uri.toString();\n            if (document.state === DocumentState.Validated) {\n                if (typeof options.validation === 'boolean' && options.validation) {\n                    // Force re-running all validation checks\n                    document.state = DocumentState.IndexedReferences;\n                    document.diagnostics = undefined;\n                    this.buildState.delete(key);\n                }\n                else if (typeof options.validation === 'object') {\n                    const buildState = this.buildState.get(key);\n                    const previousCategories = (_a = buildState === null || buildState === void 0 ? void 0 : buildState.result) === null || _a === void 0 ? void 0 : _a.validationChecks;\n                    if (previousCategories) {\n                        // Validation with explicit options was requested for a document that has already been partly validated.\n                        // In this case, we need to merge the previous validation categories with the new ones.\n                        const newCategories = (_b = options.validation.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n                        const categories = newCategories.filter(c => !previousCategories.includes(c));\n                        if (categories.length > 0) {\n                            this.buildState.set(key, {\n                                completed: false,\n                                options: {\n                                    validation: Object.assign(Object.assign({}, options.validation), { categories })\n                                },\n                                result: buildState.result\n                            });\n                            document.state = DocumentState.IndexedReferences;\n                        }\n                    }\n                }\n            }\n            else {\n                // Default: forget any previous build options\n                this.buildState.delete(key);\n            }\n        }\n        this.currentState = DocumentState.Changed;\n        await this.emitUpdate(documents.map(e => e.uri), []);\n        await this.buildDocuments(documents, options, cancelToken);\n    }\n    async update(changed, deleted, cancelToken = CancellationToken.None) {\n        this.currentState = DocumentState.Changed;\n        // Remove all metadata of documents that are reported as deleted\n        for (const deletedUri of deleted) {\n            this.langiumDocuments.deleteDocument(deletedUri);\n            this.buildState.delete(deletedUri.toString());\n            this.indexManager.remove(deletedUri);\n        }\n        // Set the state of all changed documents to `Changed` so they are completely rebuilt\n        for (const changedUri of changed) {\n            const invalidated = this.langiumDocuments.invalidateDocument(changedUri);\n            if (!invalidated) {\n                // We create an unparsed, invalid document.\n                // This will be parsed as soon as we reach the first document builder phase.\n                // This allows to cancel the parsing process later in case we need it.\n                const newDocument = this.langiumDocumentFactory.fromModel({ $type: 'INVALID' }, changedUri);\n                newDocument.state = DocumentState.Changed;\n                this.langiumDocuments.addDocument(newDocument);\n            }\n            this.buildState.delete(changedUri.toString());\n        }\n        // Set the state of all documents that should be relinked to `ComputedScopes` (if not already lower)\n        const allChangedUris = stream(changed).concat(deleted).map(uri => uri.toString()).toSet();\n        this.langiumDocuments.all\n            .filter(doc => !allChangedUris.has(doc.uri.toString()) && this.shouldRelink(doc, allChangedUris))\n            .forEach(doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            linker.unlink(doc);\n            doc.state = Math.min(doc.state, DocumentState.ComputedScopes);\n            doc.diagnostics = undefined;\n        });\n        // Notify listeners of the update\n        await this.emitUpdate(changed, deleted);\n        // Only allow interrupting the execution after all state changes are done\n        await interruptAndCheck(cancelToken);\n        // Collect all documents that we should rebuild\n        const rebuildDocuments = this.langiumDocuments.all\n            .filter(doc => {\n            var _a;\n            // This includes those that were reported as changed and those that we selected for relinking\n            return doc.state < DocumentState.Linked\n                // This includes those for which a previous build has been cancelled\n                || !((_a = this.buildState.get(doc.uri.toString())) === null || _a === void 0 ? void 0 : _a.completed);\n        })\n            .toArray();\n        await this.buildDocuments(rebuildDocuments, this.updateBuildOptions, cancelToken);\n    }\n    async emitUpdate(changed, deleted) {\n        await Promise.all(this.updateListeners.map(listener => listener(changed, deleted)));\n    }\n    /**\n     * Check whether the given document should be relinked after changes were found in the given URIs.\n     */\n    shouldRelink(document, changedUris) {\n        // Relink documents with linking errors -- maybe those references can be resolved now\n        if (document.references.some(ref => ref.error !== undefined)) {\n            return true;\n        }\n        // Check whether the document is affected by any of the changed URIs\n        return this.indexManager.isAffected(document, changedUris);\n    }\n    onUpdate(callback) {\n        this.updateListeners.push(callback);\n        return Disposable.create(() => {\n            const index = this.updateListeners.indexOf(callback);\n            if (index >= 0) {\n                this.updateListeners.splice(index, 1);\n            }\n        });\n    }\n    /**\n     * Build the given documents by stepping through all build phases. If a document's state indicates\n     * that a certain build phase is already done, the phase is skipped for that document.\n     */\n    async buildDocuments(documents, options, cancelToken) {\n        this.prepareBuild(documents, options);\n        // 0. Parse content\n        await this.runCancelable(documents, DocumentState.Parsed, cancelToken, doc => this.langiumDocumentFactory.update(doc, cancelToken));\n        // 1. Index content\n        await this.runCancelable(documents, DocumentState.IndexedContent, cancelToken, doc => this.indexManager.updateContent(doc, cancelToken));\n        // 2. Compute scopes\n        await this.runCancelable(documents, DocumentState.ComputedScopes, cancelToken, async (doc) => {\n            const scopeComputation = this.serviceRegistry.getServices(doc.uri).references.ScopeComputation;\n            doc.precomputedScopes = await scopeComputation.computeLocalScopes(doc, cancelToken);\n        });\n        // 3. Linking\n        await this.runCancelable(documents, DocumentState.Linked, cancelToken, doc => {\n            const linker = this.serviceRegistry.getServices(doc.uri).references.Linker;\n            return linker.link(doc, cancelToken);\n        });\n        // 4. Index references\n        await this.runCancelable(documents, DocumentState.IndexedReferences, cancelToken, doc => this.indexManager.updateReferences(doc, cancelToken));\n        // 5. Validation\n        const toBeValidated = documents.filter(doc => this.shouldValidate(doc));\n        await this.runCancelable(toBeValidated, DocumentState.Validated, cancelToken, doc => this.validate(doc, cancelToken));\n        // If we've made it to this point without being cancelled, we can mark the build state as completed.\n        for (const doc of documents) {\n            const state = this.buildState.get(doc.uri.toString());\n            if (state) {\n                state.completed = true;\n            }\n        }\n    }\n    prepareBuild(documents, options) {\n        for (const doc of documents) {\n            const key = doc.uri.toString();\n            const state = this.buildState.get(key);\n            // If the document has no previous build state, we set it. If it has one, but it's already marked\n            // as completed, we overwrite it. If the previous build was not completed, we keep its state\n            // and continue where it was cancelled.\n            if (!state || state.completed) {\n                this.buildState.set(key, {\n                    completed: false,\n                    options,\n                    result: state === null || state === void 0 ? void 0 : state.result\n                });\n            }\n        }\n    }\n    async runCancelable(documents, targetState, cancelToken, callback) {\n        const filtered = documents.filter(e => e.state < targetState);\n        for (const document of filtered) {\n            await interruptAndCheck(cancelToken);\n            await callback(document);\n            document.state = targetState;\n        }\n        await this.notifyBuildPhase(filtered, targetState, cancelToken);\n        this.currentState = targetState;\n    }\n    onBuildPhase(targetState, callback) {\n        this.buildPhaseListeners.add(targetState, callback);\n        return Disposable.create(() => {\n            this.buildPhaseListeners.delete(targetState, callback);\n        });\n    }\n    waitUntil(state, uriOrToken, cancelToken) {\n        let uri = undefined;\n        if (uriOrToken && 'path' in uriOrToken) {\n            uri = uriOrToken;\n        }\n        else {\n            cancelToken = uriOrToken;\n        }\n        cancelToken !== null && cancelToken !== void 0 ? cancelToken : (cancelToken = CancellationToken.None);\n        if (uri) {\n            const document = this.langiumDocuments.getDocument(uri);\n            if (document && document.state > state) {\n                return Promise.resolve(uri);\n            }\n        }\n        if (this.currentState >= state) {\n            return Promise.resolve(undefined);\n        }\n        else if (cancelToken.isCancellationRequested) {\n            return Promise.reject(OperationCancelled);\n        }\n        return new Promise((resolve, reject) => {\n            const buildDisposable = this.onBuildPhase(state, () => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                if (uri) {\n                    const document = this.langiumDocuments.getDocument(uri);\n                    resolve(document === null || document === void 0 ? void 0 : document.uri);\n                }\n                else {\n                    resolve(undefined);\n                }\n            });\n            const cancelDisposable = cancelToken.onCancellationRequested(() => {\n                buildDisposable.dispose();\n                cancelDisposable.dispose();\n                reject(OperationCancelled);\n            });\n        });\n    }\n    async notifyBuildPhase(documents, state, cancelToken) {\n        if (documents.length === 0) {\n            // Don't notify when no document has been processed\n            return;\n        }\n        const listeners = this.buildPhaseListeners.get(state);\n        for (const listener of listeners) {\n            await interruptAndCheck(cancelToken);\n            await listener(documents, cancelToken);\n        }\n    }\n    /**\n     * Determine whether the given document should be validated during a build. The default\n     * implementation checks the `validation` property of the build options. If it's set to `true`\n     * or a `ValidationOptions` object, the document is included in the validation phase.\n     */\n    shouldValidate(document) {\n        return Boolean(this.getBuildOptions(document).validation);\n    }\n    /**\n     * Run validation checks on the given document and store the resulting diagnostics in the document.\n     * If the document already contains diagnostics, the new ones are added to the list.\n     */\n    async validate(document, cancelToken) {\n        var _a, _b;\n        const validator = this.serviceRegistry.getServices(document.uri).validation.DocumentValidator;\n        const validationSetting = this.getBuildOptions(document).validation;\n        const options = typeof validationSetting === 'object' ? validationSetting : undefined;\n        const diagnostics = await validator.validateDocument(document, options, cancelToken);\n        if (document.diagnostics) {\n            document.diagnostics.push(...diagnostics);\n        }\n        else {\n            document.diagnostics = diagnostics;\n        }\n        // Store information about the executed validation in the build state\n        const state = this.buildState.get(document.uri.toString());\n        if (state) {\n            (_a = state.result) !== null && _a !== void 0 ? _a : (state.result = {});\n            const newCategories = (_b = options === null || options === void 0 ? void 0 : options.categories) !== null && _b !== void 0 ? _b : ValidationCategory.all;\n            if (state.result.validationChecks) {\n                state.result.validationChecks.push(...newCategories);\n            }\n            else {\n                state.result.validationChecks = [...newCategories];\n            }\n        }\n    }\n    getBuildOptions(document) {\n        var _a, _b;\n        return (_b = (_a = this.buildState.get(document.uri.toString())) === null || _a === void 0 ? void 0 : _a.options) !== null && _b !== void 0 ? _b : {};\n    }\n}\n//# sourceMappingURL=document-builder.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { ContextCache } from '../utils/caching.js';\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { stream } from '../utils/stream.js';\nimport { UriUtils } from '../utils/uri-utils.js';\nexport class DefaultIndexManager {\n    constructor(services) {\n        /**\n         * The symbol index stores all `AstNodeDescription` items exported by a document.\n         * The key used in this map is the string representation of the specific document URI.\n         */\n        this.symbolIndex = new Map();\n        /**\n         * This is a cache for the `allElements()` method.\n         * It caches the descriptions from `symbolIndex` grouped by types.\n         */\n        this.symbolByTypeIndex = new ContextCache();\n        /**\n         * This index keeps track of all `ReferenceDescription` items exported by a document.\n         * This is used to compute which elements are affected by a document change\n         * and for finding references to an AST node.\n         */\n        this.referenceIndex = new Map();\n        this.documents = services.workspace.LangiumDocuments;\n        this.serviceRegistry = services.ServiceRegistry;\n        this.astReflection = services.AstReflection;\n    }\n    findAllReferences(targetNode, astNodePath) {\n        const targetDocUri = getDocument(targetNode).uri;\n        const result = [];\n        this.referenceIndex.forEach(docRefs => {\n            docRefs.forEach(refDescr => {\n                if (UriUtils.equals(refDescr.targetUri, targetDocUri) && refDescr.targetPath === astNodePath) {\n                    result.push(refDescr);\n                }\n            });\n        });\n        return stream(result);\n    }\n    allElements(nodeType, uris) {\n        let documentUris = stream(this.symbolIndex.keys());\n        if (uris) {\n            documentUris = documentUris.filter(uri => !uris || uris.has(uri));\n        }\n        return documentUris\n            .map(uri => this.getFileDescriptions(uri, nodeType))\n            .flat();\n    }\n    getFileDescriptions(uri, nodeType) {\n        var _a;\n        if (!nodeType) {\n            return (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n        }\n        const descriptions = this.symbolByTypeIndex.get(uri, nodeType, () => {\n            var _a;\n            const allFileDescriptions = (_a = this.symbolIndex.get(uri)) !== null && _a !== void 0 ? _a : [];\n            return allFileDescriptions.filter(e => this.astReflection.isSubtype(e.type, nodeType));\n        });\n        return descriptions;\n    }\n    remove(uri) {\n        const uriString = uri.toString();\n        this.symbolIndex.delete(uriString);\n        this.symbolByTypeIndex.clear(uriString);\n        this.referenceIndex.delete(uriString);\n    }\n    async updateContent(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const exports = await services.references.ScopeComputation.computeExports(document, cancelToken);\n        const uri = document.uri.toString();\n        this.symbolIndex.set(uri, exports);\n        this.symbolByTypeIndex.clear(uri);\n    }\n    async updateReferences(document, cancelToken = CancellationToken.None) {\n        const services = this.serviceRegistry.getServices(document.uri);\n        const indexData = await services.workspace.ReferenceDescriptionProvider.createDescriptions(document, cancelToken);\n        this.referenceIndex.set(document.uri.toString(), indexData);\n    }\n    isAffected(document, changedUris) {\n        const references = this.referenceIndex.get(document.uri.toString());\n        if (!references) {\n            return false;\n        }\n        return references.some(ref => !ref.local && changedUris.has(ref.targetUri.toString()));\n    }\n}\n//# sourceMappingURL=index-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken } from '../utils/cancellation.js';\nimport { Deferred, interruptAndCheck } from '../utils/promise-utils.js';\nimport { URI, UriUtils } from '../utils/uri-utils.js';\nexport class DefaultWorkspaceManager {\n    constructor(services) {\n        this.initialBuildOptions = {};\n        this._ready = new Deferred();\n        this.serviceRegistry = services.ServiceRegistry;\n        this.langiumDocuments = services.workspace.LangiumDocuments;\n        this.documentBuilder = services.workspace.DocumentBuilder;\n        this.fileSystemProvider = services.workspace.FileSystemProvider;\n        this.mutex = services.workspace.WorkspaceLock;\n    }\n    get ready() {\n        return this._ready.promise;\n    }\n    initialize(params) {\n        var _a;\n        this.folders = (_a = params.workspaceFolders) !== null && _a !== void 0 ? _a : undefined;\n    }\n    initialized(_params) {\n        // Initialize the workspace even if there are no workspace folders\n        // We still want to load additional documents (language library or similar) during initialization\n        return this.mutex.write(token => { var _a; return this.initializeWorkspace((_a = this.folders) !== null && _a !== void 0 ? _a : [], token); });\n    }\n    async initializeWorkspace(folders, cancelToken = CancellationToken.None) {\n        const documents = await this.performStartup(folders);\n        // Only after creating all documents do we check whether we need to cancel the initialization\n        // The document builder will later pick up on all unprocessed documents\n        await interruptAndCheck(cancelToken);\n        await this.documentBuilder.build(documents, this.initialBuildOptions, cancelToken);\n    }\n    /**\n     * Performs the uninterruptable startup sequence of the workspace manager.\n     * This methods loads all documents in the workspace and other documents and returns them.\n     */\n    async performStartup(folders) {\n        const fileExtensions = this.serviceRegistry.all.flatMap(e => e.LanguageMetaData.fileExtensions);\n        const documents = [];\n        const collector = (document) => {\n            documents.push(document);\n            if (!this.langiumDocuments.hasDocument(document.uri)) {\n                this.langiumDocuments.addDocument(document);\n            }\n        };\n        // Even though we don't await the initialization of the workspace manager,\n        // we can still assume that all library documents and file documents are loaded by the time we start building documents.\n        // The mutex prevents anything from performing a workspace build until we check the cancellation token\n        await this.loadAdditionalDocuments(folders, collector);\n        await Promise.all(folders.map(wf => [wf, this.getRootFolder(wf)])\n            .map(async (entry) => this.traverseFolder(...entry, fileExtensions, collector)));\n        this._ready.resolve();\n        return documents;\n    }\n    /**\n     * Load all additional documents that shall be visible in the context of the given workspace\n     * folders and add them to the collector. This can be used to include built-in libraries of\n     * your language, which can be either loaded from provided files or constructed in memory.\n     */\n    loadAdditionalDocuments(_folders, _collector) {\n        return Promise.resolve();\n    }\n    /**\n     * Determine the root folder of the source documents in the given workspace folder.\n     * The default implementation returns the URI of the workspace folder, but you can override\n     * this to return a subfolder like `src` instead.\n     */\n    getRootFolder(workspaceFolder) {\n        return URI.parse(workspaceFolder.uri);\n    }\n    /**\n     * Traverse the file system folder identified by the given URI and its subfolders. All\n     * contained files that match the file extensions are added to the collector.\n     */\n    async traverseFolder(workspaceFolder, folderPath, fileExtensions, collector) {\n        const content = await this.fileSystemProvider.readDirectory(folderPath);\n        await Promise.all(content.map(async (entry) => {\n            if (this.includeEntry(workspaceFolder, entry, fileExtensions)) {\n                if (entry.isDirectory) {\n                    await this.traverseFolder(workspaceFolder, entry.uri, fileExtensions, collector);\n                }\n                else if (entry.isFile) {\n                    const document = await this.langiumDocuments.getOrCreateDocument(entry.uri);\n                    collector(document);\n                }\n            }\n        }));\n    }\n    /**\n     * Determine whether the given folder entry shall be included while indexing the workspace.\n     */\n    includeEntry(_workspaceFolder, entry, fileExtensions) {\n        const name = UriUtils.basename(entry.uri);\n        if (name.startsWith('.')) {\n            return false;\n        }\n        if (entry.isDirectory) {\n            return name !== 'node_modules' && name !== 'out';\n        }\n        else if (entry.isFile) {\n            const extname = UriUtils.extname(entry.uri);\n            return fileExtensions.includes(extname);\n        }\n        return false;\n    }\n}\n//# sourceMappingURL=workspace-manager.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Lexer as ChevrotainLexer } from 'chevrotain';\nexport class DefaultLexer {\n    constructor(services) {\n        const tokens = services.parser.TokenBuilder.buildTokens(services.Grammar, {\n            caseInsensitive: services.LanguageMetaData.caseInsensitive\n        });\n        this.tokenTypes = this.toTokenTypeDictionary(tokens);\n        const lexerTokens = isTokenTypeDictionary(tokens) ? Object.values(tokens) : tokens;\n        this.chevrotainLexer = new ChevrotainLexer(lexerTokens, {\n            positionTracking: 'full'\n        });\n    }\n    get definition() {\n        return this.tokenTypes;\n    }\n    tokenize(text) {\n        var _a;\n        const chevrotainResult = this.chevrotainLexer.tokenize(text);\n        return {\n            tokens: chevrotainResult.tokens,\n            errors: chevrotainResult.errors,\n            hidden: (_a = chevrotainResult.groups.hidden) !== null && _a !== void 0 ? _a : []\n        };\n    }\n    toTokenTypeDictionary(buildTokens) {\n        if (isTokenTypeDictionary(buildTokens))\n            return buildTokens;\n        const tokens = isIMultiModeLexerDefinition(buildTokens) ? Object.values(buildTokens.modes).flat() : buildTokens;\n        const res = {};\n        tokens.forEach(token => res[token.name] = token);\n        return res;\n    }\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenType array\n */\nexport function isTokenTypeArray(tokenVocabulary) {\n    return Array.isArray(tokenVocabulary) && (tokenVocabulary.length === 0 || 'name' in tokenVocabulary[0]);\n}\n/**\n * Returns a check whether the given TokenVocabulary is IMultiModeLexerDefinition\n */\nexport function isIMultiModeLexerDefinition(tokenVocabulary) {\n    return tokenVocabulary && 'modes' in tokenVocabulary && 'defaultMode' in tokenVocabulary;\n}\n/**\n * Returns a check whether the given TokenVocabulary is TokenTypeDictionary\n */\nexport function isTokenTypeDictionary(tokenVocabulary) {\n    return !isTokenTypeArray(tokenVocabulary) && !isIMultiModeLexerDefinition(tokenVocabulary);\n}\n//# sourceMappingURL=lexer.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Position, Range } from 'vscode-languageserver-types';\nimport { NEWLINE_REGEXP, escapeRegExp } from '../utils/regexp-utils.js';\nimport { URI } from '../utils/uri-utils.js';\nexport function parseJSDoc(node, start, options) {\n    let opts;\n    let position;\n    if (typeof node === 'string') {\n        position = start;\n        opts = options;\n    }\n    else {\n        position = node.range.start;\n        opts = start;\n    }\n    if (!position) {\n        position = Position.create(0, 0);\n    }\n    const lines = getLines(node);\n    const normalizedOptions = normalizeOptions(opts);\n    const tokens = tokenize({\n        lines,\n        position,\n        options: normalizedOptions\n    });\n    return parseJSDocComment({\n        index: 0,\n        tokens,\n        position\n    });\n}\nexport function isJSDoc(node, options) {\n    const normalizedOptions = normalizeOptions(options);\n    const lines = getLines(node);\n    if (lines.length === 0) {\n        return false;\n    }\n    const first = lines[0];\n    const last = lines[lines.length - 1];\n    const firstRegex = normalizedOptions.start;\n    const lastRegex = normalizedOptions.end;\n    return Boolean(firstRegex === null || firstRegex === void 0 ? void 0 : firstRegex.exec(first)) && Boolean(lastRegex === null || lastRegex === void 0 ? void 0 : lastRegex.exec(last));\n}\nfunction getLines(node) {\n    let content = '';\n    if (typeof node === 'string') {\n        content = node;\n    }\n    else {\n        content = node.text;\n    }\n    const lines = content.split(NEWLINE_REGEXP);\n    return lines;\n}\nconst tagRegex = /\\s*(@([\\p{L}][\\p{L}\\p{N}]*)?)/uy;\nconst inlineTagRegex = /\\{(@[\\p{L}][\\p{L}\\p{N}]*)(\\s*)([^\\r\\n}]+)?\\}/gu;\nfunction tokenize(context) {\n    var _a, _b, _c;\n    const tokens = [];\n    let currentLine = context.position.line;\n    let currentCharacter = context.position.character;\n    for (let i = 0; i < context.lines.length; i++) {\n        const first = i === 0;\n        const last = i === context.lines.length - 1;\n        let line = context.lines[i];\n        let index = 0;\n        if (first && context.options.start) {\n            const match = (_a = context.options.start) === null || _a === void 0 ? void 0 : _a.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        else {\n            const match = (_b = context.options.line) === null || _b === void 0 ? void 0 : _b.exec(line);\n            if (match) {\n                index = match.index + match[0].length;\n            }\n        }\n        if (last) {\n            const match = (_c = context.options.end) === null || _c === void 0 ? void 0 : _c.exec(line);\n            if (match) {\n                line = line.substring(0, match.index);\n            }\n        }\n        line = line.substring(0, lastCharacter(line));\n        const whitespaceEnd = skipWhitespace(line, index);\n        if (whitespaceEnd >= line.length) {\n            // Only create a break token when we already have previous tokens\n            if (tokens.length > 0) {\n                const position = Position.create(currentLine, currentCharacter);\n                tokens.push({\n                    type: 'break',\n                    content: '',\n                    range: Range.create(position, position)\n                });\n            }\n        }\n        else {\n            tagRegex.lastIndex = index;\n            const tagMatch = tagRegex.exec(line);\n            if (tagMatch) {\n                const fullMatch = tagMatch[0];\n                const value = tagMatch[1];\n                const start = Position.create(currentLine, currentCharacter + index);\n                const end = Position.create(currentLine, currentCharacter + index + fullMatch.length);\n                tokens.push({\n                    type: 'tag',\n                    content: value,\n                    range: Range.create(start, end)\n                });\n                index += fullMatch.length;\n                index = skipWhitespace(line, index);\n            }\n            if (index < line.length) {\n                const rest = line.substring(index);\n                const inlineTagMatches = Array.from(rest.matchAll(inlineTagRegex));\n                tokens.push(...buildInlineTokens(inlineTagMatches, rest, currentLine, currentCharacter + index));\n            }\n        }\n        currentLine++;\n        currentCharacter = 0;\n    }\n    // Remove last break token if there is one\n    if (tokens.length > 0 && tokens[tokens.length - 1].type === 'break') {\n        return tokens.slice(0, -1);\n    }\n    return tokens;\n}\nfunction buildInlineTokens(tags, line, lineIndex, characterIndex) {\n    const tokens = [];\n    if (tags.length === 0) {\n        const start = Position.create(lineIndex, characterIndex);\n        const end = Position.create(lineIndex, characterIndex + line.length);\n        tokens.push({\n            type: 'text',\n            content: line,\n            range: Range.create(start, end)\n        });\n    }\n    else {\n        let lastIndex = 0;\n        for (const match of tags) {\n            const matchIndex = match.index;\n            const startContent = line.substring(lastIndex, matchIndex);\n            if (startContent.length > 0) {\n                tokens.push({\n                    type: 'text',\n                    content: line.substring(lastIndex, matchIndex),\n                    range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, matchIndex + characterIndex))\n                });\n            }\n            let offset = startContent.length + 1;\n            const tagName = match[1];\n            tokens.push({\n                type: 'inline-tag',\n                content: tagName,\n                range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + tagName.length + characterIndex))\n            });\n            offset += tagName.length;\n            if (match.length === 4) {\n                offset += match[2].length;\n                const value = match[3];\n                tokens.push({\n                    type: 'text',\n                    content: value,\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + value.length + characterIndex))\n                });\n            }\n            else {\n                tokens.push({\n                    type: 'text',\n                    content: '',\n                    range: Range.create(Position.create(lineIndex, lastIndex + offset + characterIndex), Position.create(lineIndex, lastIndex + offset + characterIndex))\n                });\n            }\n            lastIndex = matchIndex + match[0].length;\n        }\n        const endContent = line.substring(lastIndex);\n        if (endContent.length > 0) {\n            tokens.push({\n                type: 'text',\n                content: endContent,\n                range: Range.create(Position.create(lineIndex, lastIndex + characterIndex), Position.create(lineIndex, lastIndex + characterIndex + endContent.length))\n            });\n        }\n    }\n    return tokens;\n}\nconst nonWhitespaceRegex = /\\S/;\nconst whitespaceEndRegex = /\\s*$/;\nfunction skipWhitespace(line, index) {\n    const match = line.substring(index).match(nonWhitespaceRegex);\n    if (match) {\n        return index + match.index;\n    }\n    else {\n        return line.length;\n    }\n}\nfunction lastCharacter(line) {\n    const match = line.match(whitespaceEndRegex);\n    if (match && typeof match.index === 'number') {\n        return match.index;\n    }\n    return undefined;\n}\n// Parsing\nfunction parseJSDocComment(context) {\n    var _a, _b, _c, _d;\n    const startPosition = Position.create(context.position.line, context.position.character);\n    if (context.tokens.length === 0) {\n        return new JSDocCommentImpl([], Range.create(startPosition, startPosition));\n    }\n    const elements = [];\n    while (context.index < context.tokens.length) {\n        const element = parseJSDocElement(context, elements[elements.length - 1]);\n        if (element) {\n            elements.push(element);\n        }\n    }\n    const start = (_b = (_a = elements[0]) === null || _a === void 0 ? void 0 : _a.range.start) !== null && _b !== void 0 ? _b : startPosition;\n    const end = (_d = (_c = elements[elements.length - 1]) === null || _c === void 0 ? void 0 : _c.range.end) !== null && _d !== void 0 ? _d : startPosition;\n    return new JSDocCommentImpl(elements, Range.create(start, end));\n}\nfunction parseJSDocElement(context, last) {\n    const next = context.tokens[context.index];\n    if (next.type === 'tag') {\n        return parseJSDocTag(context, false);\n    }\n    else if (next.type === 'text' || next.type === 'inline-tag') {\n        return parseJSDocText(context);\n    }\n    else {\n        appendEmptyLine(next, last);\n        context.index++;\n        return undefined;\n    }\n}\nfunction appendEmptyLine(token, element) {\n    if (element) {\n        const line = new JSDocLineImpl('', token.range);\n        if ('inlines' in element) {\n            element.inlines.push(line);\n        }\n        else {\n            element.content.inlines.push(line);\n        }\n    }\n}\nfunction parseJSDocText(context) {\n    let token = context.tokens[context.index];\n    const firstToken = token;\n    let lastToken = token;\n    const lines = [];\n    while (token && token.type !== 'break' && token.type !== 'tag') {\n        lines.push(parseJSDocInline(context));\n        lastToken = token;\n        token = context.tokens[context.index];\n    }\n    return new JSDocTextImpl(lines, Range.create(firstToken.range.start, lastToken.range.end));\n}\nfunction parseJSDocInline(context) {\n    const token = context.tokens[context.index];\n    if (token.type === 'inline-tag') {\n        return parseJSDocTag(context, true);\n    }\n    else {\n        return parseJSDocLine(context);\n    }\n}\nfunction parseJSDocTag(context, inline) {\n    const tagToken = context.tokens[context.index++];\n    const name = tagToken.content.substring(1);\n    const nextToken = context.tokens[context.index];\n    if ((nextToken === null || nextToken === void 0 ? void 0 : nextToken.type) === 'text') {\n        if (inline) {\n            const docLine = parseJSDocLine(context);\n            return new JSDocTagImpl(name, new JSDocTextImpl([docLine], docLine.range), inline, Range.create(tagToken.range.start, docLine.range.end));\n        }\n        else {\n            const textDoc = parseJSDocText(context);\n            return new JSDocTagImpl(name, textDoc, inline, Range.create(tagToken.range.start, textDoc.range.end));\n        }\n    }\n    else {\n        const range = tagToken.range;\n        return new JSDocTagImpl(name, new JSDocTextImpl([], range), inline, range);\n    }\n}\nfunction parseJSDocLine(context) {\n    const token = context.tokens[context.index++];\n    return new JSDocLineImpl(token.content, token.range);\n}\nfunction normalizeOptions(options) {\n    if (!options) {\n        return normalizeOptions({\n            start: '/**',\n            end: '*/',\n            line: '*'\n        });\n    }\n    const { start, end, line } = options;\n    return {\n        start: normalizeOption(start, true),\n        end: normalizeOption(end, false),\n        line: normalizeOption(line, true)\n    };\n}\nfunction normalizeOption(option, start) {\n    if (typeof option === 'string' || typeof option === 'object') {\n        const escaped = typeof option === 'string' ? escapeRegExp(option) : option.source;\n        if (start) {\n            return new RegExp(`^\\\\s*${escaped}`);\n        }\n        else {\n            return new RegExp(`\\\\s*${escaped}\\\\s*$`);\n        }\n    }\n    else {\n        return option;\n    }\n}\nclass JSDocCommentImpl {\n    constructor(elements, range) {\n        this.elements = elements;\n        this.range = range;\n    }\n    getTag(name) {\n        return this.getAllTags().find(e => e.name === name);\n    }\n    getTags(name) {\n        return this.getAllTags().filter(e => e.name === name);\n    }\n    getAllTags() {\n        return this.elements.filter((e) => 'name' in e);\n    }\n    toString() {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toString();\n            }\n            else {\n                const text = element.toString();\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n    toMarkdown(options) {\n        let value = '';\n        for (const element of this.elements) {\n            if (value.length === 0) {\n                value = element.toMarkdown(options);\n            }\n            else {\n                const text = element.toMarkdown(options);\n                value += fillNewlines(value) + text;\n            }\n        }\n        return value.trim();\n    }\n}\nclass JSDocTagImpl {\n    constructor(name, content, inline, range) {\n        this.name = name;\n        this.content = content;\n        this.inline = inline;\n        this.range = range;\n    }\n    toString() {\n        let text = `@${this.name}`;\n        const content = this.content.toString();\n        if (this.content.inlines.length === 1) {\n            text = `${text} ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n    toMarkdown(options) {\n        var _a, _b;\n        return (_b = (_a = options === null || options === void 0 ? void 0 : options.renderTag) === null || _a === void 0 ? void 0 : _a.call(options, this)) !== null && _b !== void 0 ? _b : this.toMarkdownDefault(options);\n    }\n    toMarkdownDefault(options) {\n        const content = this.content.toMarkdown(options);\n        if (this.inline) {\n            const rendered = renderInlineTag(this.name, content, options !== null && options !== void 0 ? options : {});\n            if (typeof rendered === 'string') {\n                return rendered;\n            }\n        }\n        let marker = '';\n        if ((options === null || options === void 0 ? void 0 : options.tag) === 'italic' || (options === null || options === void 0 ? void 0 : options.tag) === undefined) {\n            marker = '*';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold') {\n            marker = '**';\n        }\n        else if ((options === null || options === void 0 ? void 0 : options.tag) === 'bold-italic') {\n            marker = '***';\n        }\n        let text = `${marker}@${this.name}${marker}`;\n        if (this.content.inlines.length === 1) {\n            text = `${text} — ${content}`;\n        }\n        else if (this.content.inlines.length > 1) {\n            text = `${text}\\n${content}`;\n        }\n        if (this.inline) {\n            // Inline tags are surrounded by curly braces\n            return `{${text}}`;\n        }\n        else {\n            return text;\n        }\n    }\n}\nfunction renderInlineTag(tag, content, options) {\n    var _a, _b;\n    if (tag === 'linkplain' || tag === 'linkcode' || tag === 'link') {\n        const index = content.indexOf(' ');\n        let display = content;\n        if (index > 0) {\n            const displayStart = skipWhitespace(content, index);\n            display = content.substring(displayStart);\n            content = content.substring(0, index);\n        }\n        if (tag === 'linkcode' || (tag === 'link' && options.link === 'code')) {\n            // Surround the display value in a markdown inline code block\n            display = `\\`${display}\\``;\n        }\n        const renderedLink = (_b = (_a = options.renderLink) === null || _a === void 0 ? void 0 : _a.call(options, content, display)) !== null && _b !== void 0 ? _b : renderLinkDefault(content, display);\n        return renderedLink;\n    }\n    return undefined;\n}\nfunction renderLinkDefault(content, display) {\n    try {\n        URI.parse(content, true);\n        return `[${display}](${content})`;\n    }\n    catch (_a) {\n        return content;\n    }\n}\nclass JSDocTextImpl {\n    constructor(lines, range) {\n        this.inlines = lines;\n        this.range = range;\n    }\n    toString() {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toString();\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n    toMarkdown(options) {\n        let text = '';\n        for (let i = 0; i < this.inlines.length; i++) {\n            const inline = this.inlines[i];\n            const next = this.inlines[i + 1];\n            text += inline.toMarkdown(options);\n            if (next && next.range.start.line > inline.range.start.line) {\n                text += '\\n';\n            }\n        }\n        return text;\n    }\n}\nclass JSDocLineImpl {\n    constructor(text, range) {\n        this.text = text;\n        this.range = range;\n    }\n    toString() {\n        return this.text;\n    }\n    toMarkdown() {\n        return this.text;\n    }\n}\nfunction fillNewlines(text) {\n    if (text.endsWith('\\n')) {\n        return '\\n';\n    }\n    else {\n        return '\\n\\n';\n    }\n}\n//# sourceMappingURL=jsdoc.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { getDocument } from '../utils/ast-utils.js';\nimport { isJSDoc, parseJSDoc } from './jsdoc.js';\nexport class JSDocDocumentationProvider {\n    constructor(services) {\n        this.indexManager = services.shared.workspace.IndexManager;\n        this.commentProvider = services.documentation.CommentProvider;\n    }\n    getDocumentation(node) {\n        const comment = this.commentProvider.getComment(node);\n        if (comment && isJSDoc(comment)) {\n            const parsedJSDoc = parseJSDoc(comment);\n            return parsedJSDoc.toMarkdown({\n                renderLink: (link, display) => {\n                    return this.documentationLinkRenderer(node, link, display);\n                },\n                renderTag: (tag) => {\n                    return this.documentationTagRenderer(node, tag);\n                }\n            });\n        }\n        return undefined;\n    }\n    documentationLinkRenderer(node, name, display) {\n        var _a;\n        const description = (_a = this.findNameInPrecomputedScopes(node, name)) !== null && _a !== void 0 ? _a : this.findNameInGlobalScope(node, name);\n        if (description && description.nameSegment) {\n            const line = description.nameSegment.range.start.line + 1;\n            const character = description.nameSegment.range.start.character + 1;\n            const uri = description.documentUri.with({ fragment: `L${line},${character}` });\n            return `[${display}](${uri.toString()})`;\n        }\n        else {\n            return undefined;\n        }\n    }\n    documentationTagRenderer(_node, _tag) {\n        // Fall back to the default tag rendering\n        return undefined;\n    }\n    findNameInPrecomputedScopes(node, name) {\n        const document = getDocument(node);\n        const precomputed = document.precomputedScopes;\n        if (!precomputed) {\n            return undefined;\n        }\n        let currentNode = node;\n        do {\n            const allDescriptions = precomputed.get(currentNode);\n            const description = allDescriptions.find(e => e.name === name);\n            if (description) {\n                return description;\n            }\n            currentNode = currentNode.$container;\n        } while (currentNode);\n        return undefined;\n    }\n    findNameInGlobalScope(node, name) {\n        const description = this.indexManager.allElements().find(e => e.name === name);\n        return description;\n    }\n}\n//# sourceMappingURL=documentation-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { isAstNodeWithComment } from '../serializer/json-serializer.js';\nimport { findCommentNode } from '../utils/cst-utils.js';\nexport class DefaultCommentProvider {\n    constructor(services) {\n        this.grammarConfig = () => services.parser.GrammarConfig;\n    }\n    getComment(node) {\n        var _a;\n        if (isAstNodeWithComment(node)) {\n            return node.$comment;\n        }\n        return (_a = findCommentNode(node.$cstNode, this.grammarConfig().multilineCommentRules)) === null || _a === void 0 ? void 0 : _a.text;\n    }\n}\n//# sourceMappingURL=comment-provider.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport var Module;\n(function (Module) {\n    Module.merge = (m1, m2) => _merge(_merge({}, m1), m2);\n})(Module || (Module = {}));\n/**\n * Given a set of modules, the inject function returns a lazily evaluated injector\n * that injects dependencies into the requested service when it is requested the\n * first time. Subsequent requests will return the same service.\n *\n * In the case of cyclic dependencies, an Error will be thrown. This can be fixed\n * by injecting a provider `() => T` instead of a `T`.\n *\n * Please note that the arguments may be objects or arrays. However, the result will\n * be an object. Using it with for..of will have no effect.\n *\n * @param module1 first Module\n * @param module2 (optional) second Module\n * @param module3 (optional) third Module\n * @param module4 (optional) fourth Module\n * @param module5 (optional) fifth Module\n * @param module6 (optional) sixth Module\n * @param module7 (optional) seventh Module\n * @param module8 (optional) eighth Module\n * @param module9 (optional) ninth Module\n * @returns a new object of type I\n */\nexport function inject(module1, module2, module3, module4, module5, module6, module7, module8, module9) {\n    const module = [module1, module2, module3, module4, module5, module6, module7, module8, module9].reduce(_merge, {});\n    return _inject(module);\n}\nconst isProxy = Symbol('isProxy');\n/**\n * Eagerly load all services in the given dependency injection container. This is sometimes\n * necessary because services can register event listeners in their constructors.\n */\nexport function eagerLoad(item) {\n    if (item && item[isProxy]) {\n        for (const value of Object.values(item)) {\n            eagerLoad(value);\n        }\n    }\n    return item;\n}\n/**\n * Helper function that returns an injector by creating a proxy.\n * Invariant: injector is of type I. If injector is undefined, then T = I.\n */\nfunction _inject(module, injector) {\n    const proxy = new Proxy({}, {\n        deleteProperty: () => false,\n        get: (obj, prop) => _resolve(obj, prop, module, injector || proxy),\n        getOwnPropertyDescriptor: (obj, prop) => (_resolve(obj, prop, module, injector || proxy), Object.getOwnPropertyDescriptor(obj, prop)),\n        has: (_, prop) => prop in module,\n        ownKeys: () => [...Reflect.ownKeys(module), isProxy] // used by for..in\n    });\n    proxy[isProxy] = true;\n    return proxy;\n}\n/**\n * Internally used to tag a requested dependency, directly before calling the factory.\n * This allows us to find cycles during instance creation.\n */\nconst __requested__ = Symbol();\n/**\n * Returns the value `obj[prop]`. If the value does not exist, yet, it is resolved from\n * the module description. The result of service factories is cached. Groups are\n * recursively proxied.\n *\n * @param obj an object holding all group proxies and services\n * @param prop the key of a value within obj\n * @param module an object containing groups and service factories\n * @param injector the first level proxy that provides access to all values\n * @returns the requested value `obj[prop]`\n * @throws Error if a dependency cycle is detected\n */\nfunction _resolve(obj, prop, module, injector) {\n    if (prop in obj) {\n        if (obj[prop] instanceof Error) {\n            throw new Error('Construction failure. Please make sure that your dependencies are constructable.', { cause: obj[prop] });\n        }\n        if (obj[prop] === __requested__) {\n            throw new Error('Cycle detected. Please make \"' + String(prop) + '\" lazy. See https://langium.org/docs/configuration-services/#resolving-cyclic-dependencies');\n        }\n        return obj[prop];\n    }\n    else if (prop in module) {\n        const value = module[prop];\n        obj[prop] = __requested__;\n        try {\n            obj[prop] = (typeof value === 'function') ? value(injector) : _inject(value, injector);\n        }\n        catch (error) {\n            obj[prop] = error instanceof Error ? error : undefined;\n            throw error;\n        }\n        return obj[prop];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * Performs a deep-merge of two modules by writing source entries into the target module.\n *\n * @param target the module which is written\n * @param source the module which is read\n * @returns the target module\n */\nfunction _merge(target, source) {\n    if (source) {\n        for (const [key, value2] of Object.entries(source)) {\n            if (value2 !== undefined) {\n                const value1 = target[key];\n                if (value1 !== null && value2 !== null && typeof value1 === 'object' && typeof value2 === 'object') {\n                    target[key] = _merge(value1, value2);\n                }\n                else {\n                    target[key] = value2;\n                }\n            }\n        }\n    }\n    return target;\n}\n//# sourceMappingURL=dependency-injection.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { Deferred, OperationCancelled } from '../utils/promise-utils.js';\nimport { Emitter } from '../utils/event.js';\n/**\n * Default implementation of the async parser. This implementation only wraps the sync parser in a promise.\n *\n * A real implementation would create worker threads or web workers to offload the parsing work.\n */\nexport class DefaultAsyncParser {\n    constructor(services) {\n        this.syncParser = services.parser.LangiumParser;\n    }\n    parse(text) {\n        return Promise.resolve(this.syncParser.parse(text));\n    }\n}\nexport class AbstractThreadedAsyncParser {\n    constructor(services) {\n        /**\n         * The thread count determines how many threads are used to parse files in parallel.\n         * The default value is 8. Decreasing this value increases startup performance, but decreases parallel parsing performance.\n         */\n        this.threadCount = 8;\n        /**\n         * The termination delay determines how long the parser waits for a thread to finish after a cancellation request.\n         * The default value is 200(ms).\n         */\n        this.terminationDelay = 200;\n        this.workerPool = [];\n        this.queue = [];\n        this.hydrator = services.serializer.Hydrator;\n    }\n    initializeWorkers() {\n        while (this.workerPool.length < this.threadCount) {\n            const worker = this.createWorker();\n            worker.onReady(() => {\n                if (this.queue.length > 0) {\n                    const deferred = this.queue.shift();\n                    if (deferred) {\n                        worker.lock();\n                        deferred.resolve(worker);\n                    }\n                }\n            });\n            this.workerPool.push(worker);\n        }\n    }\n    async parse(text, cancelToken) {\n        const worker = await this.acquireParserWorker(cancelToken);\n        const deferred = new Deferred();\n        let timeout;\n        // If the cancellation token is requested, we wait for a certain time before terminating the worker.\n        // Since the cancellation token lives longer than the parsing process, we need to dispose the event listener.\n        // Otherwise, we might accidentally terminate the worker after the parsing process has finished.\n        const cancellation = cancelToken.onCancellationRequested(() => {\n            timeout = setTimeout(() => {\n                this.terminateWorker(worker);\n            }, this.terminationDelay);\n        });\n        worker.parse(text).then(result => {\n            const hydrated = this.hydrator.hydrate(result);\n            deferred.resolve(hydrated);\n        }).catch(err => {\n            deferred.reject(err);\n        }).finally(() => {\n            cancellation.dispose();\n            clearTimeout(timeout);\n        });\n        return deferred.promise;\n    }\n    terminateWorker(worker) {\n        worker.terminate();\n        const index = this.workerPool.indexOf(worker);\n        if (index >= 0) {\n            this.workerPool.splice(index, 1);\n        }\n    }\n    async acquireParserWorker(cancelToken) {\n        this.initializeWorkers();\n        for (const worker of this.workerPool) {\n            if (worker.ready) {\n                worker.lock();\n                return worker;\n            }\n        }\n        const deferred = new Deferred();\n        cancelToken.onCancellationRequested(() => {\n            const index = this.queue.indexOf(deferred);\n            if (index >= 0) {\n                this.queue.splice(index, 1);\n            }\n            deferred.reject(OperationCancelled);\n        });\n        this.queue.push(deferred);\n        return deferred.promise;\n    }\n}\nexport class ParserWorker {\n    get ready() {\n        return this._ready;\n    }\n    get onReady() {\n        return this.onReadyEmitter.event;\n    }\n    constructor(sendMessage, onMessage, onError, terminate) {\n        this.onReadyEmitter = new Emitter();\n        this.deferred = new Deferred();\n        this._ready = true;\n        this._parsing = false;\n        this.sendMessage = sendMessage;\n        this._terminate = terminate;\n        onMessage(result => {\n            const parseResult = result;\n            this.deferred.resolve(parseResult);\n            this.unlock();\n        });\n        onError(error => {\n            this.deferred.reject(error);\n            this.unlock();\n        });\n    }\n    terminate() {\n        this.deferred.reject(OperationCancelled);\n        this._terminate();\n    }\n    lock() {\n        this._ready = false;\n    }\n    unlock() {\n        this._parsing = false;\n        this._ready = true;\n        this.onReadyEmitter.fire();\n    }\n    parse(text) {\n        if (this._parsing) {\n            throw new Error('Parser worker is busy');\n        }\n        this._parsing = true;\n        this.deferred = new Deferred();\n        this.sendMessage(text);\n        return this.deferred.promise;\n    }\n}\n//# sourceMappingURL=async-parser.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CancellationToken, CancellationTokenSource } from '../utils/cancellation.js';\nimport { Deferred, isOperationCancelled } from '../utils/promise-utils.js';\nexport class DefaultWorkspaceLock {\n    constructor() {\n        this.previousTokenSource = new CancellationTokenSource();\n        this.writeQueue = [];\n        this.readQueue = [];\n        this.done = true;\n    }\n    write(action) {\n        this.cancelWrite();\n        const tokenSource = new CancellationTokenSource();\n        this.previousTokenSource = tokenSource;\n        return this.enqueue(this.writeQueue, action, tokenSource.token);\n    }\n    read(action) {\n        return this.enqueue(this.readQueue, action);\n    }\n    enqueue(queue, action, cancellationToken) {\n        const deferred = new Deferred();\n        const entry = {\n            action,\n            deferred,\n            cancellationToken: cancellationToken !== null && cancellationToken !== void 0 ? cancellationToken : CancellationToken.None\n        };\n        queue.push(entry);\n        this.performNextOperation();\n        return deferred.promise;\n    }\n    async performNextOperation() {\n        if (!this.done) {\n            return;\n        }\n        const entries = [];\n        if (this.writeQueue.length > 0) {\n            // Just perform the next write action\n            entries.push(this.writeQueue.shift());\n        }\n        else if (this.readQueue.length > 0) {\n            // Empty the read queue and perform all actions in parallel\n            entries.push(...this.readQueue.splice(0, this.readQueue.length));\n        }\n        else {\n            return;\n        }\n        this.done = false;\n        await Promise.all(entries.map(async ({ action, deferred, cancellationToken }) => {\n            try {\n                // Move the execution of the action to the next event loop tick via `Promise.resolve()`\n                const result = await Promise.resolve().then(() => action(cancellationToken));\n                deferred.resolve(result);\n            }\n            catch (err) {\n                if (isOperationCancelled(err)) {\n                    // If the operation was cancelled, we don't want to reject the promise\n                    deferred.resolve(undefined);\n                }\n                else {\n                    deferred.reject(err);\n                }\n            }\n        }));\n        this.done = true;\n        this.performNextOperation();\n    }\n    cancelWrite() {\n        this.previousTokenSource.cancel();\n    }\n}\n//# sourceMappingURL=workspace-lock.js.map","/******************************************************************************\n * Copyright 2024 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { CompositeCstNodeImpl, LeafCstNodeImpl, RootCstNodeImpl } from '../parser/cst-node-builder.js';\nimport { isAbstractElement } from '../languages/generated/ast.js';\nimport { isRootCstNode, isCompositeCstNode, isLeafCstNode, isAstNode, isReference } from '../syntax-tree.js';\nimport { streamAst } from '../utils/ast-utils.js';\nimport { BiMap } from '../utils/collections.js';\nimport { streamCst } from '../utils/cst-utils.js';\nexport class DefaultHydrator {\n    constructor(services) {\n        this.grammarElementIdMap = new BiMap();\n        this.tokenTypeIdMap = new BiMap();\n        this.grammar = services.Grammar;\n        this.lexer = services.parser.Lexer;\n        this.linker = services.references.Linker;\n    }\n    dehydrate(result) {\n        return {\n            // We need to create shallow copies of the errors\n            // The original errors inherit from the `Error` class, which is not transferable across worker threads\n            lexerErrors: result.lexerErrors.map(e => (Object.assign({}, e))),\n            parserErrors: result.parserErrors.map(e => (Object.assign({}, e))),\n            value: this.dehydrateAstNode(result.value, this.createDehyrationContext(result.value))\n        };\n    }\n    createDehyrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                cstNodes.set(cstNode, {});\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    dehydrateAstNode(node, context) {\n        const obj = context.astNodes.get(node);\n        obj.$type = node.$type;\n        obj.$containerIndex = node.$containerIndex;\n        obj.$containerProperty = node.$containerProperty;\n        if (node.$cstNode !== undefined) {\n            obj.$cstNode = this.dehydrateCstNode(node.$cstNode, context);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                obj[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.dehydrateAstNode(item, context));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.dehydrateReference(item, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                obj[name] = this.dehydrateAstNode(value, context);\n            }\n            else if (isReference(value)) {\n                obj[name] = this.dehydrateReference(value, context);\n            }\n            else if (value !== undefined) {\n                obj[name] = value;\n            }\n        }\n        return obj;\n    }\n    dehydrateReference(reference, context) {\n        const obj = {};\n        obj.$refText = reference.$refText;\n        if (reference.$refNode) {\n            obj.$refNode = context.cstNodes.get(reference.$refNode);\n        }\n        return obj;\n    }\n    dehydrateCstNode(node, context) {\n        const cstNode = context.cstNodes.get(node);\n        if (isRootCstNode(node)) {\n            cstNode.fullText = node.fullText;\n        }\n        else {\n            // Note: This returns undefined for hidden nodes (i.e. comments)\n            cstNode.grammarSource = this.getGrammarElementId(node.grammarSource);\n        }\n        cstNode.hidden = node.hidden;\n        cstNode.astNode = context.astNodes.get(node.astNode);\n        if (isCompositeCstNode(node)) {\n            cstNode.content = node.content.map(child => this.dehydrateCstNode(child, context));\n        }\n        else if (isLeafCstNode(node)) {\n            cstNode.tokenType = node.tokenType.name;\n            cstNode.offset = node.offset;\n            cstNode.length = node.length;\n            cstNode.startLine = node.range.start.line;\n            cstNode.startColumn = node.range.start.character;\n            cstNode.endLine = node.range.end.line;\n            cstNode.endColumn = node.range.end.character;\n        }\n        return cstNode;\n    }\n    hydrate(result) {\n        const node = result.value;\n        const context = this.createHydrationContext(node);\n        if ('$cstNode' in node) {\n            this.hydrateCstNode(node.$cstNode, context);\n        }\n        return {\n            lexerErrors: result.lexerErrors,\n            parserErrors: result.parserErrors,\n            value: this.hydrateAstNode(node, context)\n        };\n    }\n    createHydrationContext(node) {\n        const astNodes = new Map();\n        const cstNodes = new Map();\n        for (const astNode of streamAst(node)) {\n            astNodes.set(astNode, {});\n        }\n        let root;\n        if (node.$cstNode) {\n            for (const cstNode of streamCst(node.$cstNode)) {\n                let cst;\n                if ('fullText' in cstNode) {\n                    cst = new RootCstNodeImpl(cstNode.fullText);\n                    root = cst;\n                }\n                else if ('content' in cstNode) {\n                    cst = new CompositeCstNodeImpl();\n                }\n                else if ('tokenType' in cstNode) {\n                    cst = this.hydrateCstLeafNode(cstNode);\n                }\n                if (cst) {\n                    cstNodes.set(cstNode, cst);\n                    cst.root = root;\n                }\n            }\n        }\n        return {\n            astNodes,\n            cstNodes\n        };\n    }\n    hydrateAstNode(node, context) {\n        const astNode = context.astNodes.get(node);\n        astNode.$type = node.$type;\n        astNode.$containerIndex = node.$containerIndex;\n        astNode.$containerProperty = node.$containerProperty;\n        if (node.$cstNode) {\n            astNode.$cstNode = context.cstNodes.get(node.$cstNode);\n        }\n        for (const [name, value] of Object.entries(node)) {\n            if (name.startsWith('$')) {\n                continue;\n            }\n            if (Array.isArray(value)) {\n                const arr = [];\n                astNode[name] = arr;\n                for (const item of value) {\n                    if (isAstNode(item)) {\n                        arr.push(this.setParent(this.hydrateAstNode(item, context), astNode));\n                    }\n                    else if (isReference(item)) {\n                        arr.push(this.hydrateReference(item, astNode, name, context));\n                    }\n                    else {\n                        arr.push(item);\n                    }\n                }\n            }\n            else if (isAstNode(value)) {\n                astNode[name] = this.setParent(this.hydrateAstNode(value, context), astNode);\n            }\n            else if (isReference(value)) {\n                astNode[name] = this.hydrateReference(value, astNode, name, context);\n            }\n            else if (value !== undefined) {\n                astNode[name] = value;\n            }\n        }\n        return astNode;\n    }\n    setParent(node, parent) {\n        node.$container = parent;\n        return node;\n    }\n    hydrateReference(reference, node, name, context) {\n        return this.linker.buildReference(node, name, context.cstNodes.get(reference.$refNode), reference.$refText);\n    }\n    hydrateCstNode(cstNode, context, num = 0) {\n        const cstNodeObj = context.cstNodes.get(cstNode);\n        if (typeof cstNode.grammarSource === 'number') {\n            cstNodeObj.grammarSource = this.getGrammarElement(cstNode.grammarSource);\n        }\n        cstNodeObj.astNode = context.astNodes.get(cstNode.astNode);\n        if (isCompositeCstNode(cstNodeObj)) {\n            for (const child of cstNode.content) {\n                const hydrated = this.hydrateCstNode(child, context, num++);\n                cstNodeObj.content.push(hydrated);\n            }\n        }\n        return cstNodeObj;\n    }\n    hydrateCstLeafNode(cstNode) {\n        const tokenType = this.getTokenType(cstNode.tokenType);\n        const offset = cstNode.offset;\n        const length = cstNode.length;\n        const startLine = cstNode.startLine;\n        const startColumn = cstNode.startColumn;\n        const endLine = cstNode.endLine;\n        const endColumn = cstNode.endColumn;\n        const hidden = cstNode.hidden;\n        const node = new LeafCstNodeImpl(offset, length, {\n            start: {\n                line: startLine,\n                character: startColumn\n            },\n            end: {\n                line: endLine,\n                character: endColumn\n            }\n        }, tokenType, hidden);\n        return node;\n    }\n    getTokenType(name) {\n        return this.lexer.definition[name];\n    }\n    getGrammarElementId(node) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        return this.grammarElementIdMap.get(node);\n    }\n    getGrammarElement(id) {\n        if (this.grammarElementIdMap.size === 0) {\n            this.createGrammarElementIdMap();\n        }\n        const element = this.grammarElementIdMap.getKey(id);\n        if (element) {\n            return element;\n        }\n        else {\n            throw new Error('Invalid grammar element id: ' + id);\n        }\n    }\n    createGrammarElementIdMap() {\n        let id = 0;\n        for (const element of streamAst(this.grammar)) {\n            if (isAbstractElement(element)) {\n                this.grammarElementIdMap.set(element, id++);\n            }\n        }\n    }\n}\n//# sourceMappingURL=hydrator.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n******************************************************************************/\nimport { createGrammarConfig } from './languages/grammar-config.js';\nimport { createCompletionParser } from './parser/completion-parser-builder.js';\nimport { createLangiumParser } from './parser/langium-parser-builder.js';\nimport { DefaultTokenBuilder } from './parser/token-builder.js';\nimport { DefaultValueConverter } from './parser/value-converter.js';\nimport { DefaultLinker } from './references/linker.js';\nimport { DefaultNameProvider } from './references/name-provider.js';\nimport { DefaultReferences } from './references/references.js';\nimport { DefaultScopeComputation } from './references/scope-computation.js';\nimport { DefaultScopeProvider } from './references/scope-provider.js';\nimport { DefaultJsonSerializer } from './serializer/json-serializer.js';\nimport { DefaultServiceRegistry } from './service-registry.js';\nimport { DefaultDocumentValidator } from './validation/document-validator.js';\nimport { ValidationRegistry } from './validation/validation-registry.js';\nimport { DefaultAstNodeDescriptionProvider, DefaultReferenceDescriptionProvider } from './workspace/ast-descriptions.js';\nimport { DefaultAstNodeLocator } from './workspace/ast-node-locator.js';\nimport { DefaultConfigurationProvider } from './workspace/configuration.js';\nimport { DefaultDocumentBuilder } from './workspace/document-builder.js';\nimport { DefaultLangiumDocumentFactory, DefaultLangiumDocuments } from './workspace/documents.js';\nimport { DefaultIndexManager } from './workspace/index-manager.js';\nimport { DefaultWorkspaceManager } from './workspace/workspace-manager.js';\nimport { DefaultLexer } from './parser/lexer.js';\nimport { JSDocDocumentationProvider } from './documentation/documentation-provider.js';\nimport { DefaultCommentProvider } from './documentation/comment-provider.js';\nimport { LangiumParserErrorMessageProvider } from './parser/langium-parser.js';\nimport { DefaultAsyncParser } from './parser/async-parser.js';\nimport { DefaultWorkspaceLock } from './workspace/workspace-lock.js';\nimport { DefaultHydrator } from './serializer/hydrator.js';\n/**\n * Creates a dependency injection module configuring the default core services.\n * This is a set of services that are dedicated to a specific language.\n */\nexport function createDefaultCoreModule(context) {\n    return {\n        documentation: {\n            CommentProvider: (services) => new DefaultCommentProvider(services),\n            DocumentationProvider: (services) => new JSDocDocumentationProvider(services)\n        },\n        parser: {\n            AsyncParser: (services) => new DefaultAsyncParser(services),\n            GrammarConfig: (services) => createGrammarConfig(services),\n            LangiumParser: (services) => createLangiumParser(services),\n            CompletionParser: (services) => createCompletionParser(services),\n            ValueConverter: () => new DefaultValueConverter(),\n            TokenBuilder: () => new DefaultTokenBuilder(),\n            Lexer: (services) => new DefaultLexer(services),\n            ParserErrorMessageProvider: () => new LangiumParserErrorMessageProvider()\n        },\n        workspace: {\n            AstNodeLocator: () => new DefaultAstNodeLocator(),\n            AstNodeDescriptionProvider: (services) => new DefaultAstNodeDescriptionProvider(services),\n            ReferenceDescriptionProvider: (services) => new DefaultReferenceDescriptionProvider(services)\n        },\n        references: {\n            Linker: (services) => new DefaultLinker(services),\n            NameProvider: () => new DefaultNameProvider(),\n            ScopeProvider: (services) => new DefaultScopeProvider(services),\n            ScopeComputation: (services) => new DefaultScopeComputation(services),\n            References: (services) => new DefaultReferences(services)\n        },\n        serializer: {\n            Hydrator: (services) => new DefaultHydrator(services),\n            JsonSerializer: (services) => new DefaultJsonSerializer(services)\n        },\n        validation: {\n            DocumentValidator: (services) => new DefaultDocumentValidator(services),\n            ValidationRegistry: (services) => new ValidationRegistry(services)\n        },\n        shared: () => context.shared\n    };\n}\n/**\n * Creates a dependency injection module configuring the default shared core services.\n * This is the set of services that are shared between multiple languages.\n */\nexport function createDefaultSharedCoreModule(context) {\n    return {\n        ServiceRegistry: () => new DefaultServiceRegistry(),\n        workspace: {\n            LangiumDocuments: (services) => new DefaultLangiumDocuments(services),\n            LangiumDocumentFactory: (services) => new DefaultLangiumDocumentFactory(services),\n            DocumentBuilder: (services) => new DefaultDocumentBuilder(services),\n            IndexManager: (services) => new DefaultIndexManager(services),\n            WorkspaceManager: (services) => new DefaultWorkspaceManager(services),\n            FileSystemProvider: (services) => context.fileSystemProvider(services),\n            WorkspaceLock: () => new DefaultWorkspaceLock(),\n            ConfigurationProvider: (services) => new DefaultConfigurationProvider(services)\n        }\n    };\n}\n//# sourceMappingURL=default-module.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { DefaultNameRegexp } from '../utils/cst-utils.js';\nimport { isCommentTerminal, terminalRegex } from '../utils/grammar-utils.js';\nimport { isMultilineComment } from '../utils/regexp-utils.js';\nimport { isTerminalRule } from './generated/ast.js';\n/**\n * Create the default grammar configuration (used by `createDefaultModule`). This can be overridden in a\n * language-specific module.\n */\nexport function createGrammarConfig(services) {\n    const rules = [];\n    const grammar = services.Grammar;\n    for (const rule of grammar.rules) {\n        if (isTerminalRule(rule) && isCommentTerminal(rule) && isMultilineComment(terminalRegex(rule))) {\n            rules.push(rule.name);\n        }\n    }\n    return {\n        multilineCommentRules: rules,\n        nameRegexp: DefaultNameRegexp\n    };\n}\n//# sourceMappingURL=grammar-config.js.map","/******************************************************************************\n * Copyright 2021 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\n/**\n * Create and finalize a Langium parser. The parser rules are derived from the grammar, which is\n * available at `services.Grammar`.\n */\nexport function createLangiumParser(services) {\n    const parser = prepareLangiumParser(services);\n    parser.finalize();\n    return parser;\n}\n/**\n * Create a Langium parser without finalizing it. This is used to extract more detailed error\n * information when the parser is initially validated.\n */\nexport function prepareLangiumParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumParser(services);\n    return createParser(grammar, parser, lexer.definition);\n}\n//# sourceMappingURL=langium-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { LangiumCompletionParser } from './langium-parser.js';\nimport { createParser } from './parser-builder-base.js';\nexport function createCompletionParser(services) {\n    const grammar = services.Grammar;\n    const lexer = services.parser.Lexer;\n    const parser = new LangiumCompletionParser(services);\n    createParser(grammar, parser, lexer.definition);\n    parser.finalize();\n    return parser;\n}\n//# sourceMappingURL=completion-parser-builder.js.map","/******************************************************************************\n * Copyright 2022 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nexport class EmptyFileSystemProvider {\n    readFile() {\n        throw new Error('No file system is available.');\n    }\n    async readDirectory() {\n        return [];\n    }\n}\nexport const EmptyFileSystem = {\n    fileSystemProvider: () => new EmptyFileSystemProvider()\n};\n//# sourceMappingURL=file-system-provider.js.map","/******************************************************************************\n * Copyright 2023 TypeFox GmbH\n * This program and the accompanying materials are made available under the\n * terms of the MIT License, which is available in the project root.\n ******************************************************************************/\nimport { createDefaultCoreModule, createDefaultSharedCoreModule } from '../default-module.js';\nimport { inject } from '../dependency-injection.js';\nimport * as ast from '../languages/generated/ast.js';\nimport { EmptyFileSystem } from '../workspace/file-system-provider.js';\nimport { URI } from './uri-utils.js';\nconst minimalGrammarModule = {\n    Grammar: () => undefined,\n    LanguageMetaData: () => ({\n        caseInsensitive: false,\n        fileExtensions: ['.langium'],\n        languageId: 'langium'\n    })\n};\nconst minimalSharedGrammarModule = {\n    AstReflection: () => new ast.LangiumGrammarAstReflection()\n};\nfunction createMinimalGrammarServices() {\n    const shared = inject(createDefaultSharedCoreModule(EmptyFileSystem), minimalSharedGrammarModule);\n    const grammar = inject(createDefaultCoreModule({ shared }), minimalGrammarModule);\n    shared.ServiceRegistry.register(grammar);\n    return grammar;\n}\n/**\n * Load a Langium grammar for your language from a JSON string. This is used by several services,\n * most notably the parser builder which interprets the grammar to create a parser.\n */\nexport function loadGrammarFromJson(json) {\n    var _a;\n    const services = createMinimalGrammarServices();\n    const astNode = services.serializer.JsonSerializer.deserialize(json);\n    services.shared.workspace.LangiumDocumentFactory.fromModel(astNode, URI.parse(`memory://${(_a = astNode.name) !== null && _a !== void 0 ? _a : 'grammar'}.langium`));\n    return astNode;\n}\n//# sourceMappingURL=grammar-loader.js.map","import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n","import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n","import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n","import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n","import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import {\n  AbstractMermaidTokenBuilder,\n  CommonValueConverter,\n  InfoGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/info/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/info/tokenBuilder.ts\nvar InfoTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"InfoTokenBuilder\");\n  }\n  constructor() {\n    super([\"info\", \"showInfo\"]);\n  }\n};\n\n// src/language/info/module.ts\nvar InfoModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new InfoTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new CommonValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createInfoServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Info = inject(\n    createDefaultCoreModule({ shared }),\n    InfoGeneratedModule,\n    InfoModule\n  );\n  shared.ServiceRegistry.register(Info);\n  return { shared, Info };\n}\n__name(createInfoServices, \"createInfoServices\");\n\nexport {\n  InfoModule,\n  createInfoServices\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  MermaidGeneratedSharedModule,\n  PieGeneratedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/pie/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/pie/tokenBuilder.ts\nvar PieTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"PieTokenBuilder\");\n  }\n  constructor() {\n    super([\"pie\", \"showData\"]);\n  }\n};\n\n// src/language/pie/valueConverter.ts\nvar PieValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"PieValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name !== \"PIE_SECTION_LABEL\") {\n      return void 0;\n    }\n    return input.replace(/\"/g, \"\").trim();\n  }\n};\n\n// src/language/pie/module.ts\nvar PieModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new PieTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new PieValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createPieServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Pie = inject(\n    createDefaultCoreModule({ shared }),\n    PieGeneratedModule,\n    PieModule\n  );\n  shared.ServiceRegistry.register(Pie);\n  return { shared, Pie };\n}\n__name(createPieServices, \"createPieServices\");\n\nexport {\n  PieModule,\n  createPieServices\n};\n","import {\n  GitGraphModule,\n  createGitGraphServices\n} from \"./chunks/mermaid-parser.core/chunk-NCMFTTUW.mjs\";\nimport {\n  InfoModule,\n  createInfoServices\n} from \"./chunks/mermaid-parser.core/chunk-4YFB5VUC.mjs\";\nimport {\n  PacketModule,\n  createPacketServices\n} from \"./chunks/mermaid-parser.core/chunk-EQFLFMNE.mjs\";\nimport {\n  PieModule,\n  createPieServices\n} from \"./chunks/mermaid-parser.core/chunk-BI6EQKOQ.mjs\";\nimport {\n  ArchitectureModule,\n  createArchitectureServices\n} from \"./chunks/mermaid-parser.core/chunk-FF7BQXOH.mjs\";\nimport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  Info,\n  InfoGeneratedModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  Pie,\n  PieGeneratedModule,\n  PieSection,\n  Statement,\n  __name,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection\n} from \"./chunks/mermaid-parser.core/chunk-Y27MQZ3U.mjs\";\n\n// src/parse.ts\nvar parsers = {};\nvar initializers = {\n  info: /* @__PURE__ */ __name(async () => {\n    const { createInfoServices: createInfoServices2 } = await import(\"./chunks/mermaid-parser.core/info-46DW6VJ7.mjs\");\n    const parser = createInfoServices2().Info.parser.LangiumParser;\n    parsers.info = parser;\n  }, \"info\"),\n  packet: /* @__PURE__ */ __name(async () => {\n    const { createPacketServices: createPacketServices2 } = await import(\"./chunks/mermaid-parser.core/packet-W2GHVCYJ.mjs\");\n    const parser = createPacketServices2().Packet.parser.LangiumParser;\n    parsers.packet = parser;\n  }, \"packet\"),\n  pie: /* @__PURE__ */ __name(async () => {\n    const { createPieServices: createPieServices2 } = await import(\"./chunks/mermaid-parser.core/pie-BEWT4RHE.mjs\");\n    const parser = createPieServices2().Pie.parser.LangiumParser;\n    parsers.pie = parser;\n  }, \"pie\"),\n  architecture: /* @__PURE__ */ __name(async () => {\n    const { createArchitectureServices: createArchitectureServices2 } = await import(\"./chunks/mermaid-parser.core/architecture-I3QFYML2.mjs\");\n    const parser = createArchitectureServices2().Architecture.parser.LangiumParser;\n    parsers.architecture = parser;\n  }, \"architecture\"),\n  gitGraph: /* @__PURE__ */ __name(async () => {\n    const { createGitGraphServices: createGitGraphServices2 } = await import(\"./chunks/mermaid-parser.core/gitGraph-YCYPL57B.mjs\");\n    const parser = createGitGraphServices2().GitGraph.parser.LangiumParser;\n    parsers.gitGraph = parser;\n  }, \"gitGraph\")\n};\nasync function parse(diagramType, text) {\n  const initializer = initializers[diagramType];\n  if (!initializer) {\n    throw new Error(`Unknown diagram type: ${diagramType}`);\n  }\n  if (!parsers[diagramType]) {\n    await initializer();\n  }\n  const parser = parsers[diagramType];\n  const result = parser.parse(text);\n  if (result.lexerErrors.length > 0 || result.parserErrors.length > 0) {\n    throw new MermaidParseError(result);\n  }\n  return result.value;\n}\n__name(parse, \"parse\");\nvar MermaidParseError = class extends Error {\n  constructor(result) {\n    const lexerErrors = result.lexerErrors.map((err) => err.message).join(\"\\n\");\n    const parserErrors = result.parserErrors.map((err) => err.message).join(\"\\n\");\n    super(`Parsing failed: ${lexerErrors} ${parserErrors}`);\n    this.result = result;\n  }\n  static {\n    __name(this, \"MermaidParseError\");\n  }\n};\nexport {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  Architecture,\n  ArchitectureGeneratedModule,\n  ArchitectureModule,\n  Branch,\n  Commit,\n  CommonTokenBuilder,\n  CommonValueConverter,\n  GitGraph,\n  GitGraphGeneratedModule,\n  GitGraphModule,\n  Info,\n  InfoGeneratedModule,\n  InfoModule,\n  Merge,\n  MermaidGeneratedSharedModule,\n  MermaidParseError,\n  Packet,\n  PacketBlock,\n  PacketGeneratedModule,\n  PacketModule,\n  Pie,\n  PieGeneratedModule,\n  PieModule,\n  PieSection,\n  Statement,\n  createArchitectureServices,\n  createGitGraphServices,\n  createInfoServices,\n  createPacketServices,\n  createPieServices,\n  isArchitecture,\n  isBranch,\n  isCommit,\n  isCommon,\n  isGitGraph,\n  isInfo,\n  isMerge,\n  isPacket,\n  isPacketBlock,\n  isPie,\n  isPieSection,\n  parse\n};\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n","import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n","import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken || (exports.CancellationToken = CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","import {\n  AbstractMermaidTokenBuilder,\n  AbstractMermaidValueConverter,\n  ArchitectureGeneratedModule,\n  MermaidGeneratedSharedModule,\n  __name\n} from \"./chunk-Y27MQZ3U.mjs\";\n\n// src/language/architecture/module.ts\nimport {\n  EmptyFileSystem,\n  createDefaultCoreModule,\n  createDefaultSharedCoreModule,\n  inject\n} from \"langium\";\n\n// src/language/architecture/tokenBuilder.ts\nvar ArchitectureTokenBuilder = class extends AbstractMermaidTokenBuilder {\n  static {\n    __name(this, \"ArchitectureTokenBuilder\");\n  }\n  constructor() {\n    super([\"architecture\"]);\n  }\n};\n\n// src/language/architecture/valueConverter.ts\nvar ArchitectureValueConverter = class extends AbstractMermaidValueConverter {\n  static {\n    __name(this, \"ArchitectureValueConverter\");\n  }\n  runCustomConverter(rule, input, _cstNode) {\n    if (rule.name === \"ARCH_ICON\") {\n      return input.replace(/[()]/g, \"\").trim();\n    } else if (rule.name === \"ARCH_TEXT_ICON\") {\n      return input.replace(/[\"()]/g, \"\");\n    } else if (rule.name === \"ARCH_TITLE\") {\n      return input.replace(/[[\\]]/g, \"\").trim();\n    }\n    return void 0;\n  }\n};\n\n// src/language/architecture/module.ts\nvar ArchitectureModule = {\n  parser: {\n    TokenBuilder: /* @__PURE__ */ __name(() => new ArchitectureTokenBuilder(), \"TokenBuilder\"),\n    ValueConverter: /* @__PURE__ */ __name(() => new ArchitectureValueConverter(), \"ValueConverter\")\n  }\n};\nfunction createArchitectureServices(context = EmptyFileSystem) {\n  const shared = inject(\n    createDefaultSharedCoreModule(context),\n    MermaidGeneratedSharedModule\n  );\n  const Architecture = inject(\n    createDefaultCoreModule({ shared }),\n    ArchitectureGeneratedModule,\n    ArchitectureModule\n  );\n  shared.ServiceRegistry.register(Architecture);\n  return { shared, Architecture };\n}\n__name(createArchitectureServices, \"createArchitectureServices\");\n\nexport {\n  ArchitectureModule,\n  createArchitectureServices\n};\n"],"names":["value","nativeMax","Math","max","findIndexFunc","array","predicate","fromIndex","length","index","toInteger","collection","iterable","Object","isArrayLike","iteratee","keys","key","undefined","PacketTokenBuilder","this","constructor","super","PacketModule","parser","TokenBuilder","ValueConverter","createPacketServices","context","shared","Packet","ServiceRegistry","register","__defProp","defineProperty","__name","target","configurable","item","reflection","isInstance","Branch","Commit","GitGraph","Merge","loadedInfoGrammar","loadedPacketGrammar","loadedPieGrammar","loadedArchitectureGrammar","loadedGitGraphGrammar","MermaidAstReflection","getAllTypes","computeIsSubtype","subtype","supertype","isSubtype","getReferenceType","refInfo","referenceId","container","$type","property","Error","getTypeMetaData","type","name","properties","defaultValue","InfoGrammar","PacketGrammar","PieGrammar","ArchitectureGrammar","GitGraphGrammar","InfoLanguageMetaData","languageId","fileExtensions","caseInsensitive","PacketLanguageMetaData","PieLanguageMetaData","ArchitectureLanguageMetaData","GitGraphLanguageMetaData","MermaidGeneratedSharedModule","AstReflection","InfoGeneratedModule","Grammar","LanguageMetaData","PacketGeneratedModule","PieGeneratedModule","ArchitectureGeneratedModule","GitGraphGeneratedModule","rulesRegexes","ACC_DESCR","ACC_TITLE","TITLE","AbstractMermaidValueConverter","runConverter","rule","input","cstNode","runCommonConverter","runCustomConverter","_cstNode","regex","match","exec","trim","replace","CommonValueConverter","_rule","_input","AbstractMermaidTokenBuilder","keywords","Set","buildKeywordTokens","rules","terminalTokens","options","tokenTypes","forEach","tokenType","has","PATTERN","RegExp","toString","comparator","current","computed","result","Array","exports","Emitter","Event","ral_1","_disposable","dispose","None","CallbackList","add","callback","bucket","_callbacks","_contexts","push","isArray","remove","foundCallbackWithDifferentContext","i","len","splice","invoke","args","ret","callbacks","slice","contexts","apply","e","default","console","error","isEmpty","_options","event","_event","listener","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","fire","call","GitGraphTokenBuilder","GitGraphModule","createGitGraphServices","objectProto","prototype","hasOwnProperty","object","sources","guard","source","props","propsIndex","propsLength","reWhitespace","reTrimStart","string","test","charAt","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","INFINITY","isSymbol","isObject","other","valueOf","isBinary","obj","$refText","isLinkingError","reference","message","AbstractAstReflection","subtypes","allSubtypes","node","nested","existing","getAllSubTypes","allTypes","types","possibleSubType","content","isRootCstNode","fullText","StreamImpl","startFn","nextFn","iterator","state","next","Symbol","Boolean","done","count","toArray","toSet","toMap","keyFn","valueFn","entryStream","map","element","Map","join","concat","first","firstDone","DONE_RESULT","separator","addSeparator","indexOf","searchElement","every","some","callbackfn","filter","nonNullable","reduce","initialValue","previousValue","reduceRight","recursiveReduce","find","findIndex","includes","flatMap","mapped","isIterable","flat","depth","stream","head","tail","skipCount","limit","maxSize","size","distinct","by","set","exclude","otherKeySet","ownKey","EMPTY_STREAM","freeze","collections","collIndex","arrIndex","TreeStreamImpl","root","children","iterators","includeRoot","pruned","pop","prune","Reduction","RangeComparison","streamCst","tokenToRange","token","start","character","startColumn","line","startLine","end","endColumn","endLine","toDocumentSegment","offset","range","sum","a","b","product","min","DefaultNameRegexp","isCommentNode","commentNames","ErrorWithLocation","assertUnreachable","_","AbstractRule","AbstractType","Condition","ValueLiteral","AbstractElement","BooleanLiteral","Conjunction","Disjunction","InferredType","isInferredType","Interface","isInterface","Negation","ParameterReference","ParserRule","isParserRule","ReturnType","SimpleType","TerminalRule","isTerminalRule","Type","isType","Action","isAction","Alternatives","isAlternatives","Assignment","isAssignment","CharacterRange","CrossReference","isCrossReference","EndOfFile","Group","isGroup","Keyword","isKeyword","NegatedToken","RegexToken","RuleCall","isRuleCall","TerminalAlternatives","TerminalGroup","TerminalRuleCall","isTerminalRuleCall","UnorderedGroup","isUnorderedGroup","UntilToken","Wildcard","LangiumGrammarAstReflection","getContainerOfType","typePredicate","$container","getDocument","rootNode","findRootNode","$document","streamContents","keyIndex","arrayIndex","startsWith","isAstNodeInRange","streamAst","astNode","_a","nodeRange","$cstNode","to","comparison","Before","After","startInside","endInside","Inside","OverlapBack","OverlapFront","compareRange","inRange","streamReferences","copyDefaultValue","propertyType","cc","char","charCodeAt","insertToSet","subItem","addFlag","flagObj","flagKey","ASSERT_EXISTS","ASSERT_NEVER_REACH_HERE","isCharacter","digitsCharCodes","wordCharCodes","whitespaceCodes","hexDigitPattern","decimalPattern","decimalPatternNoZero","RegExpParser","idx","groupIdx","saveState","restoreState","newState","pattern","consumeChar","disjunction","flags","loc","begin","global","ignoreCase","multiLine","unicode","sticky","isRegExpFlag","popChar","substring","alts","alternative","peekChar","terms","isTerm","term","isAssertion","assertion","atom","quantifier","isBacktracking","atLeast","atMost","Infinity","integerIncludingZero","isDigit","greedy","dotAll","atomEscape","characterClass","group","isPatternCharacter","patternCharacter","isQuantifier","complement","decimalEscapeAtom","characterClassEscape","controlEscapeAtom","controlLetterEscapeAtom","nulCharacterAtom","hexEscapeSequenceAtom","regExpUnicodeEscapeSequenceAtom","identityEscapeAtom","positiveInteger","escapeCode","letter","toUpperCase","parseHexDigits","classPatternCharacterAtom","isClassAtom","from","classAtom","isRangeDash","classEscape","capturing","groupAst","number","nextChar","howMuch","isAtom","prevState","howMany","hexString","hexChar","BaseRegExpVisitor","visitChildren","child","visit","subChild","visitPattern","visitFlags","visitDisjunction","visitAlternative","visitStartAnchor","visitEndAnchor","visitWordBoundary","visitNonWordBoundary","visitLookahead","visitNegativeLookahead","visitCharacter","visitSet","visitGroup","visitGroupBackReference","visitQuantifier","NEWLINE_REGEXP","regexpParser","visitor","arguments","isStarting","endRegexpStack","multiline","endRegex","reset","startRegexp","String","fromCharCode","escapedChar","escapeRegExp","isMultilineComment","regexp","isWhitespace","getAllReachableRules","grammar","allTerminals","ruleNames","entryRule","entry","getEntryRule","topMostRules","hidden","getHiddenRules","ruleDfs","visitedSet","refRule","ref","findNodeForProperty","nodes","findNodesForPropertyInternal","nodeFeature","grammarSource","feature","findNameAssignment","startNode","findNameAssignmentInternal","cache","go","refType","childAssignment","get","toLowerCase","typeRef","isDataTypeRule","isDataTypeRuleInternal","visited","definition","getExplicitRuleType","inferredType","dataType","returnType","getTypeName","actionType","action","getActionType","terminalRegex","terminalRule","s","u","abstractElementToRegex","flagText","entries","WILDCARD","withCardinality","alternatives","elements","cardinality","lookahead","right","keywordToRegex","left","wrap","negate","until","terminal","lastSlash","lastIndexOf","regexFlags","keyword","toFastProperties","toBecomeFast","FakeConstructor","fakeInstance","fakeAccess","bar","n","prop","path","nodeIsRegExp","isRegExp","isObjectLike","AbstractProduction","_definition","accept","prod","v","referencedRule","Rule","orgText","Alternative","ignoreAmbiguities","Option","RepetitionMandatory","RepetitionMandatoryWithSeparator","Repetition","RepetitionWithSeparator","Alternation","hasPredicates","Terminal","serializeProduction","convertDefinition","serializedNonTerminal","nonTerminalName","isString","label","terminalType","serializedTerminal","tokType","LABEL","terminalLabel","nodeAny","visitNonTerminal","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","func","isOptionalProd","alreadyVisited","subProd","getProductionDslName","RestWalker","walk","prevRest","currRest","walkProdRef","walkTerminal","walkFlat","walkOption","walkAtLeastOne","walkAtLeastOneSep","walkManySep","walkMany","walkOr","refProd","flatProd","fullOrRest","optionProd","atLeastOneProd","fullAtLeastOneRest","atLeastOneSepProd","fullAtLeastOneSepRest","restForRepetitionWithSeparator","manyProd","fullManyRest","manySepProd","fullManySepRest","orProd","alt","prodWrapper","repSepProd","isSequenceProd","firstSet","seq","currSubProd","nextSubProdIdx","hasInnerProdsRemaining","isLastInnerProdOptional","firstForSequence","isBranchingProd","allAlternativesFirsts","innerProd","firstForBranching","ResyncFollowsWalker","topProd","follows","startWalking","followName","inner","occurenceInParent","fullRest","t_in_topProd_follows","TypeError","values","isArrayLikeObject","isCommon","valuesLength","outer","valuesIndex","resIndex","PRINT_ERROR","msg","PRINT_WARNING","warn","regExpAstCache","regExpParser","getRegExpAst","regExp","regExpStr","regExpAst","complementErrorMessage","failedOptimizationPrefixMsg","getOptimizedStartCodesIndices","ensureOptimizations","ast","firstCharOptimizedIndices","msgSuffix","addOptimizedIdxToResult","code","rangeCode","minOptimizationVal","minUnOptVal","maxUnOptVal","minOptIdx","charCodeToOptimizedIndex","maxOptIdx","currOptIdx","isOptionalQuantifier","isWholeOptional","optimizedCharIdx","upperChar","lowerChar","handleIgnoreCase","findCode","setNode","targetCharCodes","codeOrRange","targetCode","CharCodeFinder","found","canMatchCharCode","charCodes","charCodeFinder","DEFAULT_MODE","MODES","SUPPORT_STICKY","end_of_input","start_of_input","addStartOfInput","addStickyFlag","isCustomPattern","isFunction","isShortPattern","LineTerminatorOptimizedTester","text","lastIndex","c","checkLineBreaksIssues","lineTerminatorCharCodes","issue","LexerDefinitionErrorType","IDENTIFY_TERMINATOR","errMsg","CUSTOM_LINE_BREAK","getCharCodes","charsOrCodes","numOrString","addToMapOfArrays","charCodeToOptimizedIdxMap","charCode","timer","Date","getTime","val","time","tokenStructuredMatcher","tokInstance","tokConstructor","instanceType","tokenTypeIdx","isParent","categoryMatchesMap","tokenStructuredMatcherNoCategories","tokenShortNameIdx","tokenIdxToClass","augmentTokenTypes","tokenTypesAndParents","clone","categories","searching","currTokType","CATEGORIES","newCategories","expandCategories","hasShortKeyProperty","hasCategoriesProperty","categoryMatches","hasExtendingTokensTypesMapProperty","assignTokenDefaultProps","singleAssignCategoriesToksMap","assignCategoriesMapProp","assignCategoriesTokensProp","nextNode","pathNode","nextCategory","newPath","isTokenType","DEFAULT_LEXER_CONFIG","deferDefinitionErrorsHandling","positionTracking","lineTerminatorsPattern","lineTerminatorCharacters","safeMode","errorMessageProvider","buildUnableToPopLexerModeMessage","image","buildUnexpectedCharactersMessage","startOffset","column","traceInitPerf","skipValidations","recoveryEnabled","Lexer","lexerDefinition","config","lexerDefinitionErrors","lexerDefinitionWarning","patternIdxToConfig","charCodeToPatternIdxToConfig","modes","emptyGroups","trackStartLines","trackEndLines","hasCustom","canModeBeOptimized","TRACE_INIT","phaseDesc","phaseImpl","traceInitIndent","indent","traceInitMaxIdent","log","traceMethod","traceInitVal","actualDefinition","hasOnlySingleMode","defaultMode","errors","MULTI_MODE_LEXER_WITHOUT_DEFAULT_MODE","MULTI_MODE_LEXER_WITHOUT_MODES_PROPERTY","MULTI_MODE_LEXER_DEFAULT_MODE_VALUE_DOES_NOT_EXIST","currModeValue","currModeName","currIdx","isUndefined","LEXER_DEFINITION_CANNOT_CONTAIN_UNDEFINED","longerAlt","LONGER_ALT","currLongerAlt","MULTI_MODE_LEXER_LONGER_ALT_NOT_IN_CURRENT_MODE","performRuntimeChecks","trackLines","warnings","hasAnyLineBreak","allTokenTypes","concreteTokenTypes","currType","NA","terminatorCharCodes","currIssue","details","buildLineBreakIssueMessage","warningDescriptor","LINE_BREAKS","NO_LINE_BREAKS_FLAGS","performWarningRuntimeChecks","allModeNames","currModDef","currModName","validModesNames","missingResult","tokenTypesWithMissingPattern","MISSING_PATTERN","valid","findMissingPatterns","invalidResult","tokenTypesWithInvalidPattern","INVALID_PATTERN","findInvalidPatterns","validTokenTypes","withRegExpPatterns","EndAnchorFinder","invalidRegex","regexpAst","endAnchorVisitor","EOI_ANCHOR_FOUND","findEndOfInputAnchor","StartAnchorFinder","startAnchorVisitor","SOI_ANCHOR_FOUND","findStartOfInputAnchor","invalidFlags","UNSUPPORTED_FLAGS_FOUND","findUnsupportedFlags","identicalPatterns","outerType","innerType","duplicatePatterns","currIdenticalSet","setOfIdentical","tokenTypeNames","DUPLICATE_PATTERNS_FOUND","findDuplicatePatterns","matchesEmptyString","EMPTY_MATCH_PATTERN","findEmptyMatchRegExps","validateRegExpPattern","invalidTypes","clazz","GROUP","SKIPPED","INVALID_GROUP_TYPE_FOUND","findInvalidGroupType","validModes","invalidModes","PUSH_MODE","PUSH_MODE_DOES_NOT_EXIST","findModesThatDoNotExist","canBeTested","str","testIdx","regExpArray","testTokenType","UNREACHABLE_PATTERN","findUnreachablePatterns","validatePatterns","currAnalyzeResult","tracer","defaults","useSticky","debug","onlyRelevantTypes","initCharCodeToOptimizedIndexMap","allTransformedPatterns","patternIdxToType","patternIdxToGroup","patternIdxToLongerAltIdxArr","patternIdxToPushMode","patternIdxToPopMode","patternIdxToCanLineTerminator","patternIdxToIsCustom","patternIdxToShort","currPattern","regExpSource","escapedRegExpString","wrappedRegExp","groupName","longerAltType","acc","x","canLineTerminator","isCustom","short","canBeOptimized","optimizedIdx","START_CHARS_HINT","lastOptimizedIdx","charOrInt","currOptimizedIdx","optimizedCodes","analyzeTokenTypes","allErrMessagesString","chopInput","identity","matchWithTest","updateLastIndex","noop","matchWithExec","handleModes","computeNewColumn","updateTokenEndLineColumnLocation","createTokenInstance","createFullToken","createStartOnlyToken","createOffsetOnlyToken","addToken","addTokenUsingPush","handlePayload","handlePayloadWithCustom","addTokenUsingMemberAccess","handlePayloadNoCustom","unOptimizedModes","cannotBeOptimized","modeName","tokenize","initialMode","tokenizeInternal","j","k","matchAltImage","matchedImage","payload","altPayload","imageLength","newToken","errLength","orgLength","matchedTokensIndex","guessedNumberOfTokens","floor","matchedTokens","groups","clonedResult","groupKeys","currKey","currGroupValue","cloneEmptyGroups","lineTerminatorPattern","currModePatternsLength","currCharCodeToPatternIdxToConfig","modeStack","emptyArray","getPossiblePatterns","getPossiblePatternsSlow","getPossiblePatternsOptimized","possiblePatterns","pop_mode","popToken","newMode","last","modeCanBeOptimized","push_mode","currConfig","nextCharCode","chosenPatternIdxToConfig","chosenPatternsLength","singleCharCode","longerAltLength","longerAltConfig","longerAltPattern","foundTerminator","lastLTEndOffset","numOfLTsInMatch","errorStartOffset","errorLine","errorColumn","foundResyncPoint","tokens","pushMode","newLastIndex","lastLTIdx","lastCharIsLT","fixForEndingInLT","oldColumn","endOffset","tokenVector","tokenToAdd","POP_MODE","createToken","createTokenInternal","EOF","tokenMatcher","defaultParserErrorProvider","buildMismatchTokenMessage","expected","actual","previous","ruleName","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","errSuffix","allLookAheadPaths","currAltPaths","nextValidTokenSequences","currPath","currTokenType","itemMsg","buildEarlyExitMessage","expectedIterationPaths","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","topLevelName","duplicateProd","dslName","extraArgument","buildNamespaceConflictError","buildAlternationPrefixAmbiguityError","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","buildLeftRecursionError","leftRecursionPath","currRule","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName","GastRefResolverVisitor","nameToTopRule","errMsgProvider","resolveRefs","currTopLevel","ParserDefinitionErrorType","UNRESOLVED_SUBRULE_REF","unresolvedRefName","setter","accumulator","initializer","AbstractNextPossibleTokensWalker","possibleTokTypes","nextProductionName","nextProductionOccurrence","isAtEndOfPath","ruleStack","reverse","occurrenceStack","updateExpectedNext","NextAfterTokenWalker","nextTerminalName","nextTerminalOccurrence","lastTok","lastTokOccurrence","restProd","AbstractNextTerminalAfterProductionWalker","topRule","isEndOfRule","NextTerminalAfterManyWalker","firstAfterMany","NextTerminalAfterManySepWalker","firstAfterManySep","NextTerminalAfterAtLeastOneWalker","firstAfterAtLeastOne","NextTerminalAfterAtLeastOneSepWalker","atleastOneSepProd","firstAfterfirstAfterAtLeastOneSep","possiblePathsFrom","targetDef","maxLength","getAlternativesForProd","newDef","currAlt","partialPath","suffixDef","nextPossibleTokensAfter","initialDef","tokMatcher","maxLookAhead","EXIT_NON_TERMINAL","EXIT_NON_TERMINAL_ARR","EXIT_ALTERNATIVE","foundCompletePath","tokenVectorLength","minimalAlternativesIndex","possiblePaths","def","currDef","currRuleStack","currOccurrenceStack","nextPath","nextIdx","nextTokenType","nextTokenOccurrence","newRuleStack","newOccurrenceStack","nextPathWithout","nextPathWith","secondIteration","separatorGast","nthRepetition","currAltPath","expandTopLevelRule","newCurrOccurrenceStack","PROD_TYPE","getProdType","OPTION","REPETITION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","ALTERNATION","getLookaheadPaths","prodType","maxLookahead","getLookaheadPathsForOr","getLookaheadPathsForOptionalProd","buildAlternativesLookAheadFunc","dynamicTokensEnabled","numOfAlts","areAllOneTokenLookahead","orAlts","predicates","GATE","t","currNumOfPaths","currPredicate","currPathLength","nextToken","LA","singleTokenAlts","choiceToAlt","currExtendingType","buildSingleAlternativeLookaheadFunction","numOfPaths","singleTokensTypes","expectedTokenUniqueKey","RestDefinitionFinderWalker","targetOccurrence","targetProdType","restDef","checkIsTarget","expectedProdType","InsideDefinitionFinderVisitor","targetRef","expectedProdName","initializeArrayOfArrays","pathToHashKeys","longerKeys","currShorterKey","categoriesKeySuffix","isUniquePrefixHash","altKnownPathsKeys","searchPathKeys","currAltIdx","otherAltKnownPathsKeys","searchIdx","lookAheadSequenceFromAlternatives","altsDefs","partialAlts","finalResult","altsHashes","dict","newData","pathLength","currDataset","altIdx","currAltPathsAndSuffixes","currPathIdx","currPathPrefix","prefixKeys","currAltResult","containsPath","newPartialPathsAndSuffixes","ruleGrammar","insideDefVisitor","insideDef","afterDef","searchPath","compareOtherPath","otherPath","searchTok","otherTok","areTokenCategoriesNotUsed","lookAheadPaths","singleAltPaths","singlePath","identifyProductionForDuplicates","getExtraProductionArgument","OccurrenceValidationCollector","allProductions","subrule","option","manySep","atLeastOne","atLeastOneSep","many","or","validateNoLeftRecursion","nextNonTerminals","getFirstNoneTerminal","LEFT_RECURSION","validNextSteps","errorsFromNextSteps","currRefRule","firstProd","currSubDef","isFirstOptional","hasMore","rest","OrCollector","alternations","RepetitionCollector","MISMATCHED_TOKEN_EXCEPTION","NO_VIABLE_ALT_EXCEPTION","EARLY_EXIT_EXCEPTION","NOT_ALL_INPUT_PARSED_EXCEPTION","RECOGNITION_EXCEPTION_NAMES","isRecognitionException","RecognitionException","resyncedTokens","setPrototypeOf","captureStackTrace","MismatchedTokenException","previousToken","NoViableAltException","NotAllInputParsedException","EarlyExitException","EOF_FOLLOW_KEY","IN_RULE_RECOVERY_EXCEPTION","InRuleRecoveryException","attemptInRepetitionRecovery","prodFunc","lookaheadFunc","dslMethodIdx","prodOccurrence","nextToksWalker","notStuck","getKeyForAutomaticLookahead","firstAfterRepInfo","firstAfterRepMap","currRuleName","getCurrRuleFullName","getGAstProductions","expectTokAfterLastMatch","nextTokIdx","RULE_STACK","shouldInRepetitionRecoveryBeTried","tryInRepetitionRecovery","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","ruleIdx","LLkLookaheadStrategy","DEFAULT_PARSER_CONFIG","validate","leftRecursionErrors","emptyAltErrors","validateEmptyOrAlternatives","ambiguousAltsErrors","validateAmbiguousAlternationAlternatives","emptyRepetitionErrors","validateSomeNonEmptyLookaheadPath","currTopRule","orCollector","ors","currOr","exceptLast","currAlternative","possibleFirstInAlt","NONE_LAST_EMPTY_ALT","validateEmptyOrAlternative","globalMaxLookahead","currOccurrence","actualMaxLookahead","altsAmbiguityErrors","foundAmbiguousPaths","identicalAmbiguities","altsCurrPathAppearsIn","currOtherAlt","currOtherAltIdx","currAmbDescriptor","ambgIndices","AMBIGUOUS_ALTS","checkAlternativesAmbiguities","altsPrefixAmbiguityErrors","pathsAndIndices","currPathsAndIdx","currPathAndIdx","targetIdx","targetPath","prefixAmbiguitiesPathsAndIndices","searchPathAndIdx","prefix","otherTokType","currAmbPathAndIdx","AMBIGUOUS_PREFIX_ALTS","checkPrefixAlternativesAmbiguities","topLevelRules","collectorVisitor","allRuleProductions","currProd","pathsInsideProduction","NO_NON_EMPTY_LOOKAHEAD","buildLookaheadForAlternation","laFuncBuilder","buildLookaheadFuncForOr","buildLookaheadForOptional","lookaheadBuilder","buildLookaheadFuncForOptionalProd","dslMethods","repetitionWithSeparator","repetitionMandatory","repetitionMandatoryWithSeparator","setNodeLocationOnlyOffset","currNodeLocation","newLocationInfo","isNaN","setNodeLocationFull","defineNameProp","nameValue","enumerable","writable","defaultVisit","ctx","param","childrenNames","childrenNamesLength","currChildArray","currChildArrayLength","currChild","CstVisitorDefinitionError","RECORDING_NULL_OBJECT","description","HANDLE_SEPARATOR","MAX_METHOD_IDX","pow","RFT","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","recordProd","prodConstructor","mainProdArg","handleSep","assertMethodIdxIsValid","prevProd","recordingProdStack","grammarAction","DEF","newProd","SEP","MAX_LOOKAHEAD","recordOrProd","hasOptions","newOrProd","IGNORE_AMBIGUITIES","currAltFlat","ALT","getIdxSuffix","KNOWN_RECORDER_ERROR","END_OF_FILE","NaN","outputCst","nodeLocationTracking","DEFAULT_RULE_CONFIG","recoveryValueFunc","resyncEnabled","derivedCtor","baseCtors","EMPTY_ALT","Parser","performSelfAnalysis","parserInstance","defErrorsMsgs","selfAnalysisDone","className","enableRecording","definedRulesNames","originalGrammarAction","recordedRuleGast","topLevelRuleRecord","gastProductionsCache","disableRecording","resolverErrors","actualOptions","topRulesTable","topLevels","refResolver","definitionErrors","validationErrors","tokensMap","duplicateErrors","productionGroups","duplicates","currGroup","currDuplicates","defError","DUPLICATE_PRODUCTIONS","parameter","validateDuplicateProductions","termsNamespaceConflictErrors","tokenNames","currToken","CONFLICT_TOKENS_RULES_NAMESPACE","checkTerminalAndNoneTerminalsNameSpace","tooManyAltsErrors","curRule","TOO_MANY_ALTS","validateTooManyAlts","duplicateRulesError","allRules","occurrences","DUPLICATE_RULE_NAME","validateRuleDoesNotAlreadyExist","lookaheadValidationErrors","lookaheadValidationErrorMessages","lookaheadStrategy","errorMessage","assign","CUSTOM_LOOKAHEAD_VALIDATION","validateLookahead","allFollows","topProductions","reSyncFollows","currRefsFollow","computeAllProdsFollows","resyncFollows","_b","initialize","preComputeLookaheadFunctions","DEFER_DEFINITION_ERRORS_HANDLING","tokenVocabulary","that","initErrorHandler","initLexerAdapter","initLooksAhead","initRecognizerEngine","initRecoverable","initTreeBuilder","initContentAssist","initGastRecorder","initPerformanceTracer","getTokenToInsert","tokToInsert","isInsertedInRecovery","canTokenTypeBeInsertedInRecovery","canTokenTypeBeDeletedInRecovery","grammarRule","grammarRuleArgs","lookAheadFunc","expectedTokType","reSyncTokType","findReSyncTokenType","savedLexerState","exportLexerState","passedResyncPoint","nextTokenWithoutResync","generateErrorMessage","SAVE_ERROR","SKIP_TOKEN","addToResyncTokens","importLexerState","isBackTracking","canPerformInRuleRecovery","getFollowsForInRuleRecovery","tokIdxInRule","grammarPath","getCurrentGrammarPath","getNextPossibleTokenTypes","tryInRuleRecovery","canRecoverWithSingleTokenInsertion","canRecoverWithSingleTokenDeletion","nextTok","consumeToken","expectedToken","mismatchedTok","possibleFollowsTokType","isInCurrentRuleReSyncSet","followKey","getCurrFollowKey","currentRuleReSyncSet","getFollowSetFromFollowKey","allPossibleReSyncTokTypes","flattenFollowSet","foundMatch","resyncTokType","currRuleShortName","getLastExplicitRuleShortName","currRuleIdx","getLastExplicitRuleOccurrenceIndex","prevRuleShortName","getPreviousExplicitRuleShortName","shortRuleNameToFullName","idxInCallingRule","inRule","buildFullFollowKeyStack","explicitRuleStack","explicitOccurrenceStack","RULE_OCCURRENCE_STACK","followStack","resyncTokens","reSyncTo","getHumanReadableRuleStack","currShortName","lookAheadFuncsCache","collectMethods","prodIdx","laFunc","fullRuleNameToShort","setLaFuncCache","computeLookaheadFunc","prodKey","prodMaxLookahead","dslMethodName","getLaFuncFromCache","CST_STACK","setNodeLocationFromToken","setNodeLocationFromNode","cstPostRule","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","location","fullRuleName","create","ruleCstNode","prevToken","consumedToken","rootCst","tokenTypeName","ruleCstResult","preCstNode","ruleResult","addNoneTerminalToCst","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","derivedConstructor","semanticProto","validateVisitor","semanticDefinitionErrors","visitorInstance","missingErrors","missingRuleNames","MISSING_METHOD","methodName","validateMissingCstMethods","errorMessages","currDefError","_RULE_NAMES","createBaseSemanticVisitorConstructor","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","baseConstructor","withDefaultsProto","createBaseVisitorConstructorWithDefaults","tokVector","tokVectorLength","newInput","soughtIdx","resetLexerState","moveToTerminatedState","getLexerPosition","shortRuleNameToFull","ruleShortNameIdx","subruleIdx","isBackTrackingStack","uniqueTokens","noTokenCategoriesUsed","tokenConstructor","defineRule","impl","shortName","invokeRuleWithTry","ruleInvocationStateUpdate","cst","invokeRuleCatch","ruleFinallyStateUpdate","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","recogError","partialCstResult","recoveredNode","optionInternal","actionORMethodDef","optionInternalLogic","orgLookaheadFunction","atLeastOneInternal","laKey","atLeastOneInternalLogic","raiseEarlyExitException","ERR_MSG","doSingleRepetition","atLeastOneSepFirstInternal","atLeastOneSepFirstInternalLogic","separatorLookAheadFunc","CONSUME","repetitionSepSecondInternal","manyInternal","manyInternalLogic","lookaheadFunction","manySepFirstInternal","manySepFirstInternalLogic","nextTerminalAfterWalker","beforeIteration","orInternal","altsOrOpts","altIdxToTake","raiseNoAltException","isAtEndOfInput","firstRedundantTok","subruleInternal","ruleToCall","ARGS","subruleInternalError","consumeInternal","consumeInternalError","eFromConsumption","consumeInternalRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","savedRuleStack","lexerState","reloadRecogState","fullName","ACTION","consume","CONSUME1","CONSUME2","CONSUME3","CONSUME4","CONSUME5","CONSUME6","CONSUME7","CONSUME8","CONSUME9","SUBRULE","SUBRULE1","SUBRULE2","SUBRULE3","SUBRULE4","SUBRULE5","SUBRULE6","SUBRULE7","SUBRULE8","SUBRULE9","OPTION1","OPTION2","OPTION3","OPTION4","OPTION5","OPTION6","OPTION7","OPTION8","OPTION9","OR","OR1","OR2","OR3","OR4","OR5","OR6","OR7","OR8","OR9","MANY","MANY1","MANY2","MANY3","MANY4","MANY5","MANY6","MANY7","MANY8","MANY9","MANY_SEP","MANY_SEP1","MANY_SEP2","MANY_SEP3","MANY_SEP4","MANY_SEP5","MANY_SEP6","MANY_SEP7","MANY_SEP8","MANY_SEP9","AT_LEAST_ONE","AT_LEAST_ONE1","AT_LEAST_ONE2","AT_LEAST_ONE3","AT_LEAST_ONE4","AT_LEAST_ONE5","AT_LEAST_ONE6","AT_LEAST_ONE7","AT_LEAST_ONE8","AT_LEAST_ONE9","AT_LEAST_ONE_SEP","AT_LEAST_ONE_SEP1","AT_LEAST_ONE_SEP2","AT_LEAST_ONE_SEP3","AT_LEAST_ONE_SEP4","AT_LEAST_ONE_SEP5","AT_LEAST_ONE_SEP6","AT_LEAST_ONE_SEP7","AT_LEAST_ONE_SEP8","AT_LEAST_ONE_SEP9","RULE","implementation","ruleImplementation","OVERRIDE_RULE","ruleErrors","INVALID_RULE_OVERRIDE","validateRuleIsOverridden","BACKTRACK","orgState","getSerializedGastProductions","topRules","_errors","ruleOccurrenceStack","newErrors","userDefinedErrMsg","insideProdPaths","actualTokens","errMsgTypes","lookAheadPathsPerAlternative","computeContentAssist","startRuleName","precedingInput","startRuleGast","topRuleName","topProduction","RECORDING_PHASE","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION_RECORD","BACKTRACK_RECORD","LA_RECORD","newTopLevelRule","originalError","mutabilityError","JSON","stringify","newNoneTerminal","userTraceInitPerf","traceIsNumber","baseCtor","baseProto","getOwnPropertyNames","propName","basePropDescriptor","getOwnPropertyDescriptor","EmbeddedActionsParser","configClone","buildATNKey","AbstractTransition","isEpsilon","AtomTransition","EpsilonTransition","RuleTransition","ruleStart","followState","atn","production","tokenRef","currentRule","nonTerminal","ruleToStartState","addTransition","ruleRef","defineDecisionState","makeAlts","optional","handle","epsilon","decisionMap","block","starState","star","repetitionSep","plusState","plus","repetitionMandatorySep","handles","altsLength","transition","transitions","isRuleTransition","ruleTransition","removeState","makeBlock","sep","blkStart","blkEnd","loop","loopback","loopEnd","decisionStates","decision","buildRuleHandle","stop","ruleToStopState","partial","epsilonOnlyTransitions","nextTokenWithinRule","stateNumber","states","DFA_ERROR","ATNConfigSet","configs","finalize","getATNConfigKey","stack","createDFACache","startState","predicateSet","atnStartState","PredicateSet","is","EMPTY_PREDICATES","LLStarLookaheadStrategy","logging","ruleLength","createRuleStartAndStopATNStates","ruleBlock","createATN","dfas","decisionLength","decisionToDFA","initATNSimulator","decisionIndex","isLL1Sequence","prediction","gate","adaptivePredict","g","sequences","allowEmpty","fullSet","altSet","indices","dfaCaches","dfa","addDFAState","newDFAState","atnState","numberOfTransitions","closure","computeStartState","performLookahead","s0","previousD","d","edges","computeLookaheadTarget","buildAdaptivePredictError","isAcceptState","reach","intermediate","skippedStopStates","transitionLength","getReachableTarget","hasConfigInRuleStopState","computeReachSet","addDFAEdge","predictedAlt","getUniqueAlt","uniqueAlt","allConfigsInRuleStopStates","altSets","configToAlts","getConflictingAltSets","hasConflictingAltSet","hasStateAssociatedWithOneAlt","hasConflictTerminatingPrediction","reportLookaheadAmbiguity","buildAmbiguityError","nextTransitions","actualToken","possibleTokenTypes","tokenPath","mapKey","p","atnStack","getEpsilonTarget","DocumentUri","URI","integer","uinteger","Position","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","TextDocumentIdentifier","VersionedTextDocumentIdentifier","OptionalVersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItemLabelDetails","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","WorkspaceSymbol","DocumentSymbol","CodeActionKind","CodeActionTriggerKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","SemanticTokenTypes","SemanticTokenModifiers","SemanticTokens","InlineValueText","InlineValueVariableLookup","InlineValueEvaluatableExpression","InlineValueContext","InlayHintKind","InlayHintLabelPart","InlayHint","StringValue","InlineCompletionItem","InlineCompletionList","InlineCompletionTriggerKind","SelectedCompletionInfo","InlineCompletionContext","WorkspaceFolder","TextDocument","Is","MIN_VALUE","MAX_VALUE","Number","candidate","objectLiteral","one","two","three","four","uri","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","Comment","Imports","Region","startCharacter","endCharacter","kind","collapsedText","defined","Warning","Information","Hint","Unnecessary","Deprecated","href","severity","relatedInformation","codeDescription","title","command","newText","insert","position","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","change","version","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Module","Property","Unit","Value","Enum","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Operator","TypeParameter","asIs","adjustIndentation","detail","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","Key","Null","containerName","selectionRange","deprecated","tags","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","Invoked","Automatic","diagnostics","only","triggerKind","kindOrCommandOrEdit","checkKind","edit","isPreferred","data","tabSize","insertSpaces","parent","resultId","variableName","caseSensitiveLookup","expression","frameId","stoppedLocation","Parameter","tooltip","textEdits","paddingLeft","paddingRight","createSnippet","insertText","filterText","selectedCompletionInfo","mergeSort","compare","leftIdx","rightIdx","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","diff","lastModifiedOffset","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","ch","low","high","mid","lineOffset","nextLineOffset","check","CstNodeBuilder","nodeStack","buildRootNode","RootCstNodeImpl","buildCompositeNode","compositeNode","CompositeCstNodeImpl","buildLeafNode","leafNode","LeafCstNodeImpl","removeNode","construct","addHiddenTokens","hiddenTokens","hiddenNode","addHiddenToken","tokenStart","tokenEnd","childStart","childEnd","AbstractCstNode","_astNode","_offset","_length","_hidden","_tokenType","_range","CstNodeContainer","firstNonHiddenNode","lastNonHiddenNode","firstNode","lastNode","_rangeCache","firstRange","lastRange","addParents","unshift","_text","DatatypeSymbol","isDataTypeNode","withRuleSuffix","endsWith","AbstractLangiumParser","services","_unorderedGroups","lexer","wrapper","ChevrotainWrapper","ParserConfig","ParserErrorMessageProvider","choices","wrapOr","wrapOption","wrapMany","wrapAtLeastOne","isRecording","IS_RECORDING","unorderedGroups","getRuleStack","wrapSelfAnalysis","LangiumParser","nodeBuilder","assignmentMap","linker","references","Linker","converter","astReflection","fragment","ruleMethod","DEFINE_RULE","startImplementation","bind","mainRule","parse","lexerResult","clear","lexerErrors","parserErrors","err","wrapConsume","isValidToken","assignment","isCrossRef","getAssignment","convertedValue","convert","operator","subruleResult","wrapSubrule","performSubruleAssignment","resultKind","assignWithoutOverride","newItem","$containerProperty","$containerIndex","linkContentToContainer","typeMetaData","genericNode","assignMandatoryProperties","buildReference","existingValue","newValue","AbstractParserErrorMessageProvider","LangiumParserErrorMessageProvider","LangiumCompletionParser","elementStack","lastElementStack","nextTokenIndex","stackSize","resetState","tokenIndex","keepStackSize","resetStackSize","removeUnexpectedElements","before","after","defaultConfig","useDefaultLookahead","createParser","parserContext","reachable","parserRules","buildElement","buildRules","ignoreGuard","method","buildKeyword","buildAction","buildCrossReference","ruleCall","namedArgs","buildPredicate","ruleArgs","ruleTarget","buildRuleCallPredicate","getRule","getToken","buildRuleCall","methods","predicatedMethod","getGuardCondition","buildAlternatives","orIdx","idFunc","lParser","wrapped","groupState","trackedAlternatives","delete","buildUnorderedGroup","buildGroup","condition","isConjunction","isNegation","isParameterReference","isBooleanLiteral","true","guardCondition","crossRef","assignTerminal","getRuleName","DefaultTokenBuilder","buildTokens","reachableRules","buildTerminalTokens","terminalToken","buildTerminalToken","requiresCustomPattern","regexPatternFunction","stickyRegex","sort","buildKeywordToken","buildKeywordPattern","findLongerAlt","getCaseInsensitivePattern","longerAlts","re","process","tmp","appendRaw","nbChars","substr","appendOptional","partialRegExp","partialMatches","DefaultValueConverter","nameAssigment","getCrossReferenceTerminal","convertInt","convertString","convertID","_c","getRuleType","convertNumber","convertBoolean","convertBigint","convertDate","convertEscapeCharacter","BigInt","lastTick","isOperationCancelled","async","interruptAndCheck","now","Promise","resolve","setImmediate","setTimeout","isCancellationRequested","promise","reject","arg","isIncremental","getWellformedRange","addedLineOffsets","computeLineOffsets","isFull","ensureBeforeEOL","isEOL","rangeLength","LIB","isAtLineStart","textOffset","getWellformedEdit","spans","r","o","h","cwd","normalize","isAbsolute","relative","f","l","_makeLong","dirname","basename","extname","format","dir","base","ext","delimiter","win32","posix","toStringTag","Utils","P","platform","navigator","userAgent","scheme","authority","query","isUri","fsPath","with","m","C","file","y","toJSON","revive","_formatted","external","_fsPath","_sep","$mid","encodeURIComponent","decodeURIComponent","A","w","joinPath","resolvePath","UriUtils","DocumentState","ValidationCategory","DocumentValidator","Disposable","equals","fromPath","toPath","fromParts","split","toParts","repeat","DefaultLangiumDocumentFactory","serviceRegistry","textDocuments","workspace","TextDocuments","fileSystemProvider","FileSystemProvider","fromUri","cancellationToken","readFile","createAsync","fromTextDocument","fromString","fromModel","model","$model","parseResult","createLangiumDocument","cancelToken","parseAsync","Parsed","textDocumentGetter","createTextDocumentGetter","oldText","getServices","AsyncParser","textDoc","DefaultLangiumDocuments","documentMap","langiumDocumentFactory","LangiumDocumentFactory","all","addDocument","uriString","getOrCreateDocument","createDocument","then","hasDocument","invalidateDocument","langiumDoc","Changed","precomputedScopes","deleteDocument","DefaultLinker","langiumDocuments","LangiumDocuments","scopeProvider","ScopeProvider","astNodeLocator","AstNodeLocator","link","doLink","_ref","getCandidate","_nodeDescription","documentUri","linkedNode","loadAstNode","createLinkingError","unlink","getScope","getElement","refNode","refText","$refNode","refData","getLinkedNode","ComputedScopes","descr","$nodeDescription","nodeDescription","doc","getAstNode","targetDescription","referenceType","DefaultNameProvider","getName","isNamed","getNameNode","DefaultReferences","nameProvider","NameProvider","IndexManager","nodeLocator","findDeclaration","sourceCstNode","findAssignment","nodeElem","nameNode","isChildNode","findDeclarationNode","targetNode","findReferences","refs","includeDeclaration","getReferenceToSelf","indexReferences","findAllReferences","getAstNodePath","sourceUri","sourcePath","segment","local","MultiMap","addAll","entriesGroupedByKey","BiMap","inverse","getKey","DefaultScopeComputation","descriptions","AstNodeDescriptionProvider","computeExports","computeExportsForNode","parentNode","exportNode","createDescription","computeLocalScopes","scopes","processNode","StreamScope","outerScope","getAllElements","MapScope","localName","elementStream","DisposableCache","toDispose","isDisposed","onDispose","disposable","throwIfDisposed","SimpleCache","provider","ContextCache","contextKey","cacheForContext","contextCache","documentCache","WorkspaceCache","sharedServices","DocumentBuilder","onUpdate","DefaultScopeProvider","indexManager","globalScopeCache","precomputed","currentNode","allDescriptions","desc","getGlobalScope","createScope","createScopeForNodes","_context","allElements","isIntermediateReference","DefaultJsonSerializer","ignoreProperties","commentProvider","CommentProvider","serialize","specificReplacer","replacer","defaultReplacer","currentDocument","space","deserialize","linkNode","sourceText","textRegions","comments","uriConverter","_d","refValue","targetDocument","$ref","$error","addAstNodeRegionWithAssignmentsTo","$textRegion","documentURI","$sourceText","comment","getComment","$comment","createDocumentSegment","assignments","propertyAssignments","findNodesForProperty","containerProperty","containerIndex","propertyName","reviveReference","mutable","getRefNode","fragmentIndex","DefaultServiceRegistry","singleton","diagnosticData","ValidationRegistry","checksRecord","thisObj","category","wrapValidationException","addEntry","getChecks","checks","DefaultDocumentValidator","validationRegistry","validation","metadata","validateDocument","processLexingErrors","stopAfterLexingErrors","LexingError","processParsingErrors","stopAfterParsingErrors","ParsingError","processLinkingErrors","stopAfterLinkingErrors","LinkingError","validateAst","lexerError","diagnostic","toDiagnosticSeverity","getSource","parserError","linkingError","info","containerType","toDiagnostic","validationItems","acceptor","getDiagnosticRange","treeIterator","keywordNodes","childNode","findNodesForKeywordInternal","findNodeForKeyword","DefaultAstNodeDescriptionProvider","nameNodeSegment","nameSegmentGetter","nameSegment","selectionSegment","DefaultReferenceDescriptionProvider","createDescriptions","targetNodeDescr","refCstNode","docUri","DefaultAstNodeLocator","segmentSeparator","indexSeparator","containerPath","newSegment","getPathSegment","currentValue","propertyIndex","DefaultConfigurationProvider","_ready","settings","workspaceConfig","ready","params","capabilities","configuration","initialized","languages","section","lang","toSectionName","fetchConfiguration","configToUpdate","conf","updateSectionConfiguration","updateConfiguration","getConfiguration","sectionName","DefaultDocumentBuilder","updateBuildOptions","updateListeners","buildPhaseListeners","buildState","documentBuildWaiters","currentState","build","documents","Validated","IndexedReferences","previousCategories","validationChecks","completed","emitUpdate","buildDocuments","changed","deleted","deletedUri","changedUri","newDocument","allChangedUris","shouldRelink","rebuildDocuments","Linked","changedUris","isAffected","prepareBuild","runCancelable","IndexedContent","updateContent","scopeComputation","ScopeComputation","updateReferences","toBeValidated","shouldValidate","targetState","filtered","notifyBuildPhase","onBuildPhase","waitUntil","uriOrToken","buildDisposable","cancelDisposable","onCancellationRequested","listeners","getBuildOptions","validator","validationSetting","DefaultIndexManager","symbolIndex","symbolByTypeIndex","referenceIndex","astNodePath","targetDocUri","docRefs","refDescr","nodeType","uris","documentUris","getFileDescriptions","indexData","ReferenceDescriptionProvider","DefaultWorkspaceManager","initialBuildOptions","documentBuilder","mutex","WorkspaceLock","folders","workspaceFolders","_params","write","initializeWorkspace","performStartup","collector","loadAdditionalDocuments","wf","getRootFolder","traverseFolder","_folders","_collector","workspaceFolder","folderPath","readDirectory","includeEntry","isDirectory","isFile","_workspaceFolder","DefaultLexer","toTokenTypeDictionary","lexerTokens","isTokenTypeDictionary","chevrotainLexer","chevrotainResult","isIMultiModeLexerDefinition","res","isTokenTypeArray","getLines","tagRegex","inlineTagRegex","buildInlineTokens","lineIndex","characterIndex","matchIndex","startContent","tagName","endContent","nonWhitespaceRegex","whitespaceEndRegex","skipWhitespace","lastCharacter","parseJSDocElement","parseJSDocTag","parseJSDocText","JSDocLineImpl","inlines","appendEmptyLine","firstToken","lastToken","lines","parseJSDocInline","JSDocTextImpl","parseJSDocLine","inline","tagToken","docLine","JSDocTagImpl","normalizeOptions","normalizeOption","escaped","JSDocCommentImpl","getTag","getAllTags","getTags","fillNewlines","toMarkdown","renderTag","toMarkdownDefault","rendered","tag","display","displayStart","renderedLink","renderLink","renderLinkDefault","renderInlineTag","marker","JSDocDocumentationProvider","getDocumentation","normalizedOptions","isJSDoc","firstRegex","lastRegex","opts","currentLine","currentCharacter","tagMatch","fullMatch","inlineTagMatches","matchAll","startPosition","parseJSDocComment","parseJSDoc","documentationLinkRenderer","documentationTagRenderer","findNameInPrecomputedScopes","findNameInGlobalScope","_node","_tag","DefaultCommentProvider","grammarConfig","GrammarConfig","isAstNodeWithComment","getPreviousNode","findCommentNode","multilineCommentRules","DefaultAsyncParser","syncParser","DefaultWorkspaceLock","previousTokenSource","writeQueue","readQueue","cancelWrite","tokenSource","enqueue","read","queue","deferred","performNextOperation","shift","cancel","DefaultHydrator","grammarElementIdMap","tokenTypeIdMap","dehydrate","dehydrateAstNode","createDehyrationContext","astNodes","cstNodes","dehydrateCstNode","arr","dehydrateReference","getGrammarElementId","hydrate","createHydrationContext","hydrateCstNode","hydrateAstNode","hydrateCstLeafNode","setParent","hydrateReference","num","cstNodeObj","getGrammarElement","hydrated","getTokenType","createGrammarElementIdMap","id","createDefaultCoreModule","DocumentationProvider","nameRegexp","createGrammarConfig","prepareLangiumParser","createLangiumParser","CompletionParser","createCompletionParser","References","serializer","Hydrator","JsonSerializer","createDefaultSharedCoreModule","WorkspaceManager","ConfigurationProvider","inject","module1","module2","module3","module4","module5","module6","module7","module8","module9","_inject","_merge","merge","m1","m2","isProxy","module","injector","proxy","Proxy","deleteProperty","_resolve","ownKeys","Reflect","__requested__","cause","value2","value1","EmptyFileSystemProvider","EmptyFileSystem","minimalGrammarModule","minimalSharedGrammarModule","loadGrammarFromJson","json","createMinimalGrammarServices","customizer","objValue","paths","InfoTokenBuilder","InfoModule","createInfoServices","Info","stringArray","elem","remainder","PieTokenBuilder","PieValueConverter","PieModule","createPieServices","Pie","parsers","initializers","createInfoServices2","packet","createPacketServices2","pie","createPieServices2","architecture","createArchitectureServices","createArchitectureServices2","Architecture","gitGraph","createGitGraphServices2","diagramType","MermaidParseError","_ral","RAL","install","ral","events_1","CancellationToken","Cancelled","shortcutEvent","MutableToken","_isCancelled","_emitter","_token","ArchitectureTokenBuilder","ArchitectureValueConverter","ArchitectureModule"],"sourceRoot":""}