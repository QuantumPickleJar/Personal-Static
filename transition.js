const basePath=window.location.hostname.includes("github.io")?"/Personal-Static/":"/";function loadBarba(){const e=document.createElement("script");e.src="https://unpkg.com/@barba/core",e.onload=initBarba,e.onerror=()=>{console.error("Failed to load Barba.js. Falling back to normal page loads.")},document.head.appendChild(e)}function initBarba(){"undefined"!=typeof barba?(console.log("Initializing Barba.js transitions"),barba.init({debug:!0,transitions:[{name:"default-transition",leave:e=>new Promise((t=>{const a=e.current.container;a.classList.add("page-exit"),a.querySelector("#sidebar")&&a.querySelector("#sidebar").classList.contains("slide-left")&&a.querySelector("#sidebar").classList.remove("slide-left"),setTimeout(t,300)})),enter:e=>new Promise((t=>{const a=e.next.container;a.classList.add("page-enter"),setTimeout((()=>{if([{id:"headerContainer",path:"header.html"},{id:"sidebarContainer",path:"sidebar.html"},{id:"footerContainer",path:"footer.html"}].forEach((e=>{a.querySelector(`#${e.id}`)&&!a.querySelector(`#${e.id}`).innerHTML.trim()&&(console.log(`Loading partial ${e.path} after transition`),window.loadPartial(e.id,e.path))})),a.classList.remove("page-enter"),window.location.pathname.includes("projects.html")){console.log("Barba transition to projects page detected, checking if projects need initialization");const e=a.querySelector("#projectsGallery");if(e&&(!e.innerHTML||""===e.innerHTML.trim())){console.log("Projects gallery is empty, triggering initialization");const e=new CustomEvent("initializeProjects");document.dispatchEvent(e)}}t()}),300)}))}]})):console.error("Barba.js still not available after loading attempt.")}document.addEventListener("DOMContentLoaded",(()=>{"undefined"==typeof barba?(console.warn("Barba.js is not loaded. Loading it dynamically..."),loadBarba()):initBarba()})),window.loadPartial=async function(e,t){try{const a=window.location.hostname.includes("github.io")?"/Personal-Static/":"/",i=await import(`${a}main.js`);if(i&&"function"==typeof i.loadPartial)await i.loadPartial(e,t);else{console.log(`Fallback: Loading partial ${t} into ${e}`);const a=await fetch(`partials/${t}`,{cache:"no-store"});if(!a.ok)throw new Error(`Failed to load partial ${t}`);{const t=await a.text(),i=document.getElementById(e);i&&(i.innerHTML=t,setTimeout((()=>{i.classList.contains("slide-left")&&i.classList.remove("slide-left"),i.classList.add("loaded")}),100))}}}catch(a){console.error("Error in window.loadPartial:",a);const i=document.getElementById(e);i&&(i.innerHTML=`<div class="error-partial">Failed to load ${t}.</div>`)}};