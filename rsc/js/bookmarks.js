async function fetchBookmarks(){console.log("Fetching bookmarks from ./rsc/json/bookmarks.json");try{const e=await fetch("./rsc/json/bookmarks.json");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const o=await e.json();console.log("Bookmarks fetched successfully:",o),populateCategories(o),displayBookmarks(o),document.getElementById("bookmarkCategory").addEventListener("change",(()=>{displayBookmarks(o)}))}catch(e){console.error("Error fetching bookmarks:",e)}}function populateCategories(e){const o=document.getElementById("bookmarkCategory");o.innerHTML="";const t=Array.from(new Set(e.map((e=>e.category)).filter(Boolean))),n=document.createElement("option");n.value="all",n.textContent="All",o.appendChild(n),t.forEach((e=>{const t=document.createElement("option");t.value=e,t.textContent=e,o.appendChild(t)}))}function createBookmarkElement(e){const o=document.createElement("div");o.classList.add("bookmark");const t=document.createElement("a");t.href=e.url,t.textContent=e.title,o.appendChild(t);const n=document.createElement("p");return n.textContent=e.category,o.appendChild(n),o}function displayBookmarks(e){const o=document.getElementById("bookmarksContainer");o.innerHTML="";const t=document.getElementById("bookmarkCategory").value;("all"===t?e:e.filter((e=>e.category===t))).forEach((e=>{const t=document.createElement("div");t.className="bookmark",t.innerHTML=`<a href="${e.url}" target="_blank">${e.title}</a>`,o.appendChild(t)}))}document.addEventListener("DOMContentLoaded",(()=>{console.log("DOM fully loaded, starting bookmark fetch process."),fetchBookmarks()}));