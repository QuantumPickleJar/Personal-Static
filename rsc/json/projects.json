[
  {
    "id": "proj-ps2c",
    "title": "Planetside 2 Companion",
    "academic": true,
    "dates": "11-15-2018 to 12-20-2018",
    "status": "",
    "shortForm": "A dual-purpose app to allow general querying of player statistics and plugging into an EventStream from real-time game sessions via DaybreakGames' Census API.",
    "description": "<p>The Planetside 2 Companion project is a robust application designed to provide real-time game data and player statistics through a dual-purpose interface. The app leverages a suite of custom IValueConverters—such as FactionIdToImage, FactionIdToString, IntToColorString, UnixToLongTime, and WorldIdToString—to efficiently translate raw faction data into intuitive visuals and text. This design choice ensures that every event in the live feed is immediately clear and contextually enriched for the user.</p> <p>Beyond basic data integration, the project employs a sophisticated event-handling system that distinguishes between various in-game event types. By defining multiple payload classes (for example, FrontpageScoredPayload, FrontpageMetaPayload, VisualDefensePayload, and others) and using a dynamic DataTemplateSelector, the interface can seamlessly render the correct UI component for each event. This approach not only tackled the challenges of managing diverse data streams but also elevated the overall responsiveness and user engagement of the application.</p>",
    "stack": [
      "Xamarin",
      "Csharp",
      "JSON",
      "VSCommunity",
      "XML"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "uwo-rostar",
    "title": "RoStar Housing",
    "academic": true,
    "dates": "6-12-24 to 10-31-24",
    "status": "Complete",
    "shortForm": "Integrated the ability to query room numbers and relationally pull up the UUID of the booked student.",
    "description": "<p>The RoStar Housing project is a comprehensive solution aimed at streamlining housing data management through precise room number queries and student UUID lookups. Upgrading from .NET 3.1 to 6.X unlocked advanced debugging capabilities and enhanced Entity Framework features, which translated into improved performance and more reliable data operations. This migration was pivotal in setting a strong foundation for both current functionality and future scalability.</p> <p>One of the core challenges involved distinguishing between the RoomBase and RoomSpace components within the overall room hierarchy. By carefully designing the schema and leveraging tools like DataGrip, I ensured that table joins for the Resident schema were accurate and efficient. Even though parts of the original code were set aside into a separate branch, this methodical approach allowed us to retain valuable functionality while paving the way for future enhancements.</p>",
    "stack": [
      "jwt",
      "Docker",
      "VSCommunity",
      "NETCore",
      "ReSharper",
      "Postman",
      "DataGrip",
      "MermaidJS"
    ],
    "mermaid": "erDiagram\n    Hall {\n        int HallId PK\n        string HallName\n    }\n    RoomBase {\n\t    int RoomBaseId PK\n\t    string CustomString1    \n\t    string Description\n\t    int BedCapacity\n    }\n    Resident {\n        string CampusId PK\n        string FirstName\n        string PreferredFirstName\n        string LastName\n        int Gender\n        string GenderDescription\n        int Standing\n        int HallId FK \"Redundant, but necessary\"\n        RoomBase RoomBase \"may be null\"\n\t\tstring EMContactInfo\n        string EMContactRelation\n        string RoomNumber \"Redundant, but necessary\"\n    }\n    Hall ||--o{ RoomBase : contains\n    Resident }o--|| Hall : resides_in",
    "images": []
  },
  {
    "id": "uwo-dockerization",
    "title": "Orchestration (Docker-compose)",
    "academic": false,
    "dates": "5-29-23 to 9-29-23",
    "status": "Complete",
    "shortForm": "Multi-API project beckoned for dual-purpose support with run configurations.",
    "description": "<p>The Orchestration project focused on containerizing a suite of API services within the larger PortalAPI solution. By dockerizing several key services—including MyAdmin.API for authentication, TitanCard.API for validation, LostAndFound.API, and AdvisorWorksheet.API—the project achieved a modular architecture that facilitated rapid deployment and isolated troubleshooting. This containerized approach ensured that each service operated in a controlled environment while remaining seamlessly connected as part of an overarching system.</p> <p>A standout feature was the implementation of dual-purpose support, which provided two runtime configurations to accommodate different development workflows. This allowed our team to reliably debug containerized applications by hitting breakpoints in either configuration. Although pathing issues and the management of multiple root points initially presented significant challenges, a series of targeted hotfixes ultimately resulted in a streamlined deployment process that significantly improved overall development efficiency.</p>",
    "stack": [
      "Redis",
      "Docker",
      "dotNET",
      "Confluence",
      "VSCommunity",
      "VSCode",
      "NodeJs",
      "MermaidJS"
    ],
    "mermaid": "",
    "images": [],
    "relatedProjects": [
      "uwo-docker-guides"
    ]
  },
  {
    "id": "uwo-docker-guides",
    "title": "Docker Guides",
    "academic": false,
    "dates": "9-1-23 to 9-4-23",
    "status": "Complete",
    "shortForm": "Wrote a 3-page guide on how teammates could modify their environment to enhance debugging capabilities.",
    "description": "<p>The Docker Guides project was created as a detailed resource to demystify container orchestration and debugging for team members, particularly new hires. It provided clear, step-by-step instructions on integrating Docker support into Visual Studio, setting up individual Dockerfiles, and configuring a cohesive docker-compose environment. The guide’s practical examples and troubleshooting tips made complex container management more accessible and less intimidating.</p> <p>By integrating these guides into the onboarding training project, the documentation quickly proved its value. Teammates were able to resolve common issues more effectively, leading to smoother container management and faster ramp-up times. This initiative not only improved debugging workflows but also contributed to a more cohesive and well-informed development team.</p>",
    "stack": [
      "Obsidian",
      "Docker",
      "Confluence",
      "GitLab"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "media-server",
    "title": "Media Server",
    "academic": false,
    "dates": "",
    "status": "in-progress",
    "shortForm": "",
    "description": "<p>The Media Server project is an ambitious, in-progress initiative aimed at creating a versatile platform for managing and streaming multimedia content. The envisioned system is designed to handle various media types—supporting features like dynamic transcoding, real-time streaming, and comprehensive content management—all while providing an intuitive user interface. Scalability and modularity are central to its design, allowing for future enhancements as requirements evolve.</p> <p>Although still under active development, the project’s roadmap includes establishing a robust backend infrastructure, integrating cloud storage for media assets, and developing interactive interfaces tailored for both end-users and administrators. With clear milestones on the horizon, the Media Server promises to bridge the gap between traditional media management systems and modern, interactive platforms.</p>",
    "stack": [],
    "mermaid": "",
    "images": []
  },
  {
    "id": "vtm-portfolio",
    "title": "Personal Site",
    "academic": false,
    "dates": "12-18-24 to Present",
    "status": "In-Progress",
    "link": "https://github.com/QuantumPickleJar/Personal-Static",
    "shortForm": "Having a QR Code on your card warrants a website",
    "description": "<p>The Personal Site project serves as a dynamic portfolio and digital business card, linking directly to my resume and broader body of work. Built on the Jekyll platform and hosted on GitHub Pages, the site incorporates interactive elements—such as smooth Barba animations—that enhance the user experience and provide a modern, visually appealing interface. These design choices make the site not only a hub for professional information but also an engaging showcase of my technical and creative skills.</p> <p>In addition to its core functionality, the project offered valuable insights into AI-assisted coding. By experimenting with both VS Code and Visual Studio Community, I learned how different development environments influence coding efficiency and feature support. This exploration allowed me to fine-tune the site’s performance and presentation, resulting in a digital presence that effectively balances technical sophistication with aesthetic appeal.</p>",
    "stack": [
      "GitHub",
      "Copilot",
      "VSCode",
      "CSS3",
      "Javascript",
      "HTML5",
      "Webpack"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "vtm-ai-poster",
    "title": "Safe GenAI Flowchart",
    "academic": true,
    "dates": "",
    "status": "Complete",
    "shortForm": "A single graphic detailing principles, ordered steps, and guidelines for leveraging abstractions at a linguistic level.",
    "description": "<p>The Safe GenAI Flowchart project is an innovative visual tool designed to guide users through the responsible implementation of generative AI. By emphasizing high-level abstractions and strategic principles, the flowchart distills complex AI processes into clear, accessible steps. It underscores the importance of ethical usage, risk mitigation, and robust human oversight—key factors in deploying AI technologies safely.</p> <p>Inspired by a desire to simplify rather than overcomplicate the technical details, the flowchart adopts a non-technical, linguistic approach that resonates with both technical and non-technical stakeholders. This design choice ensures that the strategic guidelines remain front and center, promoting a balanced perspective on AI development that prioritizes safety and clarity over intricate, low-level detail.</p>",
    "stack": [
      "OpenAI",
      "Gemini",
      "Claude",
      "Tensorflow",
      "Keras",
      "Jupyter"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "flavorflav",
    "title": "FlavorFlav (Team Project)",
    "academic": true,
    "dates": "10-9-23 to 12-10-23",
    "status": "",
    "shortForm": "Recipe-oriented Social Media Platform",
    "description": "<p>The FlavorFlav project is a team-driven, recipe-oriented social media platform that distinguishes itself through innovative design choices—most notably, the implementation of an intelligent autocomplete feature using the Strategy design pattern. This advanced approach allowed the application to dynamically adapt to user input, providing a modern and responsive experience that enhanced overall usability. The integration of the Strategy pattern not only streamlined the user interface but also set a new standard within the team for innovative design.</p> <p>Stakeholders responded enthusiastically to the feature, noting its modern appeal and significant impact on the platform’s flow. By embracing this unique design, our team demonstrated a forward-thinking approach that blended creative problem solving with robust technical execution, ultimately elevating the project’s overall quality and user engagement.</p>",
    "stack": [
      "MAUI",
      "Flutter",
      "Dart",
      "VSCommunity",
      "Postgres",
      "Figma",
      "cockroachdb",
      "DBeaver"
    ],
    "mermaid": "erDiagram\n    USERS {\n      bigint user_id PK\n      varchar username\n      varchar email\n      varchar password\n      varchar profile_pic\n    }\n    \n    USER_SETTINGS {\n      bigint user_id PK \"FK to USERS\"\n      varchar settings\n    }\n    \n    DIETARY_PREFERENCES {\n      bigint user_id \"FK to USERS\"\n      varchar preference\n    }\n    \n    USER_FOLLOWING_USER {\n      bigint follower_user_id \"FK to USERS\"\n      bigint followed_user_id \"FK to USERS\"\n    }\n    \n    RECIPES {\n      bigint recipe_id PK\n      bigint author_id \"FK to USERS\"\n      int rating_sum\n      int rating_count\n      %% (other recipe-specific fields could exist)\n    }\n    \n    INGREDIENTS {\n      bigint ingredient_id PK\n      varchar name\n      %% (optional: quantity and unit columns may be defined here)\n    }\n    \n    RECIPE_INGREDIENTS {\n      bigint recipe_id \"FK to RECIPES\"\n      bigint ingredient_id \"FK to INGREDIENTS\"\n      varchar quantity\n      varchar unit\n    }\n    \n    USERS ||--|| USER_SETTINGS : \"has\"\n    USERS ||--o{ DIETARY_PREFERENCES : \"has\"\n    USERS ||--o{ USER_FOLLOWING_USER : \"follows\"\n    USERS ||--o{ RECIPES : \"authors\"\n    RECIPES ||--o{ RECIPE_INGREDIENTS : \"includes\"\n    INGREDIENTS ||--o{ RECIPE_INGREDIENTS : \"used in\"\n",
    "images": [
      "flavorflav/addrecipe_p1.png",
      "flavorflav/addrecipe_p2.png",
      "flavorflav/addrecipe_p2noqty.png",
      "flavorflav/addrecipe_p3_1.png",
      "flavorflav/dietaryrestrictions.png",
      "flavorflav/ingredientselector.png",
      "flavorflav/test_page.png",
      "flavorflav/timepickerdialog.png"
    ]
  },
  {
    "id": "uwo-surveyor",
    "title": "Athlete Surveyor",
    "academic": true,
    "dates": "5-10-2022 to 12-10-2022",
    "status": "Submitted",
    "link": "https://github.com/QuantumPickleJar/uwo_athlete_surveyor",
    "shortForm": "An app for faculty to check in on the well-being of students with form generation for reports.",
    "description": " <p>The Athlete Surveyor project was developed as an innovative tool to empower faculty members with a streamlined method for monitoring student well-being. Featuring dynamic form generation, the application allowed for the rapid creation of customizable surveys that could capture detailed insights on student progress and mental health. Although the project was ultimately unpublished, the extensive work poured into its data schema laid a solid foundation for adaptive reporting and flexible data analysis.</p> <p>By meticulously mapping out every detail of the data structure early in the development cycle, our team built a system that could easily adapt to changing requirements and evolving needs. This rigorous planning not only enhanced the app’s potential utility but also provided valuable insights into the importance of scalable architecture in creating tools for effective student support.</p>",
    "stack": [
      "Dart",
      "Flutter",
      "VSCode",
      "VSCommunity",
      "GitHub",
      "Figma",
      "DBeaver",
      "cockroachdb"
    ],
    "mermaid": "erDiagram\n    tbl_forms {\n        string form_id PK\n        string user_id FK\n        string form_title\n        string sport_id FK\n        datetime form_date_created\n    }\n    tbl_questions {\n        string question_id PK\n        string form_id FK\n        string content\n        int order_in_form\n        enum response_enum\n        string header\n        boolean res_required\n        string linked_file_key\n    }\n    \n    tbl_responses {\n        string response_id PK\n        string question_id FK\n        string request_id FK\n        string answer\n        enum response_type\n    }\n    tbl_sports {\n        string sport_id PK\n        string activity \n    }\n    tbl_requests {\n        string request_id PK\n        string form_id FK\n        string staff_id FK\n        datetime created_date\n    }\n    tbl_requestees {\n        string requestee_id PK\n        string request_id FK\n        string student_id FK\n        boolean completed\n        datetime completion_date\n    }\n    tbl_users {\n        string uuid_user PK\n        string username\n        string password\n        boolean is_admin\n        boolean is_temp_password\n        string first_name\n        string last_name\n    }\n    tbl_studentlist {\n        string student_id PK\n        string sport_id FK\n        string student_name\n        int grade\n    }\n    tbl_inbox {\n        string from_uuid FK\n        string to_uuid FK\n        datetime date_received\n        string subject_line\n        string body\n    }\n\n    tbl_forms ||--o{ tbl_questions : \"has\"\n    tbl_forms ||--o{ tbl_requests : \"used for\"\n    tbl_questions ||--o{ tbl_responses : \"asked in\"\n    tbl_requests ||--o{ tbl_requestees : \"sent to\"\n    tbl_responses ||--|{ tbl_requestees : \"submitted by\"\n    tbl_users ||--o{ tbl_forms : \"created by\"\n    tbl_users ||--o{ tbl_requests : \"makes\"\n    %% tbl_users ||--o{ tbl_requestees : \"is\"\n    tbl_users ||--o{ tbl_inbox : \"sends\/receives\"\n    tbl_studentlist ||--o{ tbl_requestees : \"is\"\n    %% tbl_studentlist ||--|{ tbl_sports : \"plays in\"\n    tbl_sports ||--|{ tbl_studentlist : \"plays in\"\n",
    "images": []
  },
  {
    "id": "fvtc-poi-tracker",
    "title": "POITracker",
    "academic": true,
    "dates": "1-12-2019 to 4-30-2019",
    "status": "Archived",
    "shortForm": "Product of a 5-week agile simulation for tracking changes.",
    "description": " <p>POITracker is a cross-platform application developed during an intensive five-week agile simulation focused on tracking changes and managing itineraries in real time. As a backend developer on the project, I was responsible for creating a REST API that seamlessly integrated with Google Maps, enabling dynamic location filtering and real-time itinerary updates. This integration provided users with a visually enriched experience that accurately depicted their travel routes and in-game events.</p> <p>The agile framework allowed our team to iterate rapidly over multiple sprints, continually refining the API and adapting to evolving requirements. Collaborative problem-solving and iterative development were key in overcoming technical challenges, ultimately resulting in a robust and scalable solution that highlighted the strengths of agile methodologies in real-world applications.</p>",
    "stack": [
      "Jira",
      "VSCommunity",
      "GoogleMaps",
      "AzureDevOps",
      "Canva",
      "Azure"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "temperature-tracker",
    "title": "Temperature Tracker",
    "academic": false,
    "dates": "9-20-23 to 12-15-23",
    "status": "In-progress",
    "shortForm": "Deploying bare-bone temperature units using a microcontroller and ESP-01 to relay readings via Wi-Fi.",
    "description": " <p>The Temperature Tracker project is a hardware-software integrated solution designed to monitor environmental conditions in real time. Utilizing an ATTiny85 microcontroller paired with an SHT40 sensor for humidity readings, the system transmits data via an ESP-01 module over Wi-Fi to an IFTTT endpoint for visualization. This setup enables continuous tracking of temperature and humidity trends with minimal latency and high reliability.</p> <p>One of the key technical challenges was establishing a reliable serial connection from the ATTiny85, which required overcoming limitations inherent to its Universal Serial Interface that emulates both I2C and SPI protocols. Despite these hurdles—and after several prototype iterations and Fritzing model refinements—the project successfully demonstrated a practical, low-cost approach to environmental monitoring.</p> ",
    "stack": [
      "cpp",
      "HTML5",
      "Express",
      "Websocket",
      "GitHub",
      "handlebars",
      "IFTTT"
    ],
    "mermaid": "",
    "images": [
      "iot/iot_hvac_lm35.png",
      "iot/iot_hvac_sht40.png"
    ]
  },
  {
    "id": "frugal-fashion",
    "title": "Frugal Fashion",
    "academic": true,
    "dates": "1-24-23 to 5-12-23",
    "status": "Complete",
    "shortForm": "A site built for a local fashion merchant with features for non-technical users.",
    "description": "<p>The Frugal Fashion project is a web-based solution crafted for a local fashion merchant, emphasizing ease of use for non-technical users. Designed to facilitate communication between athletic counselors and student athletes, the platform incorporated features for mental health tracking and progress reporting. Despite never reaching commercial deployment, the project showcased a complex and meticulously planned data schema that proved resilient under challenging circumstances, including unexpected team changes.</p> <p>One of the most significant challenges was developing a custom page editor that allowed clients to swap images and update content without relying on mainstream frameworks like Bootstrap. By leveraging a combination of JSON-driven content management, custom JavaScript, and EJS templating, I created dynamic cell classes that efficiently organized and displayed data. Furthermore, the innovative use of custom HTML components—such as a navigation bar, contact footer, and an image carousel integrated via the shadow DOM—demonstrated a creative solution to meet the client’s unique needs.</p> ",
    "stack": [
      "PugJS",
      "HTML5",
      "CSS3",
      "Javascript",
      "DBeaver",
      "cockroachdb"
    ],
    "mermaid": "",
    "images": [
      "frugal-fashion/frugal-fashion-mid-fidelity-mockup.png",
      "frugal-fashion/frugal-fashion-mid-fidelity-mockup-alt.png"
    ]
  },
  {
    "id": "workflow-playground",
    "title": "Workflow Playground",
    "academic": false,
    "dates": "12-4-2023 to 1-1-2024",
    "status": "Completed",
    "shortForm": "Experimenting with automated workflows bound to repositories.",
    "description": "<p>The Workflow Playground project served as an experimental sandbox for automating workflows and exploring continuous deployment integrations. In this environment, I delved into the capabilities of a TensorFlow network, experimenting with various learning strategies and architectural tweaks to observe their effects on model output. This hands-on approach provided deep insights into the optimization of machine learning pipelines and the practical challenges of continuous deployment.</p> <p>Although the project was not integrated into a larger application, the experiments conducted within the Playground revealed critical factors that influence neural network performance. By systematically testing different configurations, I was able to identify best practices for balancing model complexity with accuracy, thereby informing future projects and refining my approach to workflow automation in machine learning contexts.</p>",
    "stack": ["tensorflow", "keras", "Jupyter"],
    "mermaid": "",
    "images": []
  },
  {
    "id": "handwriting-visualizer-pipeline",
    "title": "Handwriting Visualizer Pipeline",
    "academic": true,
    "dates": "",
    "status": "",
    "link": "https://github.com/QuantumPickleJar/ImageTraining-A4/blob/dysgraphia_sample/MNist-custom.ipynb",
    "shortForm": "A variation on a handwriting recognition dataset handcrafted with a LiveScribe pen.",
    "description": "<p>The Handwriting Visualizer Pipeline project is a deep learning initiative aimed at exploring the capabilities of convolutional neural networks in handwriting recognition. Using the MNIST dataset as a benchmark, I developed a model that not only learned standard handwritten digits but also attempted to recognize my own unique handwriting. The architecture comprised a flattening input layer followed by dense layers with 200 and 100 neurons, respectively, culminating in a 10-neuron output layer.</p> <p>During evaluation, the model revealed a significant tendency to overfit on my personal handwriting, resulting in an accuracy of approximately 39% on unseen data. This outcome highlighted the challenges of generalizing from highly specific training data, while also providing valuable insights into the limitations and potential refinements necessary for more robust handwriting recognition systems.</p>",
    "stack": [
      "Python",
      "Jupyter",
      "Google CoLab",
      "Tensorflow"
    ],
    "mermaid": "",
    "images": []
  },
  {
    "id": "fwappa",
    "title": "Flutter UI Mockup",
    "academic": true,
    "dates": "10-15-23 to 12-10-23",
    "status": "Complete",
    "link": "https://github.com/QuantumPickleJar/",
    "shortForm": "Produce a Dart/Flutter UI mockup for a flight-tracking app.",
    "description": "<p>The Flutter UI Mockup project was focused on designing a sleek and intuitive interface for a flight-tracking application. I developed the UI for the airport selection page, concentrating on clear navigation and a modern aesthetic to facilitate the tracking of visited airports. Built using Dart and Flutter, the mockup showcased my ability to craft responsive, visually appealing user interfaces tailored to specific application needs.</p> <p>Although the project did not reach the stage of user testing, the development process offered a valuable opportunity to experiment with Flutter’s rich widget ecosystem and responsive layout techniques. Feedback from internal reviews highlighted the clarity and modernity of the design, reinforcing the importance of iterative UI design and user-centric development practices.</p>",
    "stack": [
      "Figma",
      "Canva",
      "Teams"
    ],
    "mermaid": "",
    "images": ["fwappa/lab3-select-airport-ui.png"]
  }
]
