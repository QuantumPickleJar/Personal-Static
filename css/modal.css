/* modal.css - Styles for the modal */

.modal {
  display: none; /* Hidden by default */
  position: fixed;
  z-index: 9999; /* Ensure it's on top of everything */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.5);
}


/* The actual white content box */
.modal-content {
  background-color: #fff;
  margin: 2% auto;
  width: 60%;           /* Adjust as needed */
  max-width: 800px;     /// Example max width
  max-height: 90vh;     /* Use max-height instead of fixed height */
  border-radius: 6px;
  /* position: relative; */
  display: flex;        /* We'll do vertical flex layout in the content */
  flex-direction: column;
}

/* Top container */
.modal-top {
  flex: 0 0 auto; 
  padding: 10px;
  border-bottom: 1px solid #ddd;
  display: flex;
  max-height: 375px;
}

/* Left 2/3 column inside top */
.modal-top-left {
  flex: 2;             /* 2/3 ratio */
  display: flex;
  flex-direction: column;
  max-height: 375px;
  overflow: hidden;
}

/* Ensure the carousel container fills its parent (which is already limited to 40% height) */
.modal-top-left .modal-images {
  height: 100%;
  overflow: hidden;
}

/* Right 1/3 column inside top */
.modal-top-right {
  flex: 1;             /* 1/3 ratio */
  display: flex;
  flex-direction: column;
  border-left: 1px solid #ddd;
  padding-left: 10px;
  overflow-y: auto;     /* If stack is tall, it scrolls */
  max-height: 375px;
  height: 100%;
}

.modal-top-right-upper {
  flex: 1 1 auto;
  overflow-y: auto;
}

.modal-top-right-lower {
  flex: 0 0 auto;
  border-top: 1px solid #ddd;
  padding: 8px 4px 0;
  font-size: 0.9rem;
  text-align: center;
}

/* Bottom container */
.modal-bottom {
  flex: 1;            /* Remaining space (60%) */
  padding: 15px;
  overflow-y: auto;   //Scroll if content is tall
}

.modal-image {
  max-width: 100px;
  margin-right: 8px;
  margin-bottom: 8px;
}

/* For the images area (carousel or just a row) */
.modal-images {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  flex: 1;           /* Fill remaining vertical space */
  overflow: hidden;  /* Prevent overflow */
}

/* Limit the carousel and its items to the container height */
.modal-images .carousel {
  width: 100%;
  max-height: 300px;
}
.modal-images .carousel-item {
  height: 400px;
}

/* Carousel must stay inside its bounds */
#projectImageCarousel {
  position: relative; // Ensures arrows are positioned relative to this container
  width: 100%;
  height: 375px;
}



.carousel-item img {
  object-fit: contain;
  max-height: 100%;
  height: auto;
  width: auto;
}

.carousel-control-prev,
.carousel-control-next {
  top: 50%; /* 50% of 375px = 187.5px from the top */
  transform: translateY(-50%);
}


/* Override Bootstrapâ€™s default carousel arrow icons to use black arrows */
.carousel-control-prev-icon,
.carousel-control-next-icon {
  width: 30px;
  height: 30px;
  background-color: rgba(0, 0, 0, 0.6); /* Make arrows visible */
  background-size: 100%;
  background-repeat: no-repeat;
  opacity: 0.8;
  border-radius: 50%;
}

.carousel-control-prev:hover,
.carousel-control-next:hover {
  opacity: 1;
}


.modal-images .carousel {
  width: 100%;
  max-height: 300px; 
}

.modal-images .carousel-item {
  height: 300px; /* Should match max-height above */
}

.modal-images .carousel-item img {
  object-fit: contain;
  height: 100%;
  width: 100%;
}

.stack-image {
  width: 32px;
  height: 32px;
  margin: 4px;
  object-fit: contain;
}

/* For vertical stack icons */
.vertical-stack {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

#modalStack {
  /* max-height: 200px; */
  overflow-y: auto;
}

/* Example stack-icon style */
.vertical-stack .stack-icon,
.vertical-stack .modal-image {
  max-width: 36px;
  max-height: 36px;
  object-fit: contain;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 20px;
  font-size: 2rem;
  cursor: pointer;
}

/* Center the fallback container and its image */
/* Styles for fallback placeholders */
.fallback-placeholder {
  display: block;
  margin: 0 auto;            /* Centers horizontally in its container */
  transform: scale(2.5);       /* Makes the image 3x larger */
  transform-origin: 50% 0%;  /* Ensures the scaling centers from the middle */
}